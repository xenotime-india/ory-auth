// Code generated for package consent by go-bindata DO NOT EDIT. (@generated)
// sources:
// migrations/sql/cockroach/12.sql
// migrations/sql/cockroach/13.sql
// migrations/sql/mysql/.gitkeep
// migrations/sql/mysql/10.sql
// migrations/sql/mysql/12.sql
// migrations/sql/mysql/13.sql
// migrations/sql/mysql/4.sql
// migrations/sql/mysql/5.sql
// migrations/sql/mysql/6.sql
// migrations/sql/mysql/7.sql
// migrations/sql/mysql/8.sql
// migrations/sql/postgres/.gitkeep
// migrations/sql/postgres/10.sql
// migrations/sql/postgres/12.sql
// migrations/sql/postgres/13.sql
// migrations/sql/postgres/4.sql
// migrations/sql/postgres/5.sql
// migrations/sql/postgres/6.sql
// migrations/sql/postgres/7.sql
// migrations/sql/postgres/8.sql
// migrations/sql/shared/.gitkeep
// migrations/sql/shared/1.sql
// migrations/sql/shared/11.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/shared/9.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/10_test.sql
// migrations/sql/tests/11_test.sql
// migrations/sql/tests/12_test.sql
// migrations/sql/tests/13_test.sql
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
// migrations/sql/tests/8_test.sql
// migrations/sql/tests/9_test.sql
package consent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrationsSqlCockroach12Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xcf\x73\xda\x3a\x10\x3e\xe3\xbf\x42\xb7\xc0\x3c\x32\xf3\x26\xef\xe5\x5d\x38\xf9\x61\xd1\x32\xa5\x26\x35\xa6\x4d\x4e\x1e\x21\xcb\xa0\xc6\x58\x54\x92\x93\x76\x3a\xfd\xdf\x3b\x06\xdb\xf8\xb7\x6c\x93\x64\xa6\x57\xeb\xdb\xd5\x7e\xbb\xdf\xee\x0a\xae\xaf\xc1\x5f\x7b\xba\xe5\x48\x12\xb0\x3e\x68\x53\x0b\xea\x36\x04\xb6\xfe\xff\x02\x82\xdd\x0f\x97\x23\x87\xa1\x50\xee\x6e\x1c\xcc\x02\x41\x02\xe9\x70\xf2\x2d\x24\x42\x82\xa1\x36\xc0\x3b\xe4\xfb\x24\xd8\x12\xf0\x84\x38\xde\x21\x3e\xfc\xf7\xef\x11\x30\x97\x36\x30\xd7\x8b\x05\xb8\xb3\xe6\x1f\x75\xeb\x01\x7c\x80\x0f\x63\x6d\xf0\x44\x38\xf5\x28\xe1\x95\xd8\xb1\x36\xc0\x3e\x8d\xdc\x53\x37\x05\xdc\xdc\xde\xe6\x10\x22\xdc\x7c\x25\x58\xd6\x9e\xc7\x91\x39\x21\xf7\x81\x24\xdf\x65\xce\xf6\x91\x1e\xc0\x86\x31\xbf\xc2\x80\xb8\x8e\xc0\xec\x40\x4a\x46\x58\x70\xaf\x2e\xdc\x28\x29\x24\x90\x14\xa3\xc8\x1e\x49\x20\xe9\x9e\x08\x89\xf6\x87\xb2\xf7\xfc\x69\x92\x1e\x03\xce\xf4\xf5\xc2\x06\x01\x7b\x1e\x8e\xc6\xda\x80\x51\x17\x47\x59\x3e\x46\x51\x0c\xc5\x63\x1c\x47\x71\x9e\x52\xe0\x50\x37\xba\xfb\x98\xce\xcf\xba\x35\x7d\xaf\x5b\x71\x36\xb2\x8e\xaf\xae\xc6\xda\xc0\x67\x5b\x1a\x38\x82\x08\x41\x59\x10\x65\x37\xc1\x1f\xf9\x9c\x9c\x9f\x30\xe7\x6a\x56\x40\xb2\x64\x1c\x14\xba\x94\x04\x38\x49\x58\xe9\x4e\x84\x79\xdd\x51\xc2\xcf\x86\xf7\x76\x39\x15\x57\x3f\x7f\x45\xa0\xb9\x69\xc0\x7b\x30\x4c\x15\x31\x3a\x7f\x8b\x13\x90\xf9\x52\x24\x58\x3a\x4a\x79\x45\x27\x6b\x73\xfe\x69\x0d\x41\x0c\x48\x34\x39\xd2\x46\x93\x06\xe9\x67\x6a\x1d\xdd\xd1\xb7\x03\x54\x72\x53\x76\x48\x83\x1c\x5f\xbc\x37\xd4\xed\xd8\x55\xdf\xea\x8e\x69\xec\x00\xa5\x90\xf3\x42\xeb\x24\xd8\x8b\x05\xf7\x12\xb2\x8a\x3d\x46\xb2\xca\x64\xbd\x41\x4f\x4d\x09\x2d\x16\xc1\x5c\x7e\x39\x16\x41\xad\x93\x3d\xd9\x6f\x08\xcf\xeb\x21\x75\x33\xd3\x17\x2b\xd8\xcc\xaa\xb0\x27\x9c\x1d\x0a\x5c\x9f\xb8\x9d\xbb\x65\xcb\x51\x50\xdf\x2b\xd5\x71\x66\x0e\x1c\x8f\x71\x40\x83\x9c\x11\xe1\x9c\xf1\x0a\x57\xdd\x74\x9c\x54\x1e\x61\x4c\x84\x70\x24\x7b\x24\x41\xb9\xa7\x52\x79\xd4\x00\xd4\xdd\xf0\x8c\x84\x13\x0a\xe2\x96\x28\x26\x99\xc9\x0a\xfb\x34\x4f\xf3\xc2\xee\x33\xd4\x7a\x97\xab\x9f\xb0\x7a\x15\xec\xbc\x5e\x5e\x73\x18\xd5\xa6\xbf\xf7\x2a\x56\xef\xbe\xe6\x8a\xb1\x8d\x17\x8a\x38\xe0\xda\xd1\xa1\xaa\x43\xeb\x67\x56\xe6\xba\x5a\x68\x46\x02\xc9\xa0\x1c\x83\xaa\x29\x9a\x7e\x1b\x83\xb2\x7b\xc5\x98\xf4\xd9\x96\x85\x8a\x77\xe7\x3f\xff\xb5\x7f\x77\x66\xb1\x2d\x84\x2b\x32\xa9\x2a\x98\x56\xe7\x52\xb1\x6d\x39\x71\x29\xaf\x3c\xa9\x56\x1c\x70\x89\x87\x42\x5f\x02\x0f\xf9\x82\x1c\xe5\x8f\xc9\x41\x2a\x61\x9c\x44\xb4\xd4\xb0\x83\x43\x03\x2a\x29\x52\x43\xab\xb6\x64\xc3\xe2\xd3\xf4\x85\x0d\xad\x2e\x2b\x42\x37\x0c\x30\x5d\x9a\x2b\xdb\xd2\xe7\xa6\xdd\xca\xe6\xfc\xba\x73\xbc\x47\x30\x5b\x5a\x70\xfe\xce\x8c\x2a\x0f\x86\xe7\x77\x1f\xb0\xe0\x0c\x5a\xd0\x9c\xc2\x55\xa3\xd3\xac\xc9\xd2\x04\x06\x5c\x40\x1b\x82\xa9\xbe\x9a\xea\x06\x9c\xd4\xf3\x51\x8c\xd2\x26\x5a\xcd\xa6\x97\xb1\xab\xf6\xdd\x97\x64\xf1\xf7\x5f\x97\x62\xa5\x92\x29\xd3\x48\xc5\x54\xa6\x71\x3a\x1b\x46\x67\x97\x57\xa3\x4f\x15\xde\x34\x6c\xf5\x74\x6f\x62\xa0\xb4\xfe\x53\x6b\x50\x7c\x6d\x97\xa2\x2f\x3d\xc7\xdb\xf6\x43\x6c\xd2\x99\xdb\x25\x8d\xf0\xd6\x6c\x56\xf0\x34\xcb\x5f\x95\x4e\xfd\x90\x2a\xfe\x00\x7f\x91\x51\xd5\x82\x53\xe1\xc9\xd0\x44\x29\x0f\x7d\x95\x2e\xd1\xb2\xff\xb1\x19\xec\x39\xd0\x0c\x6b\x79\xd7\x61\x31\x4e\xda\x1a\xd4\x03\x9b\xf7\x4c\x57\xbb\xd6\xf8\x58\x95\xf5\x78\xe5\xdc\xaa\x37\xcd\x57\x6e\xa2\xfd\x0e\x00\x00\xff\xff\xcd\x13\x83\x4b\xca\x14\x00\x00")

func migrationsSqlCockroach12SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlCockroach12Sql,
		"migrations/sql/cockroach/12.sql",
	)
}

func migrationsSqlCockroach12Sql() (*asset, error) {
	bytes, err := migrationsSqlCockroach12SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/cockroach/12.sql", size: 5322, mode: os.FileMode(420), modTime: time.Unix(1575442625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlCockroach13Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xce\xb1\x6a\x84\x40\x14\x85\xe1\x7e\x9e\xe2\x94\x09\x61\x9a\xb4\x36\x91\x68\x40\x08\x2a\x26\x81\x74\xc3\x44\xaf\x7a\xb3\x38\x57\x66\xc6\x5d\xf7\xed\x97\x65\x2d\xb6\x14\xb6\x39\xd5\xf9\xe1\xd3\x1a\x2f\x13\x0f\xde\x46\xc2\xcf\xac\xb4\xc6\x07\xaf\x98\xc9\xf7\xe2\x27\xeb\x5a\x02\x87\xb0\x10\xa4\x47\xda\x4d\xec\x90\xd6\x05\x34\x1a\x3a\xca\x81\xf0\x29\x03\x3b\x7c\x51\x08\x2c\x2e\xa8\xf7\x26\x4f\xbf\x73\x14\x65\x96\xff\xa2\x2a\x31\x9e\x3b\x6f\x8d\xd8\x25\x8e\xaf\xe6\xba\xe4\x22\xb7\x36\xb2\x38\x13\x6e\x11\x9e\xc2\xf2\xf7\x4f\x6d\x7c\x4e\x94\xba\xc7\x64\x72\x72\x0f\x72\xb2\xa6\xaa\x37\xcc\x0e\xc9\xdb\x8e\x8f\xd9\xb0\x86\xbb\x35\x51\x97\x00\x00\x00\xff\xff\xdc\xd5\xc4\xfc\x3c\x01\x00\x00")

func migrationsSqlCockroach13SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlCockroach13Sql,
		"migrations/sql/cockroach/13.sql",
	)
}

func migrationsSqlCockroach13Sql() (*asset, error) {
	bytes, err := migrationsSqlCockroach13SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/cockroach/13.sql", size: 316, mode: os.FileMode(420), modTime: time.Unix(1575540492, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysqlGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlMysqlGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysqlGitkeep,
		"migrations/sql/mysql/.gitkeep",
	)
}

func migrationsSqlMysqlGitkeep() (*asset, error) {
	bytes, err := migrationsSqlMysqlGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql10Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xbd\x4e\xc3\x30\x14\x85\x77\x3f\xc5\x1d\x53\xa1\x2e\xac\x99\x8c\x7d\x8a\x22\xa2\x6b\x70\x1c\x09\x26\x2b\x22\x6e\x6b\x51\x6a\x30\x0e\x3f\x6f\x8f\x0a\x08\x75\x8a\x3a\x74\xfe\xce\xfd\x39\xdf\x72\x49\x17\xcf\x71\x93\x87\x12\xa8\x7f\x11\xca\x42\x3a\x50\xcf\xcd\x5d\x0f\x6a\x58\xe3\x9e\xb6\x5f\x63\x1e\x7c\x1a\xa6\xb2\xbd\xf4\xbb\xb4\x49\x53\xf1\x39\xbc\x4e\xe1\xad\xf8\xf7\x90\xa3\x8f\xe3\x27\x19\x9e\xcb\x51\x75\x08\xae\x63\xc8\x8b\x5a\xc8\xd6\xc1\x92\x93\x57\x2d\x66\x67\xa4\xd6\xa4\x0c\x77\xce\xca\x86\xdd\xec\x1b\x8f\xbb\x18\xf6\xc5\xc7\xd1\xaf\x9f\x68\x65\x2c\x9a\x6b\xa6\x1b\x3c\x50\xf5\x4f\x16\x64\xb1\x82\x05\x2b\x74\x7f\xbb\x7e\x59\x75\x60\x86\x49\xa3\x85\x03\x29\xd9\x29\xa9\x51\x0b\x71\xac\x46\xa7\x8f\xbd\xd0\xd6\xdc\x9e\xcf\xc9\xe9\x22\x7e\xee\x1e\xb7\x3a\x55\x45\x2d\xbe\x03\x00\x00\xff\xff\x27\x55\xac\xdf\xdf\x01\x00\x00")

func migrationsSqlMysql10SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql10Sql,
		"migrations/sql/mysql/10.sql",
	)
}

func migrationsSqlMysql10Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/10.sql", size: 479, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql12Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\xcf\xc9\x4f\xcf\x2f\x2d\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\xf0\xf5\x77\xf1\x74\x8b\x54\x48\xce\xc9\x4c\xcd\x2b\x89\xcf\x4c\x51\x28\x4b\x2c\x4a\xce\x48\x2c\xd2\x30\x32\x35\xd5\x54\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x01\x73\xac\xb9\xb8\x90\x2d\x72\xc9\x2f\xcf\xe3\x72\x71\xf5\x71\x0d\x71\x55\x70\x0b\xf2\xf7\xc5\x6b\x55\xb8\x87\x6b\x90\x2b\x92\x4d\x9e\xc1\x50\x23\xa9\xe4\x56\x7f\x98\x13\x01\x01\x00\x00\xff\xff\x80\x80\x69\x15\x0b\x01\x00\x00")

func migrationsSqlMysql12SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql12Sql,
		"migrations/sql/mysql/12.sql",
	)
}

func migrationsSqlMysql12Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql12SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/12.sql", size: 267, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql13Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xcf\x93\x9a\x30\x14\xc7\xef\xfe\x15\xef\xe8\x4e\x87\x1e\xda\x5b\x39\x51\x88\x1d\xa7\x14\xb6\xc0\xce\xb4\x27\x26\xc2\x03\x53\x31\xb1\x49\xe8\xea\x7f\xdf\x41\x1d\x54\x76\xc9\xc2\xaa\x17\x0f\x31\x5f\xde\xf7\xe5\xf3\x7e\x58\x16\x7c\x58\xb3\x52\x52\x8d\xf0\xb4\x99\x58\x16\xcc\xd8\x16\x36\x28\x0b\x21\xd7\x94\x67\x08\x4c\xa9\x1a\x41\x14\xe0\xe4\x6b\xc6\xc1\x79\x9c\x83\x05\x11\xfe\x13\x2b\x04\x5f\x94\x8c\x43\x8c\x4a\x31\xc1\xd5\xc4\x8d\x88\x93\x10\x98\x07\x1e\xf9\x05\xcb\x5d\x2e\x69\x2a\x68\xad\x97\x9f\xd2\xe6\x17\xb9\x66\x19\xd5\x4c\xf0\x54\x1d\x14\xa9\xaa\x17\x29\xcb\xb7\x10\x06\x43\xae\xc3\x54\xd5\x8b\x3f\x98\xe9\x07\x7b\x78\x28\x89\x7f\x6b\x54\x3a\xad\x1a\xab\x6d\x60\x96\x0f\x89\x7b\xd4\xc2\xb4\x2b\x36\x1a\xc8\x04\x57\xc8\xf5\xb8\xc8\x1d\xd1\x4d\x42\x66\x4b\x5a\x55\xc8\x4b\x1c\x13\xb1\x15\x3d\xd8\x93\xb1\xe5\xe0\x1e\x3e\x39\xa4\x20\x2a\x51\x8a\xfa\x64\x38\xab\x58\xe3\xa5\xe7\x71\x2e\x2f\xc3\xb4\xbd\x7d\xf4\xd8\x56\xb0\x27\x9e\xf9\x95\x35\xec\x45\xe1\xe3\xdd\x2a\xd8\x6e\xcc\x25\x4b\x84\x42\x54\x95\x78\x66\xbc\x84\xcf\xa0\x50\x2b\xa0\xb2\x39\x94\x90\x4b\xb1\xd9\x34\xe7\x8c\xe7\x2c\x43\xb5\x3f\x2c\x84\x44\x56\x72\x58\xe1\x4e\x7d\x84\x1f\xbb\xf8\xa7\xdf\x9c\x2d\x58\xae\x60\x8d\xa0\xc5\x5e\xd6\x4a\x04\xbf\x50\x7c\x39\x2a\x5c\xca\xb9\xd0\xed\x55\xdc\x02\x47\xcc\x31\x07\xc6\x81\x9e\x2b\xa0\x29\x0d\x2d\x29\xe3\x7a\xe2\xf8\x09\x89\x20\x71\xbe\xfa\x64\x50\xab\xec\x9f\x6f\x16\x46\x64\xfe\x2d\x80\xef\xe4\xf7\xfb\x7a\xb3\x58\xd9\x43\x41\xdc\xa0\xbf\xed\xd1\x59\x3a\x9e\x07\x6e\x18\xc4\x49\xe4\xcc\x83\xe4\xbd\x39\x5e\xbc\xd3\xcb\x86\x87\x88\xcc\x48\x44\x02\x97\xc4\x43\x6a\x6b\xda\x48\xc2\x00\x3c\xe2\x93\x84\x80\xeb\xc4\xae\xe3\x11\x7b\xd2\x9f\x5c\x77\x02\x98\xd9\xbd\x39\xd6\x4c\xd0\x6e\x31\x13\x0d\x98\xba\x99\x98\xf8\x0c\xc8\xe3\xae\x60\x62\x92\x40\xf0\xe4\xfb\xf7\x26\x73\x9a\xfe\xe3\xc1\x8c\xda\x1c\x77\xe5\x72\x9e\xc5\x6b\x58\x4e\xeb\x6a\x28\x95\xe3\xf7\xa7\x67\xca\x57\xe1\x5c\xbb\xfb\x7a\x1f\xa5\xb3\xcd\xcc\x6c\x7b\xf7\xa4\x09\xea\x15\xcb\xd5\x00\xb3\xe3\xdb\xc4\xd2\xe0\xfa\x12\xe2\x69\x93\xbf\xc4\x77\xf8\xaf\x6f\xac\xfd\x0f\x00\x00\xff\xff\x12\xe0\x5d\x19\xb9\x0a\x00\x00")

func migrationsSqlMysql13SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql13Sql,
		"migrations/sql/mysql/13.sql",
	)
}

func migrationsSqlMysql13Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql13SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/13.sql", size: 2745, mode: os.FileMode(420), modTime: time.Unix(1575540510, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd2\x41\x4b\x03\x31\x10\x05\xe0\xfb\xfe\x8a\xb9\xf5\x20\xbd\x78\x5d\x3c\xac\x26\x82\x90\x36\xa5\x26\xa0\xa7\x30\x6c\x86\x6e\x40\x27\x9a\x66\x11\xff\xbd\xb4\x14\x29\x92\xd4\x56\xf7\xb2\xec\xe9\x63\xde\x7b\x99\xcf\xe1\xea\x35\x6c\x12\x66\x02\xfb\xd6\x74\xca\xc8\x35\x98\xee\x56\x49\x18\x3e\x7d\x42\x17\x71\xcc\xc3\xb5\xeb\x23\x6f\x89\xb3\x4b\xf4\x3e\xd2\x36\x43\x27\x04\x1c\xfe\xc9\x3b\xcc\x0e\x47\x1f\x88\x7b\x02\x23\x9f\x0c\x2c\xad\x52\x6d\x5d\xdb\x7d\x89\x73\xe8\x31\x87\xc8\x13\xa1\x3f\x4e\x74\x03\xb2\x7f\x21\xbf\x57\x37\x09\xf9\x84\xd9\xd8\x95\xe8\xcc\x2f\x91\x1f\xa5\x29\x5f\x77\x33\x9b\xb5\x45\xa1\x12\xf3\x72\xa8\x16\x6d\x27\x15\xa2\xed\x9d\xf3\xb7\x5c\x68\xf1\x70\xff\x7c\xb2\x79\xfd\xd7\x49\x27\xb1\x6b\xf1\x0f\x78\x7d\xdc\x6f\xba\x39\x7e\xe7\x22\x7e\xf0\xf9\xed\x88\xb5\x5e\xc1\x9d\x56\x76\xb1\x2c\xc7\xb8\xbc\x94\xff\x90\xb5\x2e\x8e\xcd\x42\x21\x6d\xf3\x15\x00\x00\xff\xff\x99\xcd\x38\x04\xea\x03\x00\x00")

func migrationsSqlMysql4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql4Sql,
		"migrations/sql/mysql/4.sql",
	)
}

func migrationsSqlMysql4Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/4.sql", size: 1002, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x93\x4f\x4b\xc4\x30\x10\xc5\xef\xf9\x14\x39\xba\xe8\x5e\xbc\xe6\x24\xb6\x87\xbd\x74\x75\xb1\xe0\x2d\xa4\xc9\xac\x3b\xa2\x89\xe6\x8f\x7f\xbe\xbd\x54\x14\x43\xe9\xac\x89\x14\x4f\x85\x32\xf3\xde\xcb\x8f\x37\xeb\x35\x3f\x7d\xc4\x3b\xaf\x22\xf0\xfe\x89\x5d\xee\xda\x8b\x9b\x96\xf7\xdd\xe6\xba\x6f\xf9\xa6\x6b\xda\x5b\x7e\x78\x37\x5e\x49\xa7\x52\x3c\x9c\x4b\x37\xec\x53\xd0\x2a\x82\x91\xe3\x0f\xb0\x11\xb5\x8a\xe8\xac\x0c\x10\xc2\xe7\xd7\x49\x34\x6f\x7c\xdb\x55\x2e\xf2\x13\xfd\x80\x60\xa3\x44\x73\xc6\x43\x1a\xee\x41\xc7\x6c\x6b\x25\xd8\x77\xba\x99\x58\xda\xd9\x30\xee\x7a\x78\x4e\x10\xa2\xd4\x68\x66\x53\x4c\xe6\x32\xcf\x95\xa8\x90\x0f\x69\x28\x93\xff\x7a\xc7\x8f\x38\x4d\x76\xea\xf1\x02\x1e\xcb\x4c\xc6\xc9\x3d\x82\x3f\x8e\x68\x42\xfd\x37\x52\xf3\xe3\xa5\xc0\x08\x33\x8a\x1b\x65\x56\x81\x8f\x70\x24\x29\x52\x96\x39\xcc\xfc\x38\x1a\xf7\x6a\x59\xb3\xdb\x5e\xfd\xef\x55\x08\x46\x9a\xfe\xb1\xf3\xa2\x58\xb0\xb0\xe5\xe5\x82\xa5\x95\x3e\xf2\xe8\x45\x5a\x4c\x27\x5e\xa4\xb7\xd5\xf2\x95\x25\x15\xec\x23\x00\x00\xff\xff\x26\xc5\x0b\x30\xb6\x05\x00\x00")

func migrationsSqlMysql5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql5Sql,
		"migrations/sql/mysql/5.sql",
	)
}

func migrationsSqlMysql5Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/5.sql", size: 1462, mode: os.FileMode(420), modTime: time.Unix(1575442625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\xce\xcf\x2b\x4e\xcd\x2b\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\x70\x74\x71\x51\x48\x4c\x2e\x52\x08\x71\x8d\x08\x51\xf0\x0b\xf5\xf1\xb1\xe6\x0a\x0d\x70\x71\x0c\x21\xa0\x2d\xd8\x35\x04\xa4\xcd\x56\x5d\xdd\x9a\x78\xbb\x7c\xfd\x5d\x3c\xdd\x22\x91\xac\xf3\x87\x59\xc9\x85\xec\x7c\x97\xfc\xf2\x3c\xe2\x0d\x75\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x03\x99\x6c\xcd\x05\x08\x00\x00\xff\xff\x40\xd9\xef\x84\x0a\x01\x00\x00")

func migrationsSqlMysql6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql6Sql,
		"migrations/sql/mysql/6.sql",
	)
}

func migrationsSqlMysql6Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/6.sql", size: 266, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xcf\x8f\xea\x36\x10\xbe\x23\xf1\x3f\xcc\x6d\x59\x75\xa1\x6a\xaf\x4f\x3d\xe4\x81\xb7\x6f\xd5\x3c\x58\x85\xa0\xb6\x27\x64\x92\x81\x58\x35\x36\x8d\x1d\xb6\xfb\xdf\x57\x49\x9c\x1f\x24\x10\x92\xc0\xee\xbb\x70\x20\xf6\xcc\x37\x9f\x3f\xcf\x8c\x67\x3c\x86\x9f\xf6\x6c\x17\x52\x8d\xb0\x3a\x0c\x07\xc3\xc1\x78\x0c\x6e\xc0\x14\x78\x54\xc0\x06\x41\x44\x9c\xc3\x5b\x80\x02\x84\x84\x43\x88\x47\x26\x23\x05\x5c\xee\x98\x00\x85\x4a\x31\x29\x00\xff\x63\x4a\xab\x27\x50\x12\x38\xea\x07\x05\x21\xee\xe5\x11\xc1\xc7\x2d\x8d\xb8\x1e\x0e\x2c\xdb\x25\x0e\xb8\xd6\x57\x9b\x40\xf0\xee\x87\x74\x2d\x69\xa4\x83\x5f\xd7\xf1\x2f\x0a\xcd\x3c\xaa\x99\x14\xeb\x10\xff\x8d\x50\x69\x48\xd7\x4f\x17\xf6\xea\xfb\x3c\xf5\xb5\x36\xbe\xd6\xcc\x87\x99\xb3\x78\x85\x19\x79\xb6\x56\xb6\xfb\xe5\x26\xc8\x20\x43\x60\x5b\xd0\x01\xd5\xf9\x97\x80\x2a\xd8\x20\x0a\x13\x84\xdf\x27\x2c\x4f\x0a\x85\x42\xdf\x3d\x1e\x1d\xa0\xd9\xee\x05\x94\x73\x14\x3b\x84\x37\xaa\xc0\x47\x8e\x1a\x7d\x18\xa9\x40\x46\xdc\x07\x21\xb5\xf9\x2f\xd9\x62\xe0\x00\xd3\x0a\xf9\xf6\xf1\x36\xe0\x85\xe7\x73\xb8\xa7\xc6\x95\x31\xa0\x52\x6e\x0f\x92\x09\x0d\x5a\x02\x15\x80\xfb\x83\x7e\x4f\x88\x17\x47\xca\x99\x6f\x0e\x26\xf3\x68\x22\x50\xa8\x63\xe8\x2c\xac\x79\xd5\x12\xe6\x2b\xdb\x1e\x0e\x56\xaf\x33\xcb\xbd\x82\x7f\x49\xdc\x9a\x81\xdf\x92\xfd\xf0\xe7\x37\xe2\x10\x98\x2f\x5c\x20\x7f\xbd\x2c\xdd\x25\x8c\x86\x03\x80\x25\xb1\xc9\xd4\x85\x5f\xe0\xd9\x59\x7c\x6f\xa5\xd5\xd4\x4e\x13\x8a\x49\x1d\x41\x0b\xc3\x93\x7c\xfd\x70\xf0\x78\x33\xbd\x99\xba\x2f\xd0\x5b\x52\x63\x4f\x7e\x4b\x16\xee\x44\x70\x06\xb9\x35\xc1\x27\x10\x5a\x58\x9e\x30\xbf\x44\xad\x5d\x96\x61\x8d\xd8\x0a\x8d\xc9\x57\x21\x81\x4b\xb1\xc3\x30\xcb\x26\x23\x19\x26\xd7\x51\xe0\x11\xc3\x84\x63\x96\xde\xd9\x2d\x0b\x95\x86\x03\xa7\x1e\x3e\x9e\x1e\x01\xd5\xcd\x84\x5f\x10\xdd\x0f\xe2\xfd\x82\x52\xef\x46\xff\x53\x96\xaa\x9e\x40\x6e\xb6\x91\xf2\x68\x9c\xd5\xcc\xfa\xfa\x99\x78\x9c\xc5\x97\xe1\x2d\x60\x5e\x50\x3f\x8d\x7d\xa4\x74\x9c\x3e\x4d\x72\x1c\x0e\x66\xc4\x26\x2e\xe9\x7a\xb3\xcb\x44\x9e\x23\xd1\x80\x68\xcf\x56\xba\xa1\x4c\x53\xfa\xcf\x84\xf9\x31\x1b\x17\x51\x56\xef\xde\xad\xf0\xaa\x97\xa8\x2f\xae\xe2\xa4\x9a\x95\xd4\x1f\xe9\x55\x0f\xd7\xb0\x27\x0a\xfb\x46\x85\xcf\x31\x4b\x88\x54\xf8\x79\x5d\xcc\x2f\x7d\xaa\xa4\xb2\xc2\xd2\x15\x3f\x9f\xd6\xa8\xf3\xb7\xbf\xbd\xde\x2a\xcc\xaf\x03\x83\xac\x1d\x4f\x8d\x72\x68\xe3\x67\x72\xb1\x12\xd5\x24\x91\x2d\x6c\x14\xc0\x79\x9d\x7f\x58\x54\xcd\xee\x7a\x06\x97\x28\xc4\xf2\x74\x44\x39\x30\xe1\x33\x0f\x55\x45\x36\x99\x58\x62\xe1\x9c\x42\x28\xf4\x93\x48\xc0\xa3\xca\xa3\x7e\xa6\x83\xbc\x71\x63\x21\x1c\x68\x18\x5b\x18\xc5\x25\x21\x0b\xd0\xf4\x64\xc0\xb2\xf6\xd2\x6f\xdf\x9e\xe5\x14\x5b\xb3\x19\x4c\x17\xf3\xa5\xeb\x58\x2f\x73\xb7\xd5\x9e\xa2\x1d\x59\x6f\xff\x81\xe7\x85\x43\x5e\x7e\x9f\xc3\x1f\xe4\x6f\x18\x15\xc4\x80\x43\x9e\x89\x43\xe6\x53\xb2\x6c\x34\x5a\xde\xb2\x98\x83\x51\xca\xd4\x5a\x4e\xad\x19\xf9\xd2\xb9\xff\x6f\x15\x57\xf3\xd6\xdb\xc2\x3b\x6f\xfb\x5a\x94\xd7\xea\x58\x25\x41\x14\x2d\x7d\xea\x35\x2b\x67\x2c\x7e\x7f\x30\xb1\x2b\x12\x49\xfb\x76\xbd\x83\x0e\xf2\x94\x59\x27\x28\xfb\x72\x86\xa0\xf4\xdb\x28\xfe\x76\x87\x83\xee\x73\xc0\x9f\x8b\xfb\x7a\x71\x6b\x0a\xe1\xea\xee\x8f\x89\x26\x11\xe2\xcb\xb6\xd6\xb5\x16\x39\xe6\x29\xd1\x1d\x55\x4a\x7a\x2c\xd1\x26\x3f\xed\x7e\x33\xa9\x9e\xe6\xb2\x26\x29\xde\xef\x80\xab\xdd\x64\x8d\x99\xea\x82\xd6\xf7\xd8\x6c\x69\xe6\xed\x6b\xa4\x81\x35\x71\x77\xf2\xa4\xae\x3e\x5b\xd9\xfe\xc0\xdf\xd3\xd6\xbf\xd4\xd9\x7f\xc8\x05\xfe\x6c\x9e\xe2\x37\x47\x1c\x4e\x2e\xb0\x3c\x6a\xca\x95\x8c\xd5\x92\x3c\x69\x64\x3a\xaf\x48\xc6\x2a\x58\x79\xdc\xb3\xd2\xa8\x62\x83\x1e\x8d\x54\xc1\xa4\x2f\x51\x25\x83\x0b\x8f\x86\x08\x74\x23\xa3\xb4\xd1\xea\x34\xae\xe8\x4c\xdf\xe5\x32\x51\xf9\x7e\x9f\x62\x51\xe5\x30\x9f\xbd\xcd\xe4\x9b\xe8\x51\xf8\x93\x11\x4c\x19\x76\xe7\xd2\x7f\x43\x75\x6e\x76\xde\xa1\x3e\x27\x6c\xb4\x3e\xe4\x6e\x31\x97\x13\x6c\x8f\x02\xd5\x2b\xc6\xb6\x3e\xaf\x17\x97\x66\xf7\xdd\xca\xcb\x47\xb2\x7c\x26\x17\x7d\x16\xd9\x1d\x5d\xdf\x23\xce\x9a\x76\xc7\x63\x70\xf0\x88\xa1\xce\x66\xc3\xea\xde\x33\xef\x38\x71\x98\x51\x2b\x3c\x3c\x74\x09\xf0\x13\xed\x16\x4f\xaf\x8a\xd9\xff\x03\x00\x00\xff\xff\xd8\x2f\x3b\xf3\x66\x18\x00\x00")

func migrationsSqlMysql7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql7Sql,
		"migrations/sql/mysql/7.sql",
	)
}

func migrationsSqlMysql7Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/7.sql", size: 6246, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x07\x91\xa9\x79\x25\x99\xc9\x89\x25\x99\xf9\x79\xf1\x45\xa9\x85\xa5\xa9\xc5\x25\xf1\x19\x89\x79\x29\x39\xa9\x29\x0a\x8e\x2e\x2e\x0a\xc9\xf9\x79\x25\xa9\x15\x25\x0a\x21\xae\x11\x21\x0a\x7e\xa1\x3e\x3e\xd6\xb8\x8d\x4b\xce\xcf\x2b\x4e\xcd\x2b\x81\x99\x83\x4b\x3f\x57\x68\x80\x8b\x63\x08\x69\x4e\x09\x76\x0d\x81\x19\x65\xab\x5e\x5d\xab\x6e\x8d\xd5\x10\x74\x07\x60\xea\x22\x3b\x2c\x7c\xfd\x5d\x3c\xdd\x22\xd1\xbc\xe3\x4f\x72\x90\xe0\x37\x86\x0b\x39\xe2\x5c\xf2\xcb\xf3\xc8\x76\xae\x4b\x90\x7f\x80\x82\xb3\xbf\x4f\xa8\xaf\x1f\xcc\x32\x12\x5c\x89\x55\x37\x20\x00\x00\xff\xff\xad\xee\x99\xb2\x55\x02\x00\x00")

func migrationsSqlMysql8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql8Sql,
		"migrations/sql/mysql/8.sql",
	)
}

func migrationsSqlMysql8Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/8.sql", size: 597, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgresGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlPostgresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgresGitkeep,
		"migrations/sql/postgres/.gitkeep",
	)
}

func migrationsSqlPostgresGitkeep() (*asset, error) {
	bytes, err := migrationsSqlPostgresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres10Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xbd\x4e\xc3\x30\x14\x85\x77\x3f\xc5\x1d\x53\xa1\x2e\xac\x99\x8c\x7d\x8a\x22\xa2\x6b\x70\x1c\x09\x26\x2b\x22\x6e\x6b\x51\x6a\x30\x0e\x3f\x6f\x8f\x02\x08\x31\x45\xc0\xfc\x9d\x7b\x74\xcf\xb7\x5e\xd3\xc9\x7d\xdc\xe5\xa1\x04\xea\x1f\x84\xb2\x90\x0e\xd4\x73\x73\xd5\x83\x1a\xd6\xb8\xa6\xfd\xdb\x98\x07\x9f\x86\xa9\xec\x4f\xfd\x21\xed\xd2\x54\x7c\x0e\x8f\x53\x78\x2a\xfe\x39\xe4\xe8\xe3\xf8\x4a\x86\x97\x72\x54\xcd\xc1\x6d\x0c\x79\x55\x0b\xd9\x3a\x58\x72\xf2\xac\xc5\xe2\x8d\xd4\x9a\x94\xe1\xce\x59\xd9\xb0\x5b\x7c\xe3\xf6\x10\xc3\xb1\xf8\x38\xfa\xed\x1d\x6d\x8c\x45\x73\xce\x74\x81\x1b\xaa\xbe\xc9\x8a\x2c\x36\xb0\x60\x85\xee\xab\xeb\x93\x55\x33\x33\x4c\x1a\x2d\x1c\x48\xc9\x4e\x49\x8d\x5a\x88\x9f\x6a\x74\x7a\x39\x0a\x6d\xcd\xe5\x1f\x9c\xfc\x7e\xe9\x47\xf1\x3f\xa6\xd6\xe2\x3d\x00\x00\xff\xff\xbf\xfb\x6e\xff\xbf\x01\x00\x00")

func migrationsSqlPostgres10SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres10Sql,
		"migrations/sql/postgres/10.sql",
	)
}

func migrationsSqlPostgres10Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/10.sql", size: 447, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres12Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xce\xb1\x0e\xc2\x20\x10\x80\xe1\x9d\xa7\xb8\xdd\x74\x71\x75\xaa\x72\x46\x93\x2b\x18\x0a\x71\x24\xc4\x92\x96\xa4\x16\x45\x88\xf1\xed\x1d\x74\x60\x72\x71\xff\xf3\xe5\x6f\x1a\x58\x5d\xc3\x98\x5c\xf6\x60\x6e\xac\x25\x8d\x0a\x74\xbb\x25\x84\xe9\x35\x24\x67\xa3\x2b\x79\x5a\xdb\x39\x8e\xb1\x64\x9b\xfc\xbd\xf8\x47\x86\x4f\xb7\x93\x64\x3a\x01\x97\x39\xf8\x25\xdb\x30\x00\x57\xf2\x04\x42\x6a\x10\x86\x68\xc3\x58\xad\xf3\xf8\x5c\x18\x47\x42\x8d\xb0\x57\xb2\xfb\xe9\x9f\x0f\xa8\xb0\x82\x8f\xfd\x97\xfc\x73\xb0\x47\x5d\xfd\xbd\x03\x00\x00\xff\xff\xa5\x30\xd4\xbc\xfd\x00\x00\x00")

func migrationsSqlPostgres12SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres12Sql,
		"migrations/sql/postgres/12.sql",
	)
}

func migrationsSqlPostgres12Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres12SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/12.sql", size: 253, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres13Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xb1\x6a\xc3\x30\x10\x86\x77\x3f\xc5\x8d\x0e\xc5\x4b\x57\x4f\x26\x76\x21\x50\x92\xe0\xb6\xd0\x4d\x28\xf2\xc5\xbe\xd6\xd6\xa5\x96\xd4\xa6\x6f\x5f\x4c\x82\x4b\x02\x36\x12\xc9\xa2\xe9\xfe\xfb\x7e\x74\x5f\x92\xc0\x43\x47\x75\x2f\x2d\xc2\xdb\x21\x4a\x12\x78\xa2\x23\x1c\xb0\xdf\x73\xdf\x49\xad\x10\xc8\x18\x87\xc0\x7b\xc8\xaa\x8e\x34\x64\xdb\x15\x24\x50\xe2\x37\x7f\x22\x3c\x73\x4d\x1a\x5e\xd0\x18\x62\x6d\xa2\x65\x59\x64\xaf\x05\xac\xd6\x79\xf1\x0e\xcd\x6f\xd5\x4b\xc1\xd2\xd9\xe6\x51\x0c\x2f\x6a\x4b\x4a\x5a\x62\x2d\xcc\x29\x21\x8c\xdb\x09\xaa\x8e\xb0\x59\xfb\x8c\x43\x6c\xdc\xee\x03\x95\x5d\xa4\xfe\xa8\x1e\xbf\x1c\x1a\x2b\xda\xa1\xea\x08\xa6\xca\x87\x7b\xce\x42\x7c\x1d\x9e\x2d\xa0\x58\x1b\xd4\x36\x8c\x7c\x15\xba\x0b\x52\x35\xb2\x6d\x51\xd7\x18\x42\x1c\x43\x8b\x34\x0a\xd5\x61\x79\x5a\xe9\x23\x44\xcb\x35\xbb\xff\xc2\xaa\xa5\xa1\xcb\xc4\xe7\x5c\x0e\x43\x3c\x4e\x9f\x3b\x8e\x06\xe7\xfc\xa3\x6f\x74\x38\x2f\x37\xdb\x70\x83\x53\xdf\xdc\x9c\x14\xd3\x4b\x7c\x94\x0a\x4d\x5f\xd8\x71\x87\x5b\x4f\xd1\xe7\x2e\x9d\x46\x7f\x01\x00\x00\xff\xff\x02\xa8\x50\xeb\x80\x04\x00\x00")

func migrationsSqlPostgres13SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres13Sql,
		"migrations/sql/postgres/13.sql",
	)
}

func migrationsSqlPostgres13Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres13SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/13.sql", size: 1152, mode: os.FileMode(420), modTime: time.Unix(1575540510, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd0\xb1\x4a\xc6\x30\x10\xc0\xf1\x39\x7d\x8a\xdb\x3a\x48\x17\xd7\x4e\xd1\xc4\x29\xb6\x52\x12\x70\x0b\x47\x73\xb4\x01\xbd\x68\x9a\x22\xbe\xbd\x28\x0e\x45\x5a\xa8\x7c\xdf\x12\x32\xfd\xef\xee\xd7\x34\x70\xf3\x1a\xa7\x8c\x85\xc0\xbd\x55\xd2\x58\x3d\x80\x95\x77\x46\xc3\xfc\x19\x32\xfa\x84\x6b\x99\x6f\xfd\x98\x78\x21\x2e\x3e\xd3\xfb\x4a\x4b\x01\xa9\x14\xfc\xfe\x29\x78\x2c\x1e\xd7\x10\x89\x47\x02\xab\x9f\x2d\x74\xce\x18\x50\xfa\x41\x3a\x63\xa1\xae\xdb\xe3\xf0\xf7\x4b\x5c\xe2\x88\x25\x26\xbe\x7e\xff\xcf\xe2\x7e\x46\x0e\x2f\x14\x7e\x06\x4c\x19\xf9\x5c\x5e\x08\x21\xaa\xad\x95\x4a\x1f\x7c\x5e\x4b\x0d\xfd\x13\xdc\xf7\xc6\x3d\x76\xfb\x57\xfd\x1f\xe8\x92\xe4\x91\xc9\xb6\xb9\x63\xd3\x56\x5f\x01\x00\x00\xff\xff\x50\x71\xaa\x54\x2e\x02\x00\x00")

func migrationsSqlPostgres4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres4Sql,
		"migrations/sql/postgres/4.sql",
	)
}

func migrationsSqlPostgres4Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/4.sql", size: 558, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x3d\x4f\xc3\x30\x10\x86\xf7\xfc\x0a\x8f\x54\xd0\x85\x35\x13\x22\x19\xba\xa4\x50\x11\x89\xcd\x72\xec\x2b\x3d\x04\x36\xf8\xce\x7c\xfc\x7b\x14\xd4\xaa\x51\x94\x0b\x8e\x98\x22\x45\xf7\xde\xf3\xe6\x89\xbd\x5e\xab\xcb\x57\x7c\x8a\x86\x41\xb5\x6f\xc5\xed\xae\xbe\x79\xa8\x55\xdb\x6c\xee\xdb\x5a\x6d\x9a\xaa\x7e\x54\x87\x6f\x17\x8d\x0e\x26\xf1\xe1\x5a\x87\x6e\x9f\xc8\x1a\x06\xa7\xfb\x17\xe0\x19\xad\x61\x0c\x5e\x13\x10\xfd\x3e\x83\x46\xf7\xa5\xb6\xcd\xc2\xa0\xba\xb0\x2f\x08\x9e\x35\xba\x2b\x45\xa9\x7b\x06\xcb\x83\xd4\xaa\x2c\x4e\xed\x26\x6a\xd9\xe0\xa9\xcf\x46\x78\x4f\x40\xac\x2d\xba\xc9\x16\xa3\xb9\x01\x73\x55\x2e\x58\x4f\xa9\xcb\x5b\x7f\xfc\x8e\xf3\x72\xd9\xec\x98\xf1\x01\x11\xf3\x20\xfd\xe4\x1e\x21\xce\x2b\x1a\x59\xff\xcb\xd4\xf4\x78\xae\x30\x01\x26\x79\x93\x60\x0b\xf4\x09\x44\xd1\xa2\x84\x1c\xca\x1c\x5e\x8e\x2a\x7c\xfa\xa2\xda\x6d\xef\xfe\x73\x2b\xca\x42\x5c\x21\x9c\xe0\x32\x3b\x70\x74\x9b\x1f\x38\xa9\x99\x29\x35\x7f\x66\x64\xd4\xfc\xef\x5f\x9c\x3b\x37\xfd\x09\x00\x00\xff\xff\xa9\xd8\x35\xfe\xaf\x04\x00\x00")

func migrationsSqlPostgres5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres5Sql,
		"migrations/sql/postgres/5.sql",
	)
}

func migrationsSqlPostgres5Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/5.sql", size: 1199, mode: os.FileMode(420), modTime: time.Unix(1575442625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\xce\xcf\x2b\x4e\xcd\x2b\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\x70\x74\x71\x51\x48\x4c\x2e\x52\x08\x71\x8d\x08\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xb7\xe6\xe2\x42\x36\xd6\x25\xbf\x3c\x8f\x78\x83\x5d\x82\xfc\x03\x14\x9c\xfd\x7d\x42\x7d\xfd\x40\x16\x58\x73\x01\x02\x00\x00\xff\xff\x9e\x91\x43\x31\xa2\x00\x00\x00")

func migrationsSqlPostgres6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres6Sql,
		"migrations/sql/postgres/6.sql",
	)
}

func migrationsSqlPostgres6Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/6.sql", size: 162, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xcd\x8f\xe2\x36\x14\xbf\x23\xf1\x3f\x3c\xa9\x87\x61\xd4\x61\xda\xdd\x5b\xbb\xea\x81\x05\x4f\x77\x54\x16\x56\x21\xa8\xed\x09\x99\xe4\x41\xac\x1a\x9b\xc6\x0e\xd3\xf9\xef\xab\x38\xce\x07\x09\x84\x24\x30\xb3\x97\x1c\x62\xfb\x7d\xfc\xfc\x7b\x1f\x7e\xc3\x21\xfc\xb8\x63\xdb\x90\x6a\x84\xe5\xbe\xdf\xeb\xf7\x86\x43\x70\x03\xa6\xc0\xa3\x02\xd6\x08\x22\xe2\x1c\x5e\x02\x14\x20\x24\xec\x43\x3c\x30\x19\x29\xe0\x72\xcb\x04\x28\x54\x8a\x49\x01\xf8\x1f\x53\x5a\x3d\x80\x92\xc0\x51\xdf\x29\x08\x71\x27\x0f\x08\x3e\x6e\x68\xc4\x75\xbf\x37\x9a\xba\xc4\x01\x77\xf4\x79\x4a\x20\x78\xf5\x43\xba\x92\x34\xd2\xc1\xc7\x55\xfc\x45\xa1\x99\x47\x35\x93\x62\x15\xe2\xbf\x11\x2a\x0d\xc9\xfe\xf1\x7c\xba\xfc\x3a\x4b\x74\xad\xac\xae\x15\xf3\x61\xe2\xcc\xbf\xc1\x84\x3c\x8d\x96\x53\xf7\xd3\x55\x26\x83\x0c\x81\x6d\x40\x07\x54\x67\x2b\x01\x55\xb0\x46\x14\xd6\x09\xbf\x8b\x5b\x9e\x14\x0a\x85\xbe\xb9\x3f\x3a\x40\x7b\xdc\x0b\x28\xe7\x28\xb6\x08\x2f\x54\x81\x8f\x1c\x35\xfa\x30\x50\x81\x8c\xb8\x0f\x42\x6a\xfb\xcf\x1c\xb1\xe6\x00\xd3\x0a\xf9\xe6\xfe\x3a\xc3\x73\xcd\xa7\xec\x1e\x5b\x55\x56\x80\x4a\xb0\xdd\x4b\x26\x34\x68\x09\x54\x00\xee\xf6\xfa\xd5\x00\x2f\x0e\x94\x33\xdf\x5e\x4c\xaa\xd1\x7a\xa0\x50\xc7\xa6\xb3\xb0\xa2\x55\x4b\x98\x2d\xa7\xd3\x7e\x6f\xf9\x6d\x32\x72\x2f\xd8\xbf\x20\x6e\x45\xc0\x6f\xe6\x3c\xfc\xf9\x85\x38\x04\x66\x73\x17\xc8\x5f\xcf\x0b\x77\x01\x83\x7e\x0f\x60\x41\xa6\x64\xec\xc2\x07\x78\x72\xe6\x5f\x1b\x71\x35\x91\x53\x67\xc5\x63\xd5\x82\x06\x82\x1f\xb3\xfd\xfd\xde\xfd\xd5\xf0\xa6\xec\x3e\x03\x6f\x81\x8d\x1d\xf1\x2d\x48\xb8\x11\xc0\xa9\xc9\x8d\x01\x3e\x32\xa1\x81\xe4\x47\xe6\x17\xa0\x9d\x16\x69\x58\x01\xb6\x04\xa3\x59\x15\x12\xb8\x14\x5b\x0c\xd3\x6c\x32\x90\xa1\x09\x47\x81\x07\x0c\x0d\xc6\x2c\x89\xd9\x0d\x0b\x95\x86\x3d\xa7\x1e\xde\x1f\x5f\x01\xd5\xf5\x80\x9f\x21\xdd\x77\xc2\xfd\x0c\x53\x6f\x06\xff\x43\x9a\xaa\x1e\x40\xae\x37\x91\xf2\x68\x9c\xd5\xec\xfe\xea\x9d\x78\x9c\xc5\xc1\xf0\x12\x30\x2f\xa8\xde\xc6\x2e\x52\x3a\x4e\x9f\x36\x39\xf6\x7b\x13\x32\x25\x2e\x69\x1b\xd9\x45\x20\x4f\x81\x68\x8d\x68\x8e\x56\x72\xa0\x08\x53\xf2\xe7\x91\xf9\x31\x1a\x67\xad\x2c\xc7\xde\xb5\xe6\x95\x83\xa8\xab\x5d\xf9\x4d\xd5\x33\xa9\xbb\xa5\x17\x35\x5c\xb2\xdd\x30\xec\x0b\x15\x3e\xc7\x34\x21\x52\xe1\x67\x75\x31\x0b\xfa\x84\x49\x45\x86\x25\x3b\x7e\x3a\xae\x51\xa7\xa3\xbf\x39\xdf\x4a\xc8\xaf\x02\x6b\x59\x33\x9c\x6a\xe9\xd0\x44\xcf\xe3\xd9\x4a\x54\xa1\x44\xba\xb1\x96\x00\xa7\x79\xfe\x66\x5e\xd5\xab\xeb\xe8\x9c\x61\xc8\xc8\xd3\x11\xe5\xc0\x84\xcf\x3c\x54\xc7\x9d\x58\xa4\xd0\x87\x1f\x3e\x7c\xfc\xf9\x97\x5f\xcd\xef\x38\x03\xa7\x19\x2f\xc4\x3d\xcf\xcc\x91\x3c\xd6\x6c\x7f\x95\xb9\x97\x32\x2e\x66\xdf\xb1\x1f\x39\x09\x0d\x8f\x3c\xaa\x3c\xea\xa7\x64\xca\xba\x3f\x16\xc2\x9e\x86\xb1\x84\x41\x5c\x57\x52\x94\x6c\x63\x07\x2c\xed\x51\xfd\xe6\x3d\x5e\x76\x4f\xa3\xc9\x04\xc6\xf3\xd9\xc2\x75\x46\xcf\x33\xb7\xd1\x99\xbc\xa7\x59\x6d\xfe\x81\xa7\xb9\x43\x9e\x7f\x9f\xc1\x1f\xe4\x6f\x18\xe4\xe8\x82\x43\x9e\x88\x43\x66\x63\xb2\xa8\x15\x5a\x3c\x32\x9f\x81\xa5\xdb\x78\xb4\x18\x8f\x26\xe4\x53\xeb\x47\x44\x23\xbf\xea\x8f\x5e\xe7\xde\x69\xd9\x97\xbc\xbc\x54\x0c\x4b\x59\x26\x7f\x17\x24\x5a\xd3\x9a\xc8\xe2\x47\x0c\x13\xdb\x3c\x1b\x35\xef\xf9\x5b\xf0\x20\xcb\xbb\x55\x80\xd2\x95\x13\x00\x25\x6b\x83\x78\xed\x06\x17\xdd\xe5\x82\xdf\xd7\xee\xcb\x15\xb2\xce\x85\x8b\xa7\xdf\xc6\x1b\x43\xc4\xe7\x4d\xa5\xf5\xcd\x73\xcc\x83\xe1\x1d\x55\x4a\x7a\xcc\x70\x93\x1f\xb7\xd0\x29\x55\x8f\x73\x59\x1d\x15\x6f\x77\xc1\xe5\x96\xb4\x82\x4c\x79\x43\xe3\x38\xb6\x47\xea\x71\xfb\x1c\x69\x60\x75\xd8\x1d\xbd\xcb\xcb\x6f\x5f\xb6\xdb\xf3\xd7\xe4\xfd\x50\x78\x1e\xbc\x49\x00\xbf\x37\x4e\x71\xd9\x8c\xdd\xc9\x08\x96\x79\x4d\xb9\x92\x31\x5b\xcc\xbb\x48\x26\x43\x0f\x33\x9b\xc1\xd2\x84\x80\x15\xe6\x1d\x6b\x34\x95\x39\x43\xd2\x97\xa8\xcc\xf4\xc3\xa3\x21\x02\x5d\xcb\x28\xe9\xd6\x5a\xcd\x3c\x5a\xc3\x77\xbe\x4c\x94\xd6\x6f\x53\x2c\xca\x18\x76\xeb\x50\x4a\x83\x9b\x6c\x0a\x38\x91\x2f\xa2\x43\xf7\x60\x86\x41\xd7\xb4\x0f\x57\x54\xf8\x5a\xdd\x2d\x4a\xbc\xc1\xa2\x31\x4f\x5a\x79\x5c\x4c\xd1\x1d\x4a\x5c\x17\x0f\x9b\xaa\xbc\x5c\x9d\x6a\xb5\xb7\x2b\x4f\x6f\x08\xf1\x89\x54\xf6\x4e\x48\xb7\xd4\x7c\x03\x2f\x2b\xac\x1d\x0e\xc1\xc1\x03\x86\x3a\x9d\x4e\xab\x5b\x4f\xdd\xe3\x74\x62\x73\x06\xdc\xdd\xb5\xf1\xef\x1d\xe5\xe6\x8f\xbf\x92\xd8\xff\x03\x00\x00\xff\xff\x76\x42\xfd\x72\xe8\x18\x00\x00")

func migrationsSqlPostgres7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres7Sql,
		"migrations/sql/postgres/7.sql",
	)
}

func migrationsSqlPostgres7Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/7.sql", size: 6376, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\xca\xc2\x30\x14\x85\xf7\x3e\xc5\xdd\x3a\xfc\x74\xf9\x57\xa7\x68\xe2\x14\x5b\x29\x37\xe0\x16\x42\x7b\xb1\x05\xbd\xd1\xf4\x16\x15\xf1\xdd\xc5\xa1\xe0\xa0\xa0\x2e\x67\x3b\xdf\x39\x5f\x51\xc0\xdf\xbe\xdf\xa6\x20\x04\xee\x90\x29\x8b\xa6\x06\x54\x73\x6b\xa0\xbb\xb4\x29\xf8\x18\x46\xe9\xfe\xfd\x23\x89\xa5\x6f\x82\xf4\x91\x7d\xa2\xe3\x48\x83\xf8\x2e\x70\xbb\xa3\x16\x94\xd6\xd0\x44\x16\x3a\x0b\xa0\xd9\x20\x94\x15\x42\xe9\xac\x05\x6d\x96\xca\x59\x84\xfc\x7a\xcb\x67\xef\xf9\x4d\xe4\x81\x58\x26\xf0\xc7\xc0\xec\x59\x40\xc7\x13\xff\xac\xa0\xeb\x6a\x0d\x8b\xca\xba\x55\x39\x2d\x7f\xf1\xf7\x65\xfb\x1e\x00\x00\xff\xff\xd0\x54\x7b\xf3\x5d\x01\x00\x00")

func migrationsSqlPostgres8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres8Sql,
		"migrations/sql/postgres/8.sql",
	)
}

func migrationsSqlPostgres8Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/8.sql", size: 349, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlSharedGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlSharedGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlSharedGitkeep,
		"migrations/sql/shared/.gitkeep",
	)
}

func migrationsSqlSharedGitkeep() (*asset, error) {
	bytes, err := migrationsSqlSharedGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared1Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x41\x8f\xda\x30\x10\x85\xcf\xce\xaf\x98\x23\xa8\xac\x54\xad\xba\xa7\x3d\xd1\x42\xa5\xaa\x14\x56\x08\x54\xed\xc9\x32\xf6\x40\xdc\x4d\x6c\x6a\x3b\x4b\xfb\xef\xab\x84\x04\x88\x93\x98\x2c\x5d\xae\xbc\x19\xcf\xbc\xef\xd9\xb9\xbb\x83\x0f\xa9\xdc\x19\xe6\x10\xd6\xfb\xe8\xcb\x72\x3a\x5e\x4d\x61\x35\xfe\x3c\x9b\x42\xfc\x57\x18\x46\x35\xcb\x5c\x7c\x4f\xb9\x56\x16\x95\xa3\x06\x7f\x67\x68\x1d\x0c\x22\xc2\x63\x96\x24\xa8\x76\x08\x40\x08\x01\x78\x65\x86\xc7\xcc\x0c\x3e\x7d\x1c\xc2\x7c\xb1\x82\xf9\x7a\x36\x83\xa7\xe5\xb7\x1f\xe3\xe5\x33\x7c\x9f\x3e\x8f\x22\xf2\x8a\x46\x6e\x25\x1a\x38\xfd\xda\x8a\x46\x11\xe1\x89\xcc\x4f\x93\xa2\xe8\x7c\x96\xdd\x3f\x3c\xd4\x74\x36\xdb\xfc\x42\xee\xc8\x15\x59\x39\x35\xcd\x4c\x52\x28\x1d\xfe\x71\xb5\x36\x2f\x72\x5f\xf5\x00\xd8\x68\x9d\xb4\x54\xa3\xa0\x96\xeb\x3d\x12\xe2\x97\x73\x6b\xb6\xe7\xf2\x8e\x95\x72\x1f\x51\x39\xc9\x59\xde\x89\x39\xe2\x64\x8a\xd6\xb1\x74\xdf\x3c\x87\xb9\xdc\xd3\x0b\x41\x65\xe7\x64\xfa\x75\xbc\x9e\xad\x40\xe9\xc3\x60\x38\x8a\x88\x96\x82\xe7\x6c\xf2\x89\x1a\x8b\x45\xc3\xc7\x00\xd1\x8b\x79\xa4\x56\xff\x09\xf6\xaa\x45\x27\xf2\x1e\x29\x9f\x7b\x1f\x27\x6f\x81\x0e\xd0\x18\x29\x0c\xbd\x6f\x02\x6f\x80\x76\x3d\x09\xef\x87\xd5\xa2\xb5\x52\xab\x1c\xab\x14\xc7\x4d\x03\x04\x3c\xaa\xfe\xa0\x00\x81\xed\xe6\x8b\x9f\xc5\x76\x25\x1d\xff\x98\x9a\x6f\xe1\x15\xbc\xb7\x86\xc6\x4c\x89\x04\x45\x33\x9a\x7d\xf7\xd8\x19\xa6\x2e\xb2\x59\x94\xf9\x69\x30\x98\x62\xba\x41\x13\x7a\x06\x8e\x0a\xba\xd5\xa6\x14\x49\x55\xeb\x81\xc6\x14\x7f\x55\x1d\xda\x4e\xa9\xa7\x85\x04\x2d\xad\x02\x53\x42\xa4\x8c\x73\xb4\x96\x3a\xfd\x82\xaa\x25\xcf\xa5\x4a\x8a\x4a\xd1\xf2\xd2\x35\xb2\x57\x9f\xe0\x28\x3a\x30\x4b\x33\x8b\x02\x3a\xcc\xb8\xe5\x61\xe9\xa6\xd8\x13\xa2\x97\xab\xd0\x8d\x3c\x91\xec\x03\x32\xc4\xb1\x0b\x23\xe3\x6f\xc3\xdc\x8b\x72\x03\xcd\x15\x32\x1d\x60\xa2\xcb\x6f\xfa\x44\x1f\x54\x34\x59\x2e\x9e\x7a\xdc\xb3\xc7\x4e\x61\x3b\xd1\xde\xfa\x32\x98\xdd\xfa\x8e\x0b\xff\xd6\x81\xce\x75\xff\x02\x00\x00\xff\xff\x5a\xbe\x93\x31\xd7\x08\x00\x00")

func migrationsSqlShared1SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared1Sql,
		"migrations/sql/shared/1.sql",
	)
}

func migrationsSqlShared1Sql() (*asset, error) {
	bytes, err := migrationsSqlShared1SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/1.sql", size: 2263, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared11Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xb1\x0e\x82\x30\x14\x85\xe1\xbd\x4f\x71\x76\xc3\xe2\x4a\x1c\xaa\x2d\xd3\x15\x08\xdc\xce\xa4\x68\x23\x4d\xa4\x35\xa5\xc6\xf8\xf6\x86\x85\x38\xea\x72\xb6\xf3\xe5\x2f\x0a\xec\x66\x7f\x4b\x36\x3b\x98\x87\x90\xc4\xba\x03\xcb\x23\x69\x4c\xef\x6b\xb2\x43\xb4\xcf\x3c\xed\x87\x75\x5d\xc8\xfe\x62\xb3\x8f\x61\x58\xdc\xb2\xf8\x18\x20\x95\x42\x72\xb3\x9b\x47\x97\x30\xc6\x78\x47\xdd\x30\x6a\x43\x04\xa5\x2b\x69\x88\x51\x49\xea\x75\x29\x84\x69\x95\xe4\xdf\xd4\x5e\xf3\xa6\x1e\xb8\x33\xeb\xfd\x3b\x54\xc5\x57\xf8\x3b\x55\x75\x4d\x8b\x53\x43\xe6\x5c\x6f\x78\x29\x3e\x01\x00\x00\xff\xff\x42\x17\xa1\x0d\x00\x01\x00\x00")

func migrationsSqlShared11SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared11Sql,
		"migrations/sql/shared/11.sql",
	)
}

func migrationsSqlShared11Sql() (*asset, error) {
	bytes, err := migrationsSqlShared11SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/11.sql", size: 256, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd1\x41\x4f\xf3\x20\x18\x07\xf0\x33\x7c\x8a\xe7\xb6\x2d\xef\x76\x59\xb2\x53\x4f\xbc\x2d\x46\x23\x5b\x17\xd2\x9a\xec\x44\x18\x50\x8b\x99\xa0\x40\x35\x7e\x7b\xd3\xa5\x73\xc6\xd8\x64\x99\x3d\xf4\xf4\xe7\xf9\xc1\xf3\x5f\x2c\xe0\xdf\xb3\x7d\x0c\x32\x19\xa8\x5f\x30\x61\x15\xe5\x50\x91\xff\x8c\x42\xfb\xa1\x83\x14\x5e\x76\xa9\x5d\x0a\xe5\x5d\x34\x2e\x89\x60\x5e\x3b\x13\x13\x90\xa2\x80\xc6\x07\x65\xb4\x88\xdd\xfe\xc9\xa8\x24\xac\x36\x2e\xd9\xc6\x9a\x00\x0f\x84\xe7\xb7\x84\x4f\x97\xab\xd5\x0c\x36\x35\x63\x50\xd0\x1b\x52\xb3\x0a\x26\x93\x6c\x1c\xe9\xff\xfd\x0c\x25\x93\xf5\xee\x64\x89\x56\x3a\x7d\x30\xfa\x4f\x66\xce\x29\xa9\xe8\x6f\xa8\xdf\x37\x5d\x54\x32\x19\xfd\xd3\x8f\x26\x46\xeb\x1d\x4c\x31\x1a\x3c\x00\x84\x10\x0c\xdf\x9b\x0c\xaa\x95\x61\x00\xcb\xea\x88\xce\x31\x52\x07\xdb\x6f\xca\xea\x73\x78\x2c\x7a\x7a\xc6\xf9\x0e\x68\x3c\xbc\xe5\x77\x6b\xc2\x77\x70\x4f\x77\xd3\xe1\xe0\x1c\xbe\xb0\x19\x9e\x65\x18\x7f\xaf\xb3\xf0\xef\xee\xf2\x42\x0b\x5e\x6e\x21\x2f\x59\xbd\xde\x8c\x2f\xf9\xfa\xee\x2e\x1c\x7f\x8c\x5d\x53\x52\x86\x3f\x03\x00\x00\xff\xff\x48\xef\x86\x01\xca\x02\x00\x00")

func migrationsSqlShared2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared2Sql,
		"migrations/sql/shared/2.sql",
	)
}

func migrationsSqlShared2Sql() (*asset, error) {
	bytes, err := migrationsSqlShared2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/2.sql", size: 714, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared3Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x31\xeb\xc2\x30\x10\x47\xf7\x7e\x8a\xdb\xfa\xff\x23\x05\x11\x37\xa7\xd8\x54\x1c\x62\x2b\xa1\x71\x0d\xa1\x3d\xda\x40\xbd\x68\x93\x22\x7e\x7b\xe9\x22\x42\x41\x6c\x97\x1b\xdf\xbd\xdf\x4b\x12\x58\x5d\x6d\xd3\x9b\x80\xa0\x6e\x11\x13\x65\x26\xa1\x64\x7b\x91\x41\xfb\xac\x7b\xa3\x9d\x19\x42\xbb\xd1\x95\x23\x8f\x14\x74\x8f\xf7\x01\x7d\x00\xc6\x39\x74\xae\xb1\xa4\x3d\x7a\x6f\x1d\x69\x5b\xc3\x85\xc9\xf4\xc8\xe4\xdf\x76\xfd\x0f\xb9\x12\x02\x78\x76\x60\x4a\x94\x10\xc7\xbb\x25\xe8\xaa\x35\x5d\x87\xd4\xe0\x42\xf2\x78\x91\x82\xad\x4c\x18\x0d\x97\xbb\x47\x9f\x99\xb8\x7b\xd0\xef\x6b\xb8\x2c\xce\x90\x16\x42\x9d\xf2\xc9\xd3\x19\x51\xa6\x98\x77\x9c\xf9\x01\xbe\x3b\xbd\x02\x00\x00\xff\xff\xd1\x35\x88\xf5\x13\x02\x00\x00")

func migrationsSqlShared3SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared3Sql,
		"migrations/sql/shared/3.sql",
	)
}

func migrationsSqlShared3Sql() (*asset, error) {
	bytes, err := migrationsSqlShared3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/3.sql", size: 531, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared9Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xb1\x6e\xc2\x30\x10\x86\x67\xfb\x29\x6e\x04\x15\x16\x2a\xba\x30\xd1\x92\xa1\x2a\x05\x14\x85\x81\xc9\x32\xce\x25\x71\xe5\xc6\xe9\xe5\x0c\xed\xdb\x57\x41\x91\x08\x51\x0b\xe2\xe6\xef\xfb\x4f\x77\xfa\xc7\x63\x78\xf8\xb4\x39\x69\x46\xd8\x56\xf2\x25\x8e\xe6\x49\x04\xc9\xfc\x79\x19\x41\xf1\x93\x92\x56\x5e\x07\x2e\x26\xca\xf9\xdc\x07\x56\x84\x5f\x01\x6b\x86\x81\x14\xa6\xd0\xce\x61\x99\x23\x80\x10\x02\xda\x39\x68\x32\x85\xa6\xc1\xe3\xd3\x10\x56\xeb\x04\x56\xdb\xe5\x12\x36\xf1\xeb\xfb\x3c\xde\xc1\x5b\xb4\x1b\x49\x71\x40\xb2\x99\x45\xba\xe9\x8d\xa4\xa8\xc3\xfe\x03\x0d\x8b\x0e\x79\x66\x27\xd3\xe9\x25\x6c\x53\x38\x85\xfe\xc1\xf6\x72\x8d\xb3\x58\xb2\x3a\x09\xdd\xf9\x2f\xba\xbd\x5b\x05\x72\x4d\x7a\xbb\x80\xf1\x9b\x2f\xa9\xd4\x52\xc3\xc0\x15\xe8\xa8\x6b\x15\x6a\xec\x6f\x86\xbd\xf7\xee\xfc\xb2\x14\x33\x1d\x1c\x43\xa6\x5d\x8d\x23\x09\xa0\x8d\xc1\x8a\xef\xd6\x08\x9b\xff\xdd\xa9\x09\xaa\x94\x2d\x2d\x5b\xdd\x33\xaf\x58\x72\x38\x93\xb2\x5b\xa7\x85\x3f\x96\x72\x11\xaf\x37\xb7\xeb\x34\x93\xbf\x01\x00\x00\xff\xff\x21\x88\x10\xe8\x88\x02\x00\x00")

func migrationsSqlShared9SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared9Sql,
		"migrations/sql/shared/9.sql",
	)
}

func migrationsSqlShared9Sql() (*asset, error) {
	bytes, err := migrationsSqlShared9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/9.sql", size: 648, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTestsGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func migrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := migrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests10_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x6f\x1b\x37\x10\x3d\x47\xbf\x82\xd0\x45\x0e\x4a\x45\xb6\x8b\xe4\xe0\x9e\x0a\x34\x87\x00\x85\x03\x34\x49\x7b\x28\x0a\x82\x4b\xce\xae\x18\xad\x38\x5b\x0e\xb7\xb2\x6a\xf9\xbf\x17\x24\xf7\x83\x92\xb6\xb2\x73\x6a\x2f\x36\x39\xc3\xe1\xce\xbc\x79\xf3\x76\xb5\x5c\xb2\xef\xb6\xa6\x72\xd2\x03\xfb\xd2\xcc\x3e\xdc\x7f\x7a\xff\xcb\x67\xf6\xe1\xfe\xf3\x47\xb6\xde\x6b\x27\x85\xaa\x0d\x58\xcf\xae\x8c\xe6\x4c\xd6\x35\xee\x40\x0b\x85\x8e\x04\x3a\x53\x19\x4b\x9c\xa5\x13\xc2\xca\x2d\x0c\x1b\x02\xe5\xc0\x73\xe6\x40\x1b\x07\xca\x8b\xd6\x19\xe2\xac\x72\xd2\x7a\xe1\xf7\x0d\x50\xf0\x51\x83\x96\xa0\xdf\x93\xc2\x06\x38\xc3\x9d\x05\xc7\x59\x83\xb5\x51\xfb\x10\xc7\x99\x47\x4a\x8b\xee\xf6\xb8\xae\xb1\xc2\xce\x8a\xd6\x4b\xe5\xe9\xe4\xe9\x02\x1e\x1a\xe3\x80\x84\xf4\x9c\x11\x28\x8f\x4e\x18\x0d\xd6\x9b\xd2\x80\x4b\xa1\x5f\x77\x1b\x4a\x7f\xfb\x27\x6d\xc0\x0a\xb0\xba\x41\x63\xbd\x90\xad\x5f\x8b\x2d\xf8\x35\xea\x90\xef\x9f\x2d\x50\x5f\x4a\xbf\xc3\xe2\x6b\xa8\x8f\x4c\x65\x8d\xad\x84\xac\x2b\xce\x5a\x02\x67\x6c\x89\xd1\x0a\x5a\x0c\x95\x46\x2f\xb5\x29\x24\x94\xcd\x99\x6c\xb5\x01\xab\x80\xb3\xd2\xa1\xf5\x6a\x2d\xad\x85\x5a\x84\xea\xda\xae\xd2\x29\x07\x01\x91\x41\x2b\x42\x1a\xc6\x81\x0e\x80\x91\xef\xbd\x27\xb0\x17\x52\x6d\xa6\x2e\x9e\xb0\x9f\xdf\xbb\x05\x2f\xb5\xf4\xf2\xf5\xec\xd7\x1f\x7f\xfe\xf2\xfe\xd3\x8c\xb1\xab\xc5\xcd\xf5\x32\x61\xbd\xe0\x6c\xb1\xf6\xbe\xb9\x5b\xad\x6a\x54\xb2\x5e\x23\xf9\x43\x67\xa8\x10\xab\x1a\xc2\x09\xc2\x2d\x64\x01\xb2\x50\x1a\xca\x97\x85\x86\x16\xa0\x33\x7f\x83\x50\xa8\xe1\x60\xb6\x4d\x6d\x94\x89\xd7\xc4\x66\x1d\x8c\x16\x71\x11\x2c\x25\xe2\xa1\x90\x2e\xc6\x81\x05\x49\xd9\x33\x12\xa1\x32\x83\xc7\xdc\x3d\x51\x4e\x85\xe3\x45\x87\x12\xc3\xee\x7a\xf4\x27\x46\x85\x13\x8f\xf3\x0d\xec\x69\x7e\xc7\x7e\xff\xe3\x29\xbb\x20\xb0\x2a\x6c\x2d\x5a\xc8\xcc\xad\x33\x37\x87\x71\x7d\x1b\x5c\x8e\x6e\xdf\xbe\x4b\x8b\xb7\xb7\x71\xd1\xb4\x45\x6d\x54\x1f\x46\x77\xab\xd5\x6e\xb7\x7b\x83\x6e\xff\x86\xd6\x2b\xd9\x98\xec\xc2\x52\x2d\x53\xf3\x56\x0b\xce\xbc\x6b\x61\x74\x45\x1e\xdc\xac\x0e\xf9\xf6\x76\x95\xc5\x16\x13\xb1\x8f\xf3\x12\x71\x7e\x37\x2f\xa4\x9b\x3f\x2d\x5e\xff\x30\xcb\x55\x61\xf6\x2a\xc9\x02\x86\xbe\xdc\xc6\x01\x09\x13\xa5\xa4\x0f\xac\xe9\xd8\xd3\xa9\xc5\xe8\x03\x9d\x86\x30\x31\x7f\x60\xd2\xab\x48\xa4\x1a\x2b\x63\x97\x5d\xe8\xd2\xe8\x05\x67\xf7\x1f\x7f\xbb\x7a\xcd\x59\xf0\x52\x5b\x7c\x5b\x0e\xdd\x60\xb2\x2b\xb5\x96\x75\x0d\xb6\x02\xce\xfe\x02\x17\x87\x7e\x50\x88\x90\x5f\x97\x4d\x3e\xd8\x35\x67\xb4\x31\xcd\x60\x02\x2d\x3a\x55\x52\xe4\xca\xa9\x92\xc6\x83\x61\x87\x46\x2b\x11\xe4\x08\x1e\x7c\x54\x28\x33\x60\x12\x1f\x99\x9f\x16\xfd\xe4\x9f\xc0\x31\xa4\xbd\x48\x00\xf4\xb9\x77\xdb\x91\xa7\x09\x9c\x50\x42\xb7\xeb\xa7\x7e\xc1\x59\x29\x6b\x82\xee\x4c\x28\xa0\x0f\x26\x57\x8e\xf0\xf6\x28\x3f\x3e\x75\xee\x89\x4e\x04\xb3\x6c\xf5\x33\x2d\x50\x41\xdd\xac\xff\x1f\x61\x5f\xa2\x53\xe1\x86\x4e\x6b\x47\xdd\x9f\x6a\x4b\xb2\x64\x39\x4f\xf6\x89\x33\xa9\x5c\x7a\xdb\xc0\xc3\x29\x89\xff\xc3\xae\xa5\x52\xe3\xa0\x5c\x6c\xe3\x69\x8a\xa1\xad\xdd\x4a\x75\x3a\xf6\xf2\xc1\x3f\xe9\xb8\x58\x4b\xab\x6b\xd0\x47\x9d\x8f\x6f\xfb\xb1\x8d\x0e\xb6\xb0\x2d\x42\x07\xfa\x95\x28\xd1\x71\x06\xce\xa1\x3b\xed\x66\xdf\x1e\xa9\x14\x10\x25\x85\x1f\xad\xbd\xe6\x4f\xb1\x62\x27\x49\xb4\x14\xde\x5c\xfd\xf3\x5f\x3e\x6b\x3d\xea\x49\x09\xbf\x7f\x77\x7d\xdd\x03\x7d\x8c\x7a\x6e\xca\x9a\xf6\xfc\xa0\x4c\x6b\xd5\x24\x7a\xd9\x88\x5c\xc4\x2d\x92\xf2\x18\xbc\x4b\xa0\x5c\x18\x8c\x97\x31\x3b\xf1\xec\x1c\xa1\xc5\xcd\x19\x47\x33\x68\x8e\x49\xfa\x2d\x4c\xc3\xa2\x6c\xa9\xab\xe4\x5f\xde\x36\x03\x54\xe7\x0a\x93\x85\x9f\xd4\x35\xce\xcb\xd1\x70\x8e\xe7\x9f\xc9\x6b\xf8\xd4\xba\x24\x79\x43\x66\x14\x72\xca\xd2\x3b\xd2\xbd\x28\x01\x69\x39\x36\x2a\x30\xbf\xf1\x10\xcf\x86\x3b\xe2\xaa\x11\xc6\x1a\x6f\x26\xca\x79\x46\x80\x8e\x35\xe7\x5c\x1b\x8e\xbe\x7e\x28\x7e\x2b\xc4\x04\x97\xad\xab\x57\xc7\xf6\x24\x57\xc1\x31\x4a\xd6\xc4\xbf\x80\x5e\xfe\xeb\xe2\x27\xdc\xd9\xd9\x3f\x01\x00\x00\xff\xff\x9e\x63\x69\x54\x6f\x0c\x00\x00")

func migrationsSqlTests10_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests10_testSql,
		"migrations/sql/tests/10_test.sql",
	)
}

func migrationsSqlTests10_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests10_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/10_test.sql", size: 3183, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests11_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xcd\x6e\x1b\x37\x10\x3e\x47\x4f\x41\xe8\x22\x1b\xa5\x22\x4b\x45\x72\x70\x4f\x05\x9a\x43\x80\xc2\x01\x9a\xa4\x3d\x14\x05\xc1\x25\x67\x57\x8c\x56\x9c\x2d\x87\x5b\x59\xb5\xfc\xee\x01\xc9\xfd\x95\x36\xb6\x73\xcb\xc5\x26\x67\x38\xc3\x99\x6f\x66\x3e\xae\x96\x4b\xf6\xd3\xde\x14\x4e\x7a\x60\x9f\xab\xd9\xfb\xbb\x8f\xef\xfe\xf8\xc4\xde\xdf\x7d\xfa\xc0\xb6\x47\xed\xa4\x50\xa5\x01\xeb\xd9\x95\xd1\x9c\xc9\xb2\xc4\x03\x68\xa1\xd0\x91\x40\x67\x0a\x63\x89\xb3\x74\x42\x58\xb9\x87\x6e\x43\xa0\x1c\x78\xce\x1c\x68\xe3\x40\x79\x51\x3b\x43\x9c\x15\x4e\x5a\x2f\xfc\xb1\x02\x0a\x3a\xaa\xd0\x12\xb4\x7b\x52\x58\x01\x67\x78\xb0\xe0\x38\xab\xb0\x34\xea\x18\xec\x38\xf3\x48\x69\xd1\x78\x8f\xeb\x12\x0b\x6c\xa4\x68\xbd\x54\x9e\xce\x6e\x17\x70\x5f\x19\x07\x24\xa4\xe7\x8c\x40\x79\x74\xc2\x68\xb0\xde\xe4\x06\x5c\x32\xfd\x72\xd8\x51\xfa\xdb\xde\xb4\x03\x2b\xc0\xea\x0a\x8d\xf5\x42\xd6\x7e\x2b\xf6\xe0\xb7\xa8\x43\xbc\xff\xd6\x40\x6d\x2a\xed\x0e\xb3\x2f\x21\x3f\x32\x85\x35\xb6\x10\xb2\x2c\x38\xab\x09\x9c\xb1\x39\x46\x29\x68\xd1\x65\x1a\xb5\x54\x27\x93\x90\x36\x67\xb2\xd6\x06\xac\x02\xce\x72\x87\xd6\xab\xad\xb4\x16\x4a\x11\xb2\xab\x9b\x4c\xa7\x14\x04\x44\x06\xad\x08\x61\x18\x07\x3a\x00\x46\xbe\xd5\x9e\xc1\x9e\x49\xb5\x9b\x72\x3c\x21\xbf\xf4\xbb\x07\x2f\xb5\xf4\xf2\x7a\xf6\xe7\xaf\xbf\x7f\x7e\xf7\x71\xc6\xd8\xd5\x62\xbd\x5e\x26\xac\x17\x9c\x2d\xb6\xde\x57\xb7\xab\x55\x89\x4a\x96\x5b\x24\x7f\x6a\x04\x05\x62\x51\x42\x38\x41\xb8\x87\x81\x81\xcc\x94\x86\xfc\x65\xa6\xa1\x04\xe8\xcc\xff\x20\x14\x6a\x38\x99\x7d\x55\x1a\x65\xa2\x9b\x58\xac\x93\xd1\x22\x2e\x82\x24\x47\x3c\x65\xd2\x45\x3b\xb0\x20\x69\x70\x47\x6a\xa8\x81\xc0\xe3\x50\x3d\x91\x4e\x81\xbd\xa3\x53\x8e\x61\x77\xd3\xeb\x53\x47\x85\x13\x0f\xf3\x1d\x1c\x69\x7e\xcb\xfe\xfe\xe7\x71\xe0\x20\x74\x55\xd8\x5a\xb4\x30\x10\xd7\xce\xac\x4f\xfd\x7a\x13\x54\x8e\x36\x6f\xde\xa6\xc5\x9b\x4d\x5c\x54\x75\x56\x1a\xd5\x9a\xd1\xed\x6a\x75\x38\x1c\x5e\xa3\x3b\xbe\xa6\xed\x4a\x56\x66\xe0\x30\x57\xcb\x54\xbc\xd5\x82\x33\xef\x6a\xe8\x55\xb1\x0f\xd6\xab\xd3\x70\xbb\x59\x0d\x6c\xb3\x09\xdb\x87\x79\x8e\x38\xbf\x9d\x67\xd2\xcd\x1f\x17\xd7\xbf\xcc\x86\xac\x30\x7b\x95\x68\x01\x43\x5d\x36\x71\x40\xc2\x44\x29\xe9\x43\xd7\x34\xdd\xd3\xb0\x45\xaf\x03\x9d\x86\x30\x75\x7e\x18\x9e\x3d\xec\x33\x70\x5d\x4f\xbd\x8a\x2d\x55\x62\x61\xec\xb2\x71\xb2\x34\x7a\xc1\xd9\xdd\x87\xbf\xae\xae\x39\x0b\x5a\xaa\xb3\x26\xc8\xef\x8a\xa9\x19\x54\x76\xa5\xb6\xb2\x2c\xc1\x16\xc0\xd9\x7f\xe0\x22\x09\x74\x8c\x11\xe2\x1d\x44\xd7\x0e\x7a\xc9\x19\xed\x4c\xd5\x89\x40\x8b\x86\xa5\x14\xb9\x7c\x2a\xc5\xfe\x60\xd8\xa1\xd1\x4a\x04\x7a\x82\x7b\x1f\x19\xcb\x74\x18\xc5\x2b\x87\xa7\x45\xcb\x04\x67\xa0\x74\x61\x2f\x12\x0c\x6d\xec\xcd\xb6\xef\xdb\x04\x51\x48\xa1\xd9\xb5\x2c\xb0\xe0\x2c\x97\x25\x41\x73\x26\x24\xd0\x1a\x93\xcb\x7b\x90\x5b\xac\x1f\x1e\x1b\xf5\x44\x3d\x82\x58\xd6\xfa\x99\xb6\x50\x81\xed\xac\xff\x81\xb0\xcf\xd1\xa9\xe0\xa1\xe1\xde\xfe\x1d\x98\x2a\x4b\x92\x0c\x62\x9e\xac\x13\x67\x52\xb9\xf4\xfa\xc0\xbd\xff\x71\xaa\x96\x52\x6d\xc6\xe5\x89\x32\x9e\x87\x18\xca\xda\xac\x54\xc3\x6b\x2f\x27\x82\xb3\x8a\x8b\xad\xb4\xba\x04\x3d\xaa\x7c\x7c\xfd\xfb\x32\xb6\x24\xd0\xaf\x44\x8e\x8e\x33\x70\x0e\xdd\x79\x35\xdb\xf2\x48\xa5\x80\x28\x31\x7e\x2f\x6d\xdf\x80\xa9\xae\x38\x48\x12\x35\x85\x97\xac\xbd\xff\xe5\xb3\xd6\xa2\x9e\x98\xf1\xe7\xb7\x37\x37\x2d\xd0\x63\xd4\x87\xa2\x41\xd1\x9e\x1f\x94\x69\xae\x9a\x44\xef\x82\x3c\xbf\x81\x5b\x6c\xca\x31\x78\x4f\x81\xf2\xc4\x60\xbc\xac\xb3\x7b\x5a\x1e\x23\xb4\x58\x5f\xf4\xe8\x00\x9a\x71\x93\x7e\x4f\xa7\x61\x96\xd7\xd4\x64\xf2\x8d\xd7\xa7\x83\xea\x92\x61\x06\xe6\x67\x79\xf5\xf3\x32\x1a\xce\xfe\xfc\x33\x71\x75\x9f\x5e\x4f\x51\x5e\x17\x19\x85\x98\x06\xe1\x8d\x78\x2f\x52\x40\x5a\xf6\x85\x0a\x9d\x5f\x79\x88\x67\x83\x8f\xb8\xaa\x84\xb1\xc6\x9b\x89\x74\x9e\x21\xa0\x31\xe7\x5c\x72\xc3\xe8\x6b\x88\xe2\xb7\x43\x0c\x70\x59\xbb\x72\x35\x96\x27\xba\x0a\x8a\x9e\xb2\x26\xfe\x05\xf4\x86\xbf\x36\x7e\xc3\x83\x9d\x7d\x0d\x00\x00\xff\xff\xe9\x57\x09\x90\x7f\x0c\x00\x00")

func migrationsSqlTests11_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests11_testSql,
		"migrations/sql/tests/11_test.sql",
	)
}

func migrationsSqlTests11_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests11_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/11_test.sql", size: 3199, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests12_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xcd\x6e\x1b\x37\x10\x3e\x47\x4f\x41\xe8\x22\x07\xa5\x22\x4b\x45\x72\x70\x4f\x05\x9a\x43\x00\xc3\x01\x9a\xb8\x3d\x14\x05\x41\x91\xb3\x2b\xc6\x2b\xce\x96\xc3\xad\xac\x5a\x7e\xf7\x82\xe4\xfe\x6b\x63\x3b\x40\x0f\xe9\xc5\x26\x67\x38\xc3\x99\x6f\x66\x3e\xae\x96\x4b\xf6\xc3\xde\xe4\x4e\x7a\x60\xb7\xe5\xec\xc3\xcd\xa7\xf7\xbf\x7e\x66\x1f\x6e\x3e\x7f\x64\xbb\xa3\x76\x52\xa8\xc2\x80\xf5\xec\xc2\x68\xce\x64\x51\xe0\x01\xb4\x50\xe8\x48\xa0\x33\xb9\xb1\xc4\x59\x3a\x21\xac\xdc\x43\xbb\x21\x50\x0e\x3c\x67\x0e\xb4\x71\xa0\xbc\xa8\x9c\x21\xce\x72\x27\xad\x17\xfe\x58\x02\x05\x1d\x95\x68\x09\x9a\x3d\x29\x2c\x81\x33\x3c\x58\x70\x9c\x95\x58\x18\x75\x0c\x76\x9c\x79\xa4\xb4\xa8\xbd\xc7\x75\x81\x39\xd6\x52\xb4\x5e\x2a\x4f\xa3\xdb\x05\xdc\x97\xc6\x01\x09\xe9\x39\x23\x50\x1e\x9d\x30\x1a\xac\x37\x99\x01\x97\x4c\xbf\x1c\xee\x28\xfd\x6d\x6e\xba\x03\x2b\xc0\xea\x12\x8d\xf5\x42\x56\x7e\x27\xf6\xe0\x77\xa8\x43\xbc\x7f\x55\x40\x4d\x2a\xcd\x0e\xb7\x5f\x42\x7e\x64\x72\x6b\x6c\x2e\x64\x91\x73\x56\x11\x38\x63\x33\x8c\x52\xd0\xa2\xcd\x34\x6a\xa9\x4a\x26\x21\x6d\xce\x64\xa5\x0d\x58\x05\x9c\x65\x0e\xad\x57\x3b\x69\x2d\x14\x22\x64\x57\xd5\x99\x4e\x29\x08\x88\x0c\x5a\x11\xc2\x30\x0e\x74\x00\x8c\x7c\xa3\x1d\xc1\xbe\x95\xea\x6e\xca\xf1\x84\xfc\xdc\xef\x1e\xbc\xd4\xd2\xcb\xd7\xb3\xdf\x7e\xbe\xbe\x7d\xff\x69\xc6\xd8\xc5\x62\xbd\x59\x26\xac\x17\x9c\x2d\x76\xde\x97\x57\xab\x55\x81\x4a\x16\x3b\x24\x7f\xaa\x05\x39\x62\x5e\x40\x38\x41\xb8\x87\x9e\x81\xdc\x2a\x0d\xd9\xcb\x4c\x43\x09\xd0\x99\x7f\x40\x28\xd4\x70\x32\xfb\xb2\x30\xca\x44\x37\xb1\x58\x27\xa3\x45\x5c\x04\x49\x86\x78\xda\x4a\x17\xed\xc0\x82\xa4\xde\x1d\xa9\xa1\x7a\x02\x8f\x7d\xf5\x44\x3a\x39\x76\x8e\x4e\x19\x86\xdd\x65\xa7\x4f\x1d\x15\x4e\x3c\xcc\xef\xe0\x48\xf3\x2b\xf6\xc7\x9f\x8f\x3d\x07\xa1\xab\xc2\xd6\xa2\x85\x9e\xb8\x72\x66\x7d\xea\xd6\x9b\xa0\x72\xb4\x79\xfb\x2e\x2d\xde\x6e\xe2\xa2\xac\xb6\x85\x51\x8d\x19\x5d\xad\x56\x87\xc3\xe1\x0d\xba\xe3\x1b\xda\xad\x64\x69\x7a\x0e\x33\xb5\x4c\xc5\x5b\x2d\x38\xf3\xae\x82\x4e\x15\xfb\x60\xbd\x3a\xf5\xb7\x9b\x55\xcf\x76\x3b\x61\xfb\x30\xcf\x10\xe7\x57\xf3\xad\x74\xf3\xc7\xc5\xeb\x9f\x66\x7d\x56\x98\xbd\x4a\xb4\x80\xa1\x2e\x9b\x38\x20\x61\xa2\x94\xf4\xa1\x6b\xea\xee\xa9\xd9\xa2\xd3\x81\x4e\x43\x98\x3a\x3f\x0c\xcf\x1e\xf6\x5b\x70\x6d\x4f\xbd\x8a\x2d\x55\x60\x6e\xec\xb2\x76\xb2\x34\x7a\xc1\xd9\xcd\xc7\xdf\x2f\x5e\x73\x16\xb4\x54\x6d\xeb\x20\xbf\x29\xa6\x7a\x50\xd9\x85\xda\xc9\xa2\x00\x9b\x03\x67\x7f\x83\x8b\x24\xd0\x32\x46\x88\xb7\x17\x5d\x33\xe8\x05\x67\x74\x67\xca\x56\x04\x5a\xd4\x2c\xa5\xc8\x65\x53\x29\x76\x07\xc3\x0e\x8d\x56\x22\xd0\x13\xdc\xfb\xc8\x58\xa6\xc5\x28\x5e\xd9\x3f\x2d\x1a\x26\x18\x81\xd2\x86\xbd\x48\x30\x34\xb1\xd7\xdb\xae\x6f\x13\x44\x21\x85\x7a\xd7\xb0\xc0\x82\xb3\x4c\x16\x04\xf5\x99\x90\x40\x63\x4c\x2e\xeb\x40\x6e\xb0\x7e\x78\xac\xd5\x13\xf5\x08\x62\x59\xe9\x67\xda\x42\x05\xb6\xb3\xfe\x3b\xc2\x3e\x43\xa7\x82\x87\x9a\x7b\xbb\x77\x60\xaa\x2c\x49\xd2\x8b\x79\xb2\x4e\x9c\x49\xe5\xd2\xeb\x03\xf7\xfe\xfb\xa9\x5a\x4a\xb5\x1e\x97\x27\xca\x38\x0e\x31\x94\xb5\x5e\xa9\x9a\xd7\x5e\x4e\x04\xa3\x8a\x8b\x9d\xb4\xba\x00\x3d\xa8\x7c\x7c\xfd\xbb\x32\x36\x24\xd0\xad\x44\x86\x8e\x33\x70\x0e\xdd\xb8\x9a\x4d\x79\xa4\x52\x40\x94\x18\xbf\x93\x36\x6f\xc0\x54\x57\x1c\x24\x89\x8a\xc2\x4b\xd6\xdc\xff\xf2\x59\x6b\x50\x4f\xcc\xf8\xe3\xbb\xcb\xcb\x06\xe8\x21\xea\x7d\x51\xaf\x68\xcf\x0f\xca\x34\x57\x4d\xa2\x77\x46\x9e\x5f\xc1\x2d\x36\xe5\x10\xbc\xa7\x40\x79\x62\x30\x5e\xd6\xd9\x1d\x2d\x0f\x11\x5a\xac\xcf\x7a\xb4\x07\xcd\xb0\x49\xbf\xa5\xd3\x70\x9b\x55\x54\x67\xf2\x95\xd7\xa7\x85\xea\x9c\x61\x7a\xe6\xa3\xbc\xba\x79\x19\x0c\x67\x77\xfe\x99\xb8\xda\x4f\xaf\xa7\x28\xaf\x8d\x8c\x42\x4c\xbd\xf0\x06\xbc\x17\x29\x20\x2d\xbb\x42\x85\xce\x2f\x3d\xc4\xb3\xc1\x47\x5c\x95\xc2\x58\xe3\xcd\x44\x3a\xcf\x10\xd0\x90\x73\xce\xb9\x61\xf0\x35\x44\xf1\xdb\x21\x06\xb8\xac\x5c\xb1\x1a\xca\x13\x5d\x05\x45\x47\x59\x13\xff\xfe\x57\xe8\xad\xcf\xf0\x5b\x8f\x11\x5c\x8f\x30\x5c\x8f\x3e\x5c\x6e\xaf\xaf\xff\x6b\xf8\xfa\x3f\xd6\x7e\xc1\x83\x9d\xfd\x1b\x00\x00\xff\xff\x25\xa1\xed\x41\xbe\x0d\x00\x00")

func migrationsSqlTests12_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests12_testSql,
		"migrations/sql/tests/12_test.sql",
	)
}

func migrationsSqlTests12_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests12_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/12_test.sql", size: 3518, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests13_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xcd\x6e\x1b\x37\x10\x3e\x47\x4f\x41\xe8\x22\x1b\xa5\x22\xcb\x41\x72\x70\x4f\x05\x9a\x43\x00\xc3\x01\x9a\xb8\x3d\x14\x05\x41\x91\xb3\x2b\xc6\x2b\xce\x96\xc3\xad\xac\x5a\x7e\xf7\x82\xe4\xfe\x6b\x63\x3b\x40\x0f\xc9\xc5\x26\x67\x38\xc3\x99\x6f\x66\x3e\xae\x96\x4b\xf6\xd3\xce\xe4\x4e\x7a\x60\xb7\xe5\xec\xc3\xcd\xa7\xf7\xbf\x7d\x66\x1f\x6e\x3e\x7f\x64\xdb\x83\x76\x52\xa8\xc2\x80\xf5\xec\xcc\x68\xce\x64\x51\xe0\x1e\xb4\x50\xe8\x48\xa0\x33\xb9\xb1\xc4\x59\x3a\x21\xac\xdc\x41\xbb\x21\x50\x0e\x3c\x67\x0e\xb4\x71\xa0\xbc\xa8\x9c\x21\xce\x72\x27\xad\x17\xfe\x50\x02\x05\x1d\x95\x68\x09\x9a\x3d\x29\x2c\x81\x33\xdc\x5b\x70\x9c\x95\x58\x18\x75\x08\x76\x9c\x79\xa4\xb4\xa8\xbd\xc7\x75\x81\x39\xd6\x52\xb4\x5e\x2a\x4f\xa3\xdb\x05\xdc\x97\xc6\x01\x09\xe9\x39\x23\x50\x1e\x9d\x30\x1a\xac\x37\x99\x01\x97\x4c\xbf\xec\xef\x28\xfd\x6d\x6e\xba\x03\x2b\xc0\xea\x12\x8d\xf5\x42\x56\x7e\x2b\x76\xe0\xb7\xa8\x43\xbc\x7f\x57\x40\x4d\x2a\xcd\x0e\x37\x5f\x42\x7e\x64\x72\x6b\x6c\x2e\x64\x91\x73\x56\x11\x38\x63\x33\x8c\x52\xd0\xa2\xcd\x34\x6a\xa9\x4a\x26\x21\x6d\xce\x64\xa5\x0d\x58\x05\x9c\x65\x0e\xad\x57\x5b\x69\x2d\x14\x22\x64\x57\xd5\x99\x4e\x29\x08\x88\x0c\x5a\x11\xc2\x30\x0e\x74\x00\x8c\x7c\xa3\x1d\xc1\xbe\x91\xea\x6e\xca\xf1\x84\xfc\xd4\xef\x0e\xbc\xd4\xd2\xcb\xf3\xd9\xef\xbf\x5c\xdf\xbe\xff\x34\x63\xec\x6c\xb1\x7e\xb3\x4c\x58\x2f\x38\x5b\x6c\xbd\x2f\xaf\x56\xab\x02\x95\x2c\xb6\x48\xfe\x58\x0b\x72\xc4\xbc\x80\x70\x82\x70\x07\x3d\x03\xb9\x51\x1a\xb2\x97\x99\x86\x12\xa0\x33\xff\x82\x50\xa8\xe1\x68\x76\x65\x61\x94\x89\x6e\x62\xb1\x8e\x46\x8b\xb8\x08\x92\x0c\xf1\xb8\x91\x2e\xda\x81\x05\x49\xbd\x3b\x52\x43\xf5\x04\x1e\xfb\xea\x89\x74\x72\xec\x1c\x1d\x33\x0c\xbb\x8b\x4e\x9f\x3a\x2a\x9c\x78\x98\xdf\xc1\x81\xe6\x57\xec\xcf\xbf\x1e\x7b\x0e\x42\x57\x85\xad\x45\x0b\x3d\x71\xe5\xcc\xfa\xd8\xad\x2f\x83\xca\xd1\xe5\xdb\x77\x69\xf1\xf6\x32\x2e\xca\x6a\x53\x18\xd5\x98\xd1\xd5\x6a\xb5\xdf\xef\x5f\xa3\x3b\xbc\xa6\xed\x4a\x96\xa6\xe7\x30\x53\xcb\x54\xbc\xd5\x82\x33\xef\x2a\xe8\x54\xb1\x0f\xd6\xab\x63\x7f\x7b\xb9\xea\xd9\x6e\x26\x6c\x1f\xe6\x19\xe2\xfc\x6a\xbe\x91\x6e\xfe\xb8\x38\xff\x79\xd6\x67\x85\xd9\xab\x44\x0b\x18\xea\x72\x19\x07\x24\x4c\x94\x92\x3e\x74\x4d\xdd\x3d\x35\x5b\x74\x3a\xd0\x69\x08\x53\xe7\x87\xe1\xd9\xc1\x6e\x03\xae\xed\xa9\x57\xb1\xa5\x0a\xcc\x8d\x5d\xd6\x4e\x96\x46\x2f\x38\xbb\xf9\xf8\xc7\xd9\x39\x67\x41\x4b\xd5\xa6\x0e\xf2\x9b\x62\xaa\x07\x95\x9d\xa9\xad\x2c\x0a\xb0\x39\x70\xf6\x0f\xb8\x48\x02\x2d\x63\x84\x78\x7b\xd1\x35\x83\x5e\x70\x46\x77\xa6\x6c\x45\xa0\x45\xcd\x52\x8a\x5c\x36\x95\x62\x77\x30\xec\xd0\x68\x25\x02\x3d\xc1\xbd\x8f\x8c\x65\x5a\x8c\xe2\x95\xfd\xd3\xa2\x61\x82\x11\x28\x6d\xd8\x8b\x04\x43\x13\x7b\xbd\xed\xfa\x36\x41\x14\x52\xa8\x77\x0d\x0b\x2c\x38\xcb\x64\x41\x50\x9f\x09\x09\x34\xc6\xe4\xb2\x0e\xe4\x06\xeb\x87\xc7\x5a\x3d\x51\x8f\x20\x96\x95\x7e\xa6\x2d\x54\x60\x3b\xeb\xbf\x23\xec\x33\x74\x2a\x78\xa8\xb9\xb7\x7b\x07\xa6\xca\x92\x24\xbd\x98\x27\xeb\xc4\x99\x54\x2e\xbd\x3e\x70\xef\xbf\x9f\xaa\xa5\x54\xeb\x71\x79\xa2\x8c\xe3\x10\x43\x59\xeb\x95\xaa\x79\xed\xe5\x44\x30\xaa\xb8\xd8\x4a\xab\x0b\xd0\x83\xca\xc7\xd7\xbf\x2b\x63\x43\x02\xdd\x4a\x64\xe8\x38\x03\xe7\xd0\x8d\xab\xd9\x94\x47\x2a\x05\x44\x89\xf1\x3b\x69\xf3\x06\x4c\x75\xc5\x5e\x92\xa8\x28\xbc\x64\xcd\xfd\x2f\x9f\xb5\x06\xf5\xc4\x8c\x6f\xde\x5d\x5c\x34\x40\x0f\x51\xef\x8b\x7a\x45\x7b\x7e\x50\xa6\xb9\x6a\x12\xbd\x13\xf2\xfc\x0a\x6e\xb1\x29\x87\xe0\x3d\x05\xca\x13\x83\xf1\xb2\xce\xee\x68\x79\x88\xd0\x62\x7d\xd2\xa3\x3d\x68\x86\x4d\xfa\x2d\x9d\x86\x9b\xac\xa2\x3a\x93\xaf\xbc\x3e\x2d\x54\xa7\x0c\xd3\x33\x1f\xe5\xd5\xcd\xcb\x60\x38\xbb\xf3\xcf\xc4\xd5\x7e\x7a\x3d\x45\x79\x6d\x64\x14\x62\xea\x85\x37\xe0\xbd\x48\x01\x69\xd9\x15\x2a\x74\x7e\xe9\x21\x9e\x0d\x3e\xe2\xaa\x14\xc6\x1a\x6f\x26\xd2\x79\x86\x80\x86\x9c\x73\xca\x0d\x83\xaf\x21\x8a\xdf\x0e\x31\xc0\x65\xe5\x8a\xd5\x50\x9e\xe8\x2a\x28\x3a\xca\x9a\xf8\xf7\x43\xa1\xb7\x3e\xc1\x6f\x3d\x46\x70\x3d\xc2\x70\x3d\xfa\x70\xb9\xbd\xbe\xfe\xbf\xe1\xeb\xff\x58\xfb\x15\xf7\x76\xf6\x5f\x00\x00\x00\xff\xff\xe1\x49\xf2\xa0\xbe\x0d\x00\x00")

func migrationsSqlTests13_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests13_testSql,
		"migrations/sql/tests/13_test.sql",
	)
}

func migrationsSqlTests13_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests13_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/13_test.sql", size: 3518, mode: os.FileMode(420), modTime: time.Unix(1575534520, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests1_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\xcd\x8e\xdb\x36\x10\x3e\xc7\x4f\x41\xf8\xa2\x5d\x94\x8e\xd7\x2e\x92\x83\x7b\x2a\xd0\x1c\x02\x14\x1b\xa0\x49\xda\x43\x51\x10\x14\x39\x92\x18\x53\x1c\x95\x43\x55\x71\xd7\x79\xf7\x82\xa2\x64\x69\xbd\x42\x9a\xed\xb9\x97\xc5\xfc\x70\x46\xf3\x7d\xf3\xb3\xde\x6c\xd8\x77\xb5\x29\xbd\x0c\xc0\x3e\x36\xab\xd5\xdb\xfb\xf7\x6f\x7e\xf9\xc0\xde\xde\x7f\x78\xc7\xaa\x93\xf6\x52\x28\x6b\xc0\x05\x76\x63\x34\x67\xd2\x5a\xec\x40\x0b\x85\x9e\x04\x7a\x53\x1a\x47\x9c\xa5\x17\xc2\xc9\x1a\x2e\x0a\x81\xf2\x10\x38\xf3\xa0\x8d\x07\x15\x44\xeb\x0d\x71\x56\x7a\xe9\x82\x08\xa7\x06\x28\xfa\xa8\x41\x47\x30\xea\xa4\xb0\x01\xce\xb0\x73\xe0\x39\x6b\xd0\x1a\x75\x8a\x71\x9c\x05\xa4\x24\x0c\xd9\x7b\xd9\x62\x89\x83\x15\x5d\x90\x2a\xd0\xd5\xd7\x05\x7c\x6e\x8c\x07\x12\x32\x70\x46\xa0\x02\x7a\x61\x34\xb8\x60\x0a\x03\x3e\x85\x7e\xea\x8e\x94\xfe\x8e\x5f\x3a\x82\x13\xe0\x74\x83\xc6\x05\x21\xdb\x50\x89\x1a\x42\x85\x3a\xd6\xfb\x67\x0b\x34\x42\x19\x35\xcc\x3f\x45\x7c\x64\x4a\x67\x5c\x29\xa4\x2d\x39\x6b\x09\xbc\x71\x05\xf6\x56\xd0\xe2\x82\xb4\xf7\x52\x9b\x42\x22\x6c\xce\x64\xab\x0d\x38\x05\x9c\x15\x1e\x5d\x50\x95\x74\x0e\xac\x88\xe8\xda\x01\xe9\x92\x83\x80\xc8\xa0\x13\xb1\x0c\xe3\x41\x47\xc2\x28\x8c\xde\x2b\xda\x73\xa9\x8e\x4b\x89\x17\xec\x4f\xf3\xd6\x10\xa4\x96\x41\xde\xae\x7e\xfd\xf1\xe7\x8f\x6f\xde\xaf\x18\xbb\xc9\x76\x9b\x44\x75\xc6\x59\x56\x85\xd0\x1c\xb6\x5b\x8b\x4a\xda\x0a\x29\x9c\x07\x43\x89\x58\x5a\x88\x2f\x08\x6b\x98\x05\xc8\x5c\x69\x28\xbe\x2d\x34\x76\x00\xbd\xf9\x1b\x84\x42\x0d\x67\x53\x37\xd6\x28\xd3\xa7\xe9\x7b\x75\x36\x5a\xf4\x42\xb4\x14\x88\xe7\x5c\xfa\x3e\x0e\x1c\x48\x9a\x7d\x23\xcd\xd3\xcc\x10\x70\xee\x5e\x80\x53\xe2\x94\xe8\x5c\x60\xd4\xee\x26\x7f\x1a\xa8\xf8\xe2\x61\x7d\x84\x13\xad\x0f\xec\xf7\x3f\xbe\xcc\x12\xc4\xa1\x8a\xaa\x43\x07\x33\x73\xeb\xcd\xee\x3c\xc9\xfb\xe8\xf2\xb4\x7f\xf5\x3a\x09\xaf\xf6\xbd\xd0\xb4\xb9\x35\x6a\x0c\xa3\xc3\x76\xdb\x75\xdd\x4b\xf4\xa7\x97\x54\x6d\x65\x63\x66\x09\x0b\xb5\x49\xbd\xdb\x66\x9c\x05\xdf\xc2\xe4\xea\xc7\x60\xb7\x3d\xcf\xd5\xfd\x76\x16\x9b\x2f\xc4\x3e\xac\x0b\xc4\xf5\x61\x9d\x4b\xbf\xfe\x92\xdd\xfe\xf0\xe8\x28\xac\x5e\xa4\xab\x80\xb1\x2f\xfb\x7e\x3f\xe2\x42\x29\x19\xe2\xd0\x0c\xc3\x33\x1c\x8b\xc9\x07\x3a\xed\x60\x1a\xfc\xcb\x20\xbd\x88\x73\x64\xb1\x34\x6e\x33\x44\x6e\x8c\xce\x38\xbb\x7f\xf7\xdb\xcd\x2d\x67\xd9\x6e\x43\x6d\xfe\xbc\x0a\x86\xad\x64\x37\xaa\x92\xd6\x82\x2b\x81\xb3\xbf\xc0\xf7\x1b\x7f\x39\x0f\xb1\xba\xa1\x96\xf9\x56\x5b\xce\xe8\x68\x9a\x8b\x09\xb4\x18\x4e\x92\x22\x5f\x2c\x01\x9a\x1e\x46\x0d\x8d\x56\x22\xde\x22\xf8\x7c\x85\xf1\x52\x4c\xd6\xa3\x1a\x0b\x4a\xda\x34\x79\x3d\xde\x58\x55\x52\xc6\x25\xce\x38\x2b\xa4\x25\x48\x2f\x62\x45\x43\x20\xf9\x62\x62\x6b\x24\xed\xe1\xdf\x7a\xa6\xe2\x25\x72\xe1\x7f\xaa\x9e\x4d\x95\xa8\xa4\xd3\x16\xf4\x23\xca\xfa\x7f\x69\x13\x7e\x0f\x35\xd4\x79\x64\x70\x94\x44\x81\x9e\x33\xf0\x1e\xfd\x35\x0d\xe3\xb1\x95\x4a\x01\x51\xba\x63\x93\x75\xbc\x6c\x4b\x74\x76\x92\x44\x4b\xa0\xbf\x4a\xde\x48\x40\x5a\xec\xef\x5f\xdf\xdd\x25\xd0\x8f\x18\xb8\x32\xf5\xf4\x5d\xb3\xc2\xbe\x61\xe5\x16\xc9\x99\x8d\xce\x57\x69\x91\xea\x09\x37\xff\x15\x73\x9b\x2f\x22\xce\x76\x4f\xfa\x7f\x81\x3a\xff\x11\xf4\x13\x76\x6e\xf5\x4f\x00\x00\x00\xff\xff\x8b\x6b\x7d\x2e\x16\x09\x00\x00")

func migrationsSqlTests1_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests1_testSql,
		"migrations/sql/tests/1_test.sql",
	)
}

func migrationsSqlTests1_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests1_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/1_test.sql", size: 2326, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests2_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xc1\x8e\xdb\x36\x10\x3d\xc7\x5f\x41\xf8\xa2\x5d\x94\x8e\x77\x5d\x24\x87\xed\xa9\x40\x73\x08\x50\x6c\x80\x26\x69\x0f\x45\x41\x50\xe4\x48\x62\x4c\x73\x54\x0e\x55\xc7\x5d\xe7\xdf\x0b\x92\x92\xa5\xb5\x95\x74\x9b\x4b\x73\x59\x70\x66\x38\xa3\x99\xc7\x37\x6f\xbd\x5a\xb1\xef\x76\xa6\xf6\x32\x00\x7b\xdf\x2e\x5e\xdf\xbf\x7d\xf5\xcb\x3b\xf6\xfa\xfe\xdd\x1b\xd6\x1c\xb4\x97\x42\x59\x03\x2e\xb0\x2b\xa3\x39\x93\xd6\xe2\x1e\xb4\x50\xe8\x49\xa0\x37\xb5\x71\xc4\x59\xbe\x21\x9c\xdc\xc1\xc9\x20\x50\x1e\x02\x67\x1e\xb4\xf1\xa0\x82\xe8\xbc\x21\xce\x6a\x2f\x5d\x10\xe1\xd0\x02\xc5\x18\xb5\xe8\x08\x06\x9b\x14\xb6\xc0\x19\xee\x1d\x78\xce\x5a\xb4\x46\x1d\x62\x1e\x67\x01\x29\x1f\xfa\xea\xe9\x6c\xb1\xc6\xde\x8b\x2e\x48\x15\xe8\xec\xeb\x02\x3e\xb6\xc6\x03\x09\x19\x38\x23\x50\x01\xbd\x30\x1a\x5c\x30\x95\x01\x9f\x53\x3f\xec\xb7\x94\xff\x0e\x5f\xda\x82\x13\xe0\x74\x8b\xc6\x05\x21\xbb\xd0\x88\x1d\x84\x06\x75\xec\xf7\xcf\x0e\x68\x18\x65\xb0\xb0\xfc\x10\xe7\x23\x53\x3b\xe3\x6a\x21\x6d\xcd\x59\x47\xe0\x8d\xab\x30\x79\x41\x8b\xd3\xa4\x29\x4a\x5d\x4e\x89\x63\x73\x26\x3b\x6d\xc0\x29\xe0\xac\xf2\xe8\x82\x6a\xa4\x73\x60\x45\x9c\xae\xeb\x27\x9d\x0b\x10\x10\x19\x74\x22\xb6\x61\x3c\xe8\x08\x18\x85\x21\x7a\x06\x7b\x29\xd5\x76\xae\xf0\x8c\xff\xb2\xee\x0e\x82\xd4\x32\xc8\xeb\xc5\xaf\x3f\xfe\xfc\xfe\xd5\xdb\x05\x63\x57\xc5\x66\x95\xa1\x2e\x38\x2b\x9a\x10\xda\xbb\xf5\xda\xa2\x92\xb6\x41\x0a\xc7\xde\x51\x23\xd6\x16\xe2\x0d\xc2\x1d\x4c\x12\x64\xa9\x34\x54\x4f\x4b\x8d\x2f\x80\xde\xfc\x0d\x42\xa1\x86\xa3\xd9\xb5\xd6\x28\x93\xca\xa4\xb7\x3a\x1a\x2d\xd2\x21\x7a\x2a\xc4\x63\x29\x7d\xca\x03\x07\x92\x26\xdf\xc8\x7c\x9a\x38\x02\x4e\xc3\x33\xe3\xd4\x38\x16\x3a\x56\x18\xad\x9b\x31\x9e\x09\x15\x6f\x3c\x2c\xb7\x70\xa0\xe5\x1d\xfb\xfd\x8f\x4f\x93\x02\x91\x54\xd1\x74\xe8\x60\xe2\xee\xbc\xb9\x3d\x8e\xe7\x4d\x0c\x79\xda\xbc\x78\x99\x0f\x2f\x36\xe9\xd0\x76\xa5\x35\x6a\x48\xa3\xbb\xf5\x7a\xbf\xdf\x3f\x47\x7f\x78\x4e\xcd\x5a\xb6\x66\x52\xb0\x52\xab\xfc\x76\xeb\x82\xb3\xe0\x3b\x18\x43\x89\x06\xb7\xeb\xe3\xd4\xdc\xac\x27\xb9\xe5\x4c\xee\xc3\xb2\x42\x5c\xde\x2d\x4b\xe9\x97\x9f\x8a\xeb\x1f\x16\x53\x51\x58\x3c\xcb\xaa\x80\xf1\x5d\x36\x69\x3f\xe2\x42\x29\x19\x22\x69\x7a\xf2\xf4\x62\x31\xc6\x40\xe7\x1d\xcc\xc4\x3f\x11\xe9\x59\xe4\x91\xc5\xda\xb8\x55\x9f\xb9\x32\xba\xe0\xec\xfe\xcd\x6f\x57\xd7\x9c\x15\x9b\x15\x75\xe5\x7f\xeb\xa0\xdf\x4a\x76\xa5\x1a\x69\x2d\xb8\x1a\x38\xfb\x0b\x7c\xda\xf8\x93\x3c\xc4\xee\xfa\x5e\xa6\x5b\x6d\x39\xa3\xad\x69\x4f\x2e\xd0\xa2\x97\x24\x45\xbe\x9a\x1b\x68\xbc\x18\x2d\x34\x5a\x89\xa8\x45\xf0\xf1\x6c\xc6\x53\x33\x45\x9a\x6a\x68\x28\x5b\x23\xf3\xd2\xbc\xb1\xab\x6c\x0c\x4b\x5c\x70\x56\x49\x4b\x90\x6f\xc4\x8e\xfa\x44\xf2\xd5\x88\xd6\x00\xda\xc3\xbf\xbd\x99\x8a\x4a\xe4\xc2\x37\x03\x15\x67\x15\x7a\x15\x2b\xf4\xba\x38\x6a\xf4\xff\x8a\x62\x8a\xe6\xd6\x9e\xc0\xc3\x33\x54\x45\x23\x9d\xb6\xa0\x1f\xa1\x9b\xfe\xfb\x8d\x50\x79\xd8\xc1\xae\x8c\x60\x0f\x27\x51\xa1\xe7\x0c\xbc\x47\x7f\x8e\xd8\xa0\xcb\x52\x29\x20\xca\x92\x37\x7a\x07\x11\x9c\x43\x7e\x2f\x49\x74\x04\xfa\x8b\x60\x0e\x80\x64\x0d\xf8\xfe\xe5\xcd\xcd\x00\xc2\x63\x44\xa6\xae\x04\xe7\xd7\x6c\xe7\x2c\x38\x13\x96\x7d\x11\x16\xa9\x2e\xb0\xf9\xfc\xcc\x5f\xcb\xad\xf8\xde\x73\x60\x14\xb7\x17\x54\x19\x49\xf5\x64\xae\x60\x59\x75\xd4\x37\xfb\x19\x01\x3d\xa1\x71\xb9\x87\x93\xf4\xc7\x33\xe4\xa6\xcf\x76\x61\xbc\x9c\x9a\x9a\xfe\xdc\xfb\x09\xf7\x6e\xf1\x4f\x00\x00\x00\xff\xff\x5d\xc7\x3b\x77\x00\x0a\x00\x00")

func migrationsSqlTests2_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests2_testSql,
		"migrations/sql/tests/2_test.sql",
	)
}

func migrationsSqlTests2_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests2_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/2_test.sql", size: 2560, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests3_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\x1b\x37\x10\x3d\x47\xbf\x82\xd0\x65\x1d\x94\x8a\x6c\x19\xc9\xc1\x3d\x15\x68\x0e\x01\x0a\x07\x68\x92\xf6\x50\x14\x04\x97\x9c\x5d\x31\xa2\x38\x5b\x0e\xb7\x8a\x6a\xf9\xbf\x17\x24\xf7\xcb\xd6\x46\x68\x7a\x69\x2f\x06\x67\x86\x33\x3b\xf3\xf8\xe6\x59\xab\x15\xfb\x6e\x6f\x6a\x2f\x03\xb0\x4f\xcd\xe2\xdd\xfd\x87\xb7\x3f\x7f\x64\xef\xee\x3f\xbe\x67\xdb\xa3\xf6\x52\x28\x6b\xc0\x05\x76\x65\x34\x67\xd2\x5a\x3c\x80\x16\x0a\x3d\x09\xf4\xa6\x36\x8e\x38\xcb\x37\x84\x93\x7b\x18\x0c\x02\xe5\x21\x70\xe6\x41\x1b\x0f\x2a\x88\xd6\x1b\xe2\xac\xf6\xd2\x05\x11\x8e\x0d\x50\x8c\x51\x83\x8e\xa0\xb7\x49\x61\x03\x9c\xe1\xc1\x81\xe7\xac\x41\x6b\xd4\x31\xe6\x71\x16\x90\xf2\xa1\xab\x9e\xce\x16\x6b\xec\xbc\xe8\x82\x54\x81\x9e\x7d\x5d\xc0\x97\xc6\x78\x20\x21\x03\x67\x04\x2a\xa0\x17\x46\x83\x0b\xa6\x32\xe0\x73\xea\xe7\xc3\x8e\xf2\xdf\xfe\x4b\x3b\x70\x02\x9c\x6e\xd0\xb8\x20\x64\x1b\xb6\x62\x0f\x61\x8b\x3a\xf6\xfb\x47\x0b\xd4\x8f\xd2\x5b\x58\x7e\x8e\xf3\x91\xa9\x9d\x71\xb5\x90\xb6\xe6\xac\x25\xf0\xc6\x55\x98\xbc\xa0\xc5\x30\x69\x8a\x52\x9b\x53\xe2\xd8\x9c\xc9\x56\x1b\x70\x0a\x38\xab\x3c\xba\xa0\xb6\xd2\x39\xb0\x22\x4e\xd7\x76\x93\xce\x05\x08\x88\x0c\x3a\x11\xdb\x30\x1e\x74\x04\x8c\x42\x1f\x7d\x06\x7b\x29\xd5\x6e\xae\xf0\x8c\xff\xbc\xee\x1e\x82\xd4\x32\xc8\x97\x8b\x5f\x7e\xf8\xe9\xd3\xdb\x0f\x0b\xc6\xae\x8a\xdb\x55\x86\xba\xe0\xac\xd8\x86\xd0\xdc\xad\xd7\x16\x95\xb4\x5b\xa4\x70\xea\x1c\x35\x62\x6d\x21\xde\x20\xdc\xc3\x24\x41\x96\x4a\x43\xf5\xcf\x52\xe3\x0b\xa0\x37\x7f\x81\x50\xa8\xe1\x64\xf6\x8d\x35\xca\xa4\x32\xe9\xad\x4e\x46\x8b\x74\x88\x9e\x0a\xf1\x54\x4a\x9f\xf2\xc0\x81\xa4\xc9\x37\x32\x9f\x26\x8e\x80\xd3\xf0\xcc\x38\x35\x8e\x85\x4e\x15\x46\xeb\x7a\x8c\x67\x42\xc5\x1b\x0f\xcb\x1d\x1c\x69\x79\xc7\x7e\xfb\xfd\x71\x52\x20\x92\x2a\x9a\x0e\x1d\x4c\xdc\xad\x37\x37\xa7\xf1\xbc\x89\x21\x4f\x9b\xd7\x6f\xf2\xe1\xf5\x26\x1d\x9a\xb6\xb4\x46\xf5\x69\x74\xb7\x5e\x1f\x0e\x87\x57\xe8\x8f\xaf\x68\xbb\x96\x8d\x99\x14\xac\xd4\x2a\xbf\xdd\xba\xe0\x2c\xf8\x16\xc6\x50\xa2\xc1\xcd\xfa\x34\x35\x37\xeb\x49\x6e\x39\x93\xfb\xb0\xac\x10\x97\x77\xcb\x52\xfa\xe5\x63\xf1\xf2\xfb\xc5\x54\x14\x16\x2f\xb2\x2a\x60\x7c\x97\x4d\xda\x8f\xb8\x50\x4a\x86\x48\x9a\x8e\x3c\x9d\x58\x8c\x31\xd0\x79\x07\x33\xf1\x07\x22\xbd\x88\x3c\xb2\x58\x1b\xb7\xea\x32\x57\x46\x17\x9c\xdd\xbf\xff\xf5\xea\x25\x67\xc5\xed\x8a\xda\xf2\xdb\x3a\xe8\xb6\x92\x5d\xa9\xad\xb4\x16\x5c\x0d\x9c\xfd\x09\x3e\x6d\xfc\x20\x0f\xb1\xbb\xae\x97\xe9\x56\x5b\xce\x68\x67\x9a\xc1\x05\x5a\x74\x92\xa4\xc8\x57\x73\x03\x8d\x17\xa3\x85\x46\x2b\x11\xb5\x08\xbe\x84\x24\x4f\x66\x40\x44\x18\xfd\x74\xea\xa1\xbd\x22\xcd\xd9\xb7\x98\xad\x91\x8b\x09\x81\xd8\x67\x36\xfa\xb5\x2e\x38\xab\xa4\x25\xc8\x37\x62\x8f\x5d\x22\xf9\x6a\xc4\xaf\x87\xf1\xe1\x31\x47\xcf\x90\xbe\x8c\xac\x8a\x8a\xe5\xc2\xff\x08\xd2\x0a\xbd\x8a\x15\x3a\xfd\x1c\xb5\xfc\x1c\xed\xde\x33\xf4\xfc\xdf\xc3\x9f\xbb\x4f\x94\x9e\x7f\x8e\x5c\x63\xe8\xec\x9b\x5e\x47\x6c\xa5\xd3\x16\xf4\x93\x57\x4a\xff\x6d\x47\xc8\x3d\xec\x61\x5f\x46\xb4\xfa\x93\xa8\xd0\x73\x06\xde\xa3\x7f\x8e\x7c\x0f\xa5\x54\x0a\x88\xb2\xc4\x8e\xde\x5e\x74\xe7\x5e\xf0\x20\x49\xb4\x04\x97\x09\xdf\xa3\x96\x35\xe7\xf6\xcd\xf5\x75\x8f\xd4\x53\xd8\xa6\xae\x84\xf9\xbf\x51\x83\x59\x70\x26\x6c\xbd\x08\x8b\x54\x67\xd8\x7c\x7d\xe6\x0b\x1c\xbd\x0c\x47\x22\xc5\x39\x18\xc5\xcd\x19\x9f\x46\xe6\x4d\x08\x75\x19\x15\x2c\xab\x96\xba\x66\xbf\x22\xd8\x03\x1a\xe7\xfb\x3c\x49\x7f\x3a\xc3\xc0\xe4\xe9\xc2\x8c\x97\x53\x53\xd3\x9f\x97\x3f\xe2\xc1\x2d\xfe\x0e\x00\x00\xff\xff\x29\xb3\x7f\x68\x70\x0a\x00\x00")

func migrationsSqlTests3_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests3_testSql,
		"migrations/sql/tests/3_test.sql",
	)
}

func migrationsSqlTests3_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests3_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/3_test.sql", size: 2672, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests4_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x51\x6f\x1b\x37\x0c\x7e\xae\x7f\x85\xe0\x97\x4b\x30\xb9\x4e\xbc\xb4\x0f\xd9\xd3\x80\xf5\xa1\xc0\x90\x02\x6b\xbb\x3d\x0c\x83\xa0\x93\x78\x67\xd5\x67\xf1\x26\xea\xe6\x7a\x71\xfe\x7b\x21\xe9\xce\xa7\xc4\x57\xb7\x7d\xcb\x8b\x21\x92\x22\x45\x7e\xfc\xc8\xf3\x62\xc1\x7e\xda\x9a\xda\x49\x0f\xec\x63\x3b\x7b\x7b\xf7\xfe\xcd\x1f\x1f\xd8\xdb\xbb\x0f\xef\xd8\x7a\xaf\x9d\x14\xaa\x31\x60\x3d\xbb\x30\x9a\x33\xd9\x34\xb8\x03\x2d\x14\x3a\x12\xe8\x4c\x6d\x2c\x71\x96\x6e\x08\x2b\xb7\x70\x14\x08\x94\x03\xcf\x99\x03\x6d\x1c\x28\x2f\x3a\x67\x88\xb3\xda\x49\xeb\x85\xdf\xb7\x40\xc1\x46\x2d\x5a\x82\x41\x26\x85\x2d\x70\x86\x3b\x0b\x8e\xb3\x16\x1b\xa3\xf6\xc1\x8f\x33\x8f\x94\x0e\x7d\xf4\x78\x6e\xb0\xc6\x5e\x8b\xd6\x4b\xe5\xe9\xc9\xeb\x02\x3e\xb7\xc6\x01\x09\xe9\x39\x23\x50\x1e\x9d\x30\x1a\xac\x37\x95\x01\x97\x5c\x3f\xed\x36\x94\x7e\x87\x97\x36\x60\x05\x58\xdd\xa2\xb1\x5e\xc8\xce\xaf\xc5\x16\xfc\x1a\x75\xc8\xf7\xdf\x0e\x68\x28\x65\x90\xb0\xfc\x14\xea\x23\x53\x5b\x63\x6b\x21\x9b\x9a\xb3\x8e\xc0\x19\x5b\x61\xd4\x82\x16\xc7\x4a\xa3\x95\xba\xe4\x12\xca\xe6\x4c\x76\xda\x80\x55\xc0\x59\xe5\xd0\x7a\xb5\x96\xd6\x42\x23\x42\x75\x5d\x5f\xe9\x94\x81\x80\xc8\xa0\x15\x21\x0d\xe3\x40\x07\xc0\xc8\x0f\xd6\x27\xb0\x97\x52\x6d\xa6\x02\x4f\xe8\x4f\xe3\x6e\xc1\x4b\x2d\xbd\xbc\x9c\xfd\xf9\xeb\xef\x1f\xdf\xbc\x9f\x31\x76\x51\xdc\x2c\x12\xd4\x05\x67\xc5\xda\xfb\xf6\x76\xb9\x6c\x50\xc9\x66\x8d\xe4\x0f\xbd\xa2\x46\xac\x1b\x08\x37\x08\xb7\x90\x39\xc8\x52\x69\xa8\xbe\xcf\x35\x74\x00\x9d\xf9\x1f\x84\x42\x0d\x07\xb3\x6d\x1b\xa3\x4c\x0c\x13\x7b\x75\x30\x5a\xc4\x43\xd0\x54\x88\x87\x52\xba\xe8\x07\x16\x24\x65\x6f\x24\x3e\x65\x0a\x8f\xb9\x79\xa2\x9c\x1a\xc7\x40\x87\x0a\x83\x74\x35\xda\x13\xa1\xc2\x8d\xfb\xf9\x06\xf6\x34\xbf\x65\x7f\xff\xf3\x90\x05\x08\xa4\x0a\xa2\x45\x0b\x99\xba\x73\xe6\xfa\x30\x9e\x57\xc1\xe4\x68\xf5\xea\x75\x3a\xbc\x5a\xc5\x43\xdb\x95\x8d\x51\x83\x1b\xdd\x2e\x97\xbb\xdd\xee\x25\xba\xfd\x4b\x5a\x2f\x65\x6b\xb2\x80\x95\x5a\xa4\xde\x2d\x0b\xce\xbc\xeb\x60\x34\x45\x1a\x5c\x2f\x0f\xb9\xb8\x5a\x66\xbe\xe5\x84\xef\xfd\xbc\x42\x9c\xdf\xce\x4b\xe9\xe6\x0f\xc5\xe5\x2f\xb3\x7c\x29\xcc\x5e\xa4\xad\x80\xa1\x2f\xab\x38\x1f\x61\xa0\x94\xf4\x81\x34\x3d\x79\xfa\x65\x31\xda\x40\xa7\x19\x4c\xc4\x3f\x12\xe9\x45\xe0\x51\x83\xb5\xb1\x8b\xde\x73\x61\x74\xc1\xd9\xdd\xbb\xbf\x2e\x2e\x39\x2b\x6e\x16\xd4\x95\x3f\x96\x41\x3f\x95\xec\x42\xad\x65\xd3\x80\xad\x81\xb3\xff\xc0\xc5\x89\x3f\xae\x87\x90\x5d\x9f\x4b\x3e\xd5\x0d\x67\xb4\x31\xed\x51\x05\x5a\xf4\x2b\x49\x91\xab\xa6\x0a\x1a\x2f\x06\x09\x8d\x56\x22\xec\x22\xf8\xec\xe3\x7a\x32\x47\x44\xe2\x93\xf9\x6d\x31\x8c\xfd\x63\x30\x8e\x59\x17\xb1\xfc\x21\xf3\x24\x8d\x14\x8d\xc0\x84\xf4\x93\x30\x4c\x7b\xc1\x59\x25\x1b\x82\x74\x23\xa4\xde\x3b\x92\xab\x46\x58\x07\x74\xef\x1f\x92\x75\xa2\x01\xc5\xcd\x42\x76\xfa\x1b\xc8\xab\xb0\xd1\xac\x7f\x46\x90\x57\xe8\x54\x88\xd0\xef\xd7\x71\xd7\x4f\x75\x23\x69\xb2\x9c\x9f\x69\x7b\x52\x51\x71\x12\xce\xb4\xeb\x49\x66\x3f\xdc\x3d\xb1\x96\x56\x37\xa0\x1f\x75\x31\x7e\xad\xc7\x96\x38\xd8\xc2\xb6\x0c\x68\x0e\x27\x51\xa1\xe3\x0c\x9c\x43\xf7\xb4\x33\x03\xd4\x52\x29\x20\x4a\x2b\x7a\xd4\x0e\x4b\x7b\xaa\xc3\x3b\x49\xa2\xa3\xf0\xe5\x19\xde\xff\xde\x7e\x0c\x98\xa6\x45\xf6\xf3\xeb\xab\xab\x01\xc7\xc7\xa0\xe6\xaa\xb1\x23\xdf\xc6\x6c\x7a\xd7\x4c\x42\x97\x71\xfd\x2c\x68\x52\x9d\x20\x77\x0e\x91\xaf\x32\xfc\x3c\x2e\x91\x3b\xa7\xa8\x14\xd7\x27\xb4\x1b\xe1\xc8\x78\x77\x1e\x15\x2c\xab\x8e\xfa\x64\xbf\xf2\x39\x38\xa2\x71\xba\x0d\x32\xf7\xc7\x35\x1c\x09\x9f\xcf\xd5\x78\x39\x26\x95\xff\x79\xfd\x0d\x77\x76\xf6\x25\x00\x00\xff\xff\x5e\x27\xda\x9c\xce\x0a\x00\x00")

func migrationsSqlTests4_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests4_testSql,
		"migrations/sql/tests/4_test.sql",
	)
}

func migrationsSqlTests4_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests4_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/4_test.sql", size: 2766, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests5_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x51\x8f\xdb\x36\x0c\x7e\x6e\x7e\x85\x90\x17\xdf\x61\x4a\x73\x97\x21\x7d\xb8\x3d\x0d\x58\x1f\x0a\x0c\x57\x60\x6d\xb7\x87\x61\x10\x64\x89\x76\xd4\x38\xa2\x27\xca\x4b\xb3\xcb\xfd\xf7\x42\x92\x1d\xeb\x2e\x6e\xda\xbe\xf5\x25\x10\x49\x91\x22\x3f\x7e\xa4\xb3\x58\xb0\x9f\x76\xa6\x76\xd2\x03\xfb\xd0\xce\xde\xdc\xbf\x7b\xfd\xc7\x7b\xf6\xe6\xfe\xfd\x5b\xb6\x39\x68\x27\x85\x6a\x0c\x58\xcf\xae\x8c\xe6\x4c\x36\x0d\xee\x41\x0b\x85\x8e\x04\x3a\x53\x1b\x4b\x9c\xa5\x1b\xc2\xca\x1d\x9c\x04\x02\xe5\xc0\x73\xe6\x40\x1b\x07\xca\x8b\xce\x19\xe2\xac\x76\xd2\x7a\xe1\x0f\x2d\x50\xb0\x51\x8b\x96\x60\x90\x49\x61\x0b\x9c\xe1\xde\x82\xe3\xac\xc5\xc6\xa8\x43\xf0\xe3\xcc\x23\xa5\x43\x1f\x3d\x9e\x1b\xac\xb1\xd7\xa2\xf5\x52\x79\x7a\xf6\xba\x80\x4f\xad\x71\x40\x42\x7a\xce\x08\x94\x47\x27\x8c\x06\xeb\x4d\x65\xc0\x25\xd7\x8f\xfb\x2d\xa5\xdf\xe1\xa5\x2d\x58\x01\x56\xb7\x68\xac\x17\xb2\xf3\x1b\xb1\x03\xbf\x41\x1d\xf2\xfd\xb7\x03\x1a\x4a\x19\x24\x2c\x3f\x86\xfa\xc8\xd4\xd6\xd8\x5a\xc8\xa6\xe6\xac\x23\x70\xc6\x56\x18\xb5\xa0\xc5\xa9\xd2\x68\xa5\x2e\xb9\x84\xb2\x39\x93\x9d\x36\x60\x15\x70\x56\x39\xb4\x5e\x6d\xa4\xb5\xd0\x88\x50\x5d\xd7\x57\x3a\x65\x20\x20\x32\x68\x45\x48\xc3\x38\xd0\x01\x30\xf2\x83\xf5\x19\xec\xa5\x54\xdb\xa9\xc0\x13\xfa\xf3\xb8\x3b\xf0\x52\x4b\x2f\xaf\x67\x7f\xfe\xfa\xfb\x87\xd7\xef\x66\x8c\x5d\x15\xeb\x45\x82\xba\xe0\xac\xd8\x78\xdf\xde\x2d\x97\x0d\x2a\xd9\x6c\x90\xfc\xb1\x57\xd4\x88\x75\x03\xe1\x06\xe1\x0e\x32\x07\x59\x2a\x0d\xd5\xb7\xb9\x86\x0e\xa0\x33\xff\x83\x50\xa8\xe1\x68\x76\x6d\x63\x94\x89\x61\x62\xaf\x8e\x46\x8b\x78\x08\x9a\x0a\xf1\x58\x4a\x17\xfd\xc0\x82\xa4\xec\x8d\xc4\xa7\x4c\xe1\x31\x37\x4f\x94\x53\xe3\x18\xe8\x58\x61\x90\x6e\x46\x7b\x22\x54\xb8\xf1\x30\xdf\xc2\x81\xe6\x77\xec\xef\x7f\x1e\xb3\x00\x81\x54\x41\xb4\x68\x21\x53\x77\xce\xdc\x1e\xc7\xf3\x2a\x98\x1c\xad\xd6\xaf\xd2\x61\xbd\x8a\x87\xb6\x2b\x1b\xa3\x06\x37\xba\x5b\x2e\xf7\xfb\xfd\x4b\x74\x87\x97\xb4\x59\xca\xd6\x64\x01\x2b\xb5\x48\xbd\x5b\x16\x9c\x79\xd7\xc1\x68\x8a\x34\xb8\x5d\x1e\x73\x71\xb5\xcc\x7c\xcb\x09\xdf\x87\x79\x85\x38\xbf\x9b\x97\xd2\xcd\x1f\x8b\xeb\x5f\x66\xf9\x52\x98\xbd\x48\x5b\x01\x43\x5f\x56\x71\x3e\xc2\x40\x29\xe9\x03\x69\x7a\xf2\xf4\xcb\x62\xb4\x81\x4e\x33\x98\x88\x7f\x22\xd2\x8b\xc0\xa3\x06\x6b\x63\x17\xbd\xe7\xc2\xe8\x82\xb3\xfb\xb7\x7f\x5d\x5d\x73\x56\xac\x17\xd4\x95\xdf\x97\x41\x3f\x95\xec\x4a\x6d\x64\xd3\x80\xad\x81\xb3\xff\xc0\xc5\x89\x3f\xad\x87\x90\x5d\x9f\x4b\x3e\xd5\x0d\x67\xb4\x35\xed\x49\x05\x5a\xf4\x2b\x49\x91\xab\xa6\x0a\x1a\x2f\x06\x09\x8d\x56\x22\xec\x22\xf8\xe4\xe3\x7a\x32\x27\x44\xe2\x93\xf9\x6d\x31\x8c\xfd\x53\x30\x4e\x59\x17\xb1\xfc\x21\xf3\x24\x8d\x14\x8d\xc0\x84\xf4\x93\x30\x4c\x7b\xc1\x59\x25\x1b\x82\x74\x23\xa4\xde\x3b\x92\xab\x46\x58\x07\x74\x1f\x1e\x93\x75\xa2\x01\xc5\x7a\x21\x3b\xfd\x15\xe4\x55\xd8\x68\xd6\xff\x40\x90\x57\xe8\x54\x88\xd0\xef\xd7\x71\xd7\x4f\x75\x23\x69\xb2\x9c\x7f\xd0\xf6\xa4\xa2\xe2\x24\x5c\x68\xd7\xb3\xcc\xbe\xbb\x7b\x62\x23\xad\x6e\x40\x3f\xe9\x62\xfc\x5a\x8f\x2d\x71\xb0\x83\x5d\x19\xd0\x1c\x4e\xa2\x42\xc7\x19\x38\x87\xee\x79\x67\x06\xa8\xa5\x52\x40\x94\x56\xf4\xa8\x1d\x96\xf6\x54\x87\xf7\x92\x44\x47\xe1\xcb\x33\xbc\xff\xad\xfd\x18\x30\x4d\x8b\xec\xe7\x57\x37\x37\x03\x8e\x4f\x41\xcd\x55\x63\x47\xbe\x8e\xd9\xf4\xae\x99\x84\x2e\xe3\xfa\x45\xd0\xa4\x3a\x43\xee\x12\x22\x5f\x64\xf8\x65\x5c\x22\x77\xce\x51\x29\x6e\xcf\x68\x37\xc2\x91\xf1\xee\x32\x2a\x58\x56\x1d\xf5\xc9\x7e\xe1\x73\x70\x42\xe3\x7c\x1b\x64\xee\x4f\x6b\x38\x11\x3e\x9f\xab\xf1\x72\x4c\x2a\xff\xf3\xfa\x1b\xee\xed\xec\x73\x00\x00\x00\xff\xff\xd2\xa9\x25\xb5\xce\x0a\x00\x00")

func migrationsSqlTests5_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests5_testSql,
		"migrations/sql/tests/5_test.sql",
	)
}

func migrationsSqlTests5_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests5_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/5_test.sql", size: 2766, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests6_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5f\x6f\xdb\x36\x10\x7f\xae\x3f\x05\xe1\x17\xa5\x98\x54\x27\x0e\x9a\x01\xd9\xd3\x80\xf5\xa1\xc0\x90\x02\x6b\xba\x3d\x0c\x03\x41\x91\x27\x89\xb5\xcc\xd3\x78\x54\x15\x2f\xce\x77\x1f\x28\x4a\x96\xec\x28\x7f\xba\x01\xc9\xb0\x06\x08\x02\xf2\xc8\x3b\xdd\xfd\x7e\x77\x47\xd2\x49\xc2\xbe\x5b\xeb\xdc\x0a\x07\xec\x53\x35\x7b\x7f\xf1\xf1\xdd\x2f\x97\xec\xfd\xc5\xe5\x07\x56\x6c\x94\x15\x5c\x96\x1a\x8c\x63\x47\x5a\xc5\x4c\x94\x25\x36\xa0\xb8\x44\x4b\x1c\xad\xce\xb5\xa1\x98\x85\x1d\xdc\x88\x35\xec\x26\x04\xd2\x82\x8b\x99\x05\xa5\x2d\x48\xc7\x6b\xab\x29\x66\xb9\x15\xc6\x71\xb7\xa9\x80\xfc\x1a\x55\x68\x08\xfa\x39\x49\xac\x20\x66\xd8\x18\xb0\x31\xab\xb0\xd4\x72\xe3\xf5\x62\xe6\x90\xc2\xa0\xb3\xde\x8e\x4b\xcc\xb1\x93\xa2\x71\x42\x3a\x3a\xf8\x3a\x87\xab\x4a\x5b\x20\x2e\x5c\xcc\x08\xa4\x43\xcb\xb5\x02\xe3\x74\xa6\xc1\x06\xd5\xcf\xcd\x8a\xc2\xff\xfe\x4b\x2b\x30\x1c\x8c\xaa\x50\x1b\xc7\x45\xed\x0a\xbe\x06\x57\xa0\xf2\xfe\xfe\x59\x03\xf5\xa1\xf4\x33\x4c\x3f\xfb\xf8\x48\xe7\x46\x9b\x9c\x8b\x32\x8f\x59\x4d\x60\xb5\xc9\xb0\x95\x82\xe2\xbb\x48\xdb\x55\xaa\x83\x8a\x0f\x3b\x66\xa2\x56\x1a\x8c\x84\x98\x65\x16\x8d\x93\x85\x30\x06\x4a\xee\xa3\xab\xbb\x48\xa7\x16\x08\x88\x34\x1a\xee\xdd\xd0\x16\x94\x07\x8c\x5c\xbf\x7a\x00\x7b\x2a\xe4\x6a\xca\xf0\x84\xfc\xb6\xdd\x35\x38\xa1\x84\x13\xaf\x67\xbf\xfe\xf8\xf3\xa7\x77\x1f\x67\x8c\x1d\x45\x67\x49\x80\x3a\x8a\x59\x54\x38\x57\x9d\x2f\x16\x25\x4a\x51\x16\x48\x6e\xdb\x09\x72\xc4\xbc\x04\xbf\x83\x70\x0d\x23\x05\x91\x4a\x05\xd9\xe3\x54\x3d\x03\x68\xf5\x5f\xc0\x25\x2a\xd8\xea\x75\x55\x6a\xa9\x5b\x33\x2d\x57\x5b\xad\x78\x3b\xf0\x92\x0c\x71\x9b\x0a\xdb\xea\x81\x01\x41\xa3\x6f\x84\x7c\x1a\x09\x1c\x8e\x97\x27\xc2\xc9\x71\x30\xb4\xcd\xd0\xcf\x8e\x87\xf5\x90\x50\x7e\xc7\xf5\x7c\x05\x1b\x9a\x9f\xb3\xdf\xff\xb8\x19\x19\xf0\x49\xe5\xa7\x06\x0d\x8c\xc4\xb5\xd5\x27\xdb\x61\xbc\xf4\x4b\x96\x96\x6f\xcf\xc2\xe0\xed\xb2\x1d\x54\x75\x5a\x6a\xd9\xab\xd1\xf9\x62\xd1\x34\xcd\x1b\xb4\x9b\x37\x54\x2c\x44\xa5\x47\x06\x33\x99\x04\xee\x16\x51\xcc\x9c\xad\x61\x58\x6a\xd3\xe0\x64\xb1\x1d\x4f\x97\x8b\x91\x6e\x3a\xa1\x7b\x3d\xcf\x10\xe7\xe7\xf3\x54\xd8\xf9\x4d\xf4\xfa\x87\xd9\xb8\x29\xcc\x5e\x85\xae\x80\x9e\x97\x65\x5b\x1f\xbe\xa0\xa4\x70\x3e\x69\xba\xe4\xe9\x9a\xc5\xb0\x06\x2a\xd4\x60\x48\xfc\x5d\x22\xbd\xf2\x79\x54\x62\xae\x4d\xd2\x69\x26\x5a\x45\x31\xbb\xf8\xf0\xdb\xd1\xeb\x98\x45\x67\x09\xd5\xe9\xd7\x79\xd0\x55\x25\x3b\x92\x85\x28\x4b\x30\x39\xc4\xec\x0b\xd8\xb6\xe2\x77\xed\xc1\x7b\xd7\xf9\x32\xae\xea\x32\x66\xb4\xd2\xd5\x4e\x04\x8a\x77\x2d\x49\x92\xcd\xa6\x02\x1a\x36\xfa\x19\x6a\x25\xb9\xef\x45\x70\xe5\xda\xf6\xa4\x77\x88\xb4\x9f\x1c\xef\xe6\x7d\xd9\xef\x83\xb1\xf3\x3a\x6a\xc3\xef\x3d\x0f\xb3\x21\x45\x5b\x60\xbc\xfb\x61\xd2\x57\x7b\x14\xb3\x4c\x94\x04\x61\x87\x77\xbd\x53\x24\x9b\x0d\xb0\xf6\xe8\x5e\xdf\x84\xd5\x09\x02\xa2\xb3\x44\xd4\xea\x01\xe4\xa5\xef\x68\xc6\xfd\x87\x20\xcf\xd0\x4a\x6f\xa1\xeb\xaf\x43\xaf\x9f\x62\x23\x48\x46\x3e\x4f\xd2\x13\x33\x21\xed\xf3\x73\x14\x22\x6b\xcb\xe1\x1e\xce\x0e\x3c\xf3\x14\x86\x81\xb4\x5f\xc7\x25\x2f\x84\x51\x25\xa8\x3d\x4e\xdb\xb3\x7b\x20\xc8\xc2\x1a\xd6\xa9\xc7\xb6\x1f\xf1\x0c\x6d\xcc\xc0\x5a\xb4\x87\x3c\xf5\xc0\x0b\x29\x81\x28\x34\xec\x41\xda\xb7\xf0\x29\xbe\x1b\x41\xbc\x26\x7f\x0e\xf5\xdf\x7f\x6c\xf1\xf4\xe0\x86\xb6\x76\x7a\x76\x7c\xdc\x03\xba\x8f\xee\x58\x34\x50\xf3\x70\xfe\x4f\x77\x9e\x49\xe8\x46\x99\x7f\x2f\x68\x42\xde\x42\xee\x3e\x44\xee\xcc\xf7\xfb\x71\x69\x93\xe8\x36\x2a\xd1\xc9\xad\xfc\x1b\xe0\x18\x25\xe0\xfd\xa8\x60\x9a\xd5\xd4\x39\x7b\xc7\xe1\xb0\x43\xe3\x76\x6f\x18\xa9\xef\xc7\xb0\xcb\xfc\x71\x81\x0d\x9b\x5b\xa7\x92\x84\x5d\x16\x9a\x98\xff\x33\x3e\xa3\x35\x39\x7f\x75\xf5\x97\x17\x46\x15\x48\x9d\x69\x29\xca\x72\xc3\xb4\x21\xb0\x0e\x94\x47\x90\xb9\x02\x98\x14\x04\xac\x29\xc0\x02\x6b\x80\x15\xe2\x0b\xec\x9b\x20\xe7\xef\xc7\x29\x64\x68\x81\xc1\x15\xc8\xda\x69\x93\xb3\x70\x71\xf6\x41\x7d\xcf\x9a\x42\xcb\x82\x09\xa5\xc8\x5b\x05\x9d\x1b\xb6\x82\x8d\xbf\x9b\x92\xb3\x42\x1b\x47\x6f\xbe\x99\x63\x2c\xcd\x56\x27\x87\x69\xd7\xca\x9e\xa0\x59\xea\x44\x61\x62\xd0\x25\x70\xa5\xc9\xed\x1d\x66\xdf\x10\xfc\xcb\x09\xf8\x97\x7b\xf0\x4f\xe1\xf4\x72\xab\x78\xb6\x5b\xc5\x73\x96\xcc\xe3\xee\x17\x77\x15\xd6\xf8\x8a\xf1\xc2\xeb\x04\xaf\x0f\xd7\xe2\x13\xf1\x3a\xc5\xe0\x03\x77\xc6\x17\x42\x27\x08\x3d\x9d\x20\xf4\xf4\x29\x9b\xeb\xcb\x73\xe0\xc1\xe7\xc0\x14\x03\x69\xb6\xfa\x97\xaf\x02\x6f\xe1\x7f\xf3\x32\xb8\x13\xa2\x7f\xf2\x40\xf0\x8a\xcf\xfd\x48\x18\x9c\xbf\x33\xb6\x83\x27\xc3\x6c\xfc\xf3\xf7\x4f\xd8\x98\xd9\xdf\x01\x00\x00\xff\xff\xd3\x57\x91\x4f\x10\x17\x00\x00")

func migrationsSqlTests6_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests6_testSql,
		"migrations/sql/tests/6_test.sql",
	)
}

func migrationsSqlTests6_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests6_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/6_test.sql", size: 5904, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests7_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x51\x6f\x1b\x37\x0c\x7e\xae\x7f\x85\xe0\x97\x4b\x30\xb9\x4e\x3c\xb4\x01\xb2\xa7\x01\xeb\x43\x81\x21\x05\xd6\x76\x7b\x18\x06\x41\x27\xf1\xce\xaa\xcf\xe2\x4d\xd4\xcd\xf5\xe2\xfc\xf7\x41\xd2\x9d\x4f\x89\xaf\x6e\xf3\xb4\xbe\x18\x22\x29\x52\xe4\xc7\x8f\x3c\x2f\x16\xec\x87\xad\xa9\x9d\xf4\xc0\x3e\xb6\xb3\xb7\x77\xef\xdf\xfc\xf6\x81\xbd\xbd\xfb\xf0\x8e\xad\xf7\xda\x49\xa1\x1a\x03\xd6\xb3\x0b\xa3\x39\x93\x4d\x83\x3b\xd0\x42\xa1\x23\x81\xce\xd4\xc6\x12\x67\xe9\x86\xb0\x72\x0b\x47\x81\x40\x39\xf0\x9c\x39\xd0\xc6\x81\xf2\xa2\x73\x86\x38\xab\x9d\xb4\x5e\xf8\x7d\x0b\x14\x6c\xd4\xa2\x25\x18\x64\x52\xd8\x02\x67\xb8\xb3\xe0\x38\x6b\xb1\x31\x6a\x1f\xfc\x38\xf3\x48\xe9\xd0\x47\x8f\xe7\x06\x6b\xec\xb5\x68\xbd\x54\x9e\x9e\xbc\x2e\xe0\x73\x6b\x1c\x90\x90\x9e\x33\x02\xe5\xd1\x09\xa3\xc1\x7a\x53\x19\x70\xc9\xf5\xd3\x6e\x43\xe9\x77\x78\x69\x03\x56\x80\xd5\x2d\x1a\xeb\x85\xec\xfc\x5a\x6c\xc1\xaf\x51\x87\x7c\xff\xee\x80\x86\x52\x06\x09\xcb\x4f\xa1\x3e\x32\xb5\x35\xb6\x16\xb2\xa9\x39\xeb\x08\x9c\xb1\x15\x46\x2d\x68\x71\xac\x34\x5a\xa9\x4b\x2e\xa1\x6c\xce\x64\xa7\x0d\x58\x05\x9c\x55\x0e\xad\x57\x6b\x69\x2d\x34\x22\x54\xd7\xf5\x95\x4e\x19\x08\x88\x0c\x5a\x11\xd2\x30\x0e\x74\x00\x8c\xfc\x60\x7d\x02\x7b\x29\xd5\x66\x2a\xf0\x84\xfe\x34\xee\x16\xbc\xd4\xd2\xcb\xcb\xd9\xef\x3f\xff\xfa\xf1\xcd\xfb\x19\x63\x17\xc5\xcd\x22\x41\x5d\x70\x56\xac\xbd\x6f\x6f\x97\xcb\x06\x95\x6c\xd6\x48\xfe\xd0\x2b\x6a\xc4\xba\x81\x70\x83\x70\x0b\x99\x83\x2c\x95\x86\xea\xdb\x5c\x43\x07\xd0\x99\x7f\x41\x28\xd4\x70\x30\xdb\xb6\x31\xca\xc4\x30\xb1\x57\x07\xa3\x45\x3c\x04\x4d\x85\x78\x28\xa5\x8b\x7e\x60\x41\x52\xf6\x46\xe2\x53\xa6\xf0\x98\x9b\x27\xca\xa9\x71\x0c\x74\xa8\x30\x48\x57\xa3\x3d\x11\x2a\xdc\xb8\x9f\x6f\x60\x4f\xf3\x5b\xf6\xe7\x5f\x0f\x59\x80\x40\xaa\x20\x5a\xb4\x90\xa9\x3b\x67\xae\x0f\xe3\x79\x15\x4c\x8e\x56\xaf\x5e\xa7\xc3\xab\x55\x3c\xb4\x5d\xd9\x18\x35\xb8\xd1\xed\x72\xb9\xdb\xed\x5e\xa2\xdb\xbf\xa4\xf5\x52\xb6\x26\x0b\x58\xa9\x45\xea\xdd\xb2\xe0\xcc\xbb\x0e\x46\x53\xa4\xc1\xf5\xf2\x90\x8b\xab\x65\xe6\x5b\x4e\xf8\xde\xcf\x2b\xc4\xf9\xed\xbc\x94\x6e\xfe\x50\x5c\xfe\x34\xcb\x97\xc2\xec\x45\xda\x0a\x18\xfa\xb2\x8a\xf3\x11\x06\x4a\x49\x1f\x48\xd3\x93\xa7\x5f\x16\xa3\x0d\x74\x9a\xc1\x44\xfc\x23\x91\x5e\x04\x1e\x35\x58\x1b\xbb\xe8\x3d\x17\x46\x17\x9c\xdd\xbd\xfb\xe3\xe2\x92\xb3\xe2\x66\x41\x5d\xf9\xbc\x0c\xfa\xa9\x64\x17\x6a\x2d\x9b\x06\x6c\x0d\x9c\xfd\x03\x2e\x4e\xfc\x71\x3d\x84\xec\xfa\x5c\xf2\xa9\x6e\x38\xa3\x8d\x69\x8f\x2a\xd0\xa2\x5f\x49\x8a\x5c\x35\x55\xd0\x78\x31\x48\x68\xb4\x12\x61\x17\xc1\x67\x1f\xd7\x93\x39\x22\x12\x9f\xcc\x6f\x8b\x61\xec\x1f\x83\x71\xcc\xba\x88\xe5\x0f\x99\x27\x69\xa4\x68\x04\x26\xa4\x9f\x84\x61\xda\x0b\xce\x2a\xd9\x10\xa4\x1b\x21\xf5\xde\x91\x5c\x35\xc2\x3a\xa0\x7b\xff\x90\xac\x13\x0d\x28\x6e\x16\xb2\xd3\x5f\x41\x5e\x85\x8d\x66\xfd\x77\x04\x79\x85\x4e\x85\x08\xfd\x7e\x1d\x77\xfd\x54\x37\x92\x26\xcb\x79\xb2\x3d\x9c\x49\xe5\xfe\xff\x1e\xa5\xca\xe2\x38\x9c\xe9\xd9\x93\xcc\x42\x0b\xd3\x41\xb9\xe7\xf5\x52\xac\xa5\xd5\x0d\xe8\x47\x3d\x8d\xdf\xee\xb1\x41\x0e\xb6\xb0\x2d\x03\xb6\xc3\x49\x54\xe8\x38\x03\xe7\xd0\x3d\xed\xd3\x00\xbc\x54\x0a\x88\xd2\xc2\x1e\xb5\xc3\x0a\x9f\xea\xf7\x4e\x92\xe8\x28\x7c\x87\x86\xf7\xbf\x75\x78\x06\x70\xd3\x5a\xfb\xf1\xf5\xd5\xd5\x00\xe8\x63\x74\x73\xd5\xd8\x9a\xaf\xf3\x7f\x7a\xf3\x4c\x42\x97\x31\xff\x2c\x68\x52\x9d\x20\x77\x0e\x91\x2f\xf2\xfd\x3c\x2e\x91\x44\xa7\xa8\x14\xd7\x27\xfc\x1b\xe1\xc8\x08\x78\x1e\x15\x2c\xab\x8e\xfa\x64\xbf\xf0\x71\x38\xa2\x71\xba\x1b\x32\xf7\xc7\x35\x1c\x99\x9f\x0f\xd8\x78\x39\x26\x95\xff\x95\xfd\x05\x77\x76\xf6\x5f\x00\x00\x00\xff\xff\xab\xfa\x84\xf6\xdc\x0a\x00\x00")

func migrationsSqlTests7_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests7_testSql,
		"migrations/sql/tests/7_test.sql",
	)
}

func migrationsSqlTests7_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests7_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/7_test.sql", size: 2780, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests8_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x51\x6f\x1b\x37\x0c\x7e\xae\x7f\x85\xe0\x97\x4b\x30\xb9\x4e\x3c\xb4\x08\xb2\xa7\x01\xeb\x43\x81\x21\x05\xd6\x76\x7b\x18\x06\x41\x27\xf1\xce\xaa\xcf\xe2\x4d\xd4\xcd\xf1\xe2\xfc\xf7\x41\xd2\x9d\x4f\x76\x6e\x69\xfa\xb4\xbd\x18\x22\x29\x52\xe4\xc7\x8f\x3c\x2f\x16\xec\xbb\xad\xa9\x9d\xf4\xc0\x3e\xb7\xb3\xf7\x77\x1f\xdf\xfd\xf2\x89\xbd\xbf\xfb\xf4\x81\xad\xf7\xda\x49\xa1\x1a\x03\xd6\xb3\x0b\xa3\x39\x93\x4d\x83\x3b\xd0\x42\xa1\x23\x81\xce\xd4\xc6\x12\x67\xe9\x86\xb0\x72\x0b\x47\x81\x40\x39\xf0\x9c\x39\xd0\xc6\x81\xf2\xa2\x73\x86\x38\xab\x9d\xb4\x5e\xf8\x7d\x0b\x14\x6c\xd4\xa2\x25\x18\x64\x52\xd8\x02\x67\xb8\xb3\xe0\x38\x6b\xb1\x31\x6a\x1f\xfc\x38\xf3\x48\xe9\xd0\x47\x8f\xe7\x06\x6b\xec\xb5\x68\xbd\x54\x9e\xce\x5e\x17\x70\xdf\x1a\x07\x24\xa4\xe7\x8c\x40\x79\x74\xc2\x68\xb0\xde\x54\x06\x5c\x72\xfd\xb2\xdb\x50\xfa\x1d\x5e\xda\x80\x15\x60\x75\x8b\xc6\x7a\x21\x3b\xbf\x16\x5b\xf0\x6b\xd4\x21\xdf\x3f\x3b\xa0\xa1\x94\x41\xc2\xf2\x4b\xa8\x8f\x4c\x6d\x8d\xad\x85\x6c\x6a\xce\x3a\x02\x67\x6c\x85\x51\x0b\x5a\x1c\x2b\x8d\x56\xea\x92\x4b\x28\x9b\x33\xd9\x69\x03\x56\x01\x67\x95\x43\xeb\xd5\x5a\x5a\x0b\x8d\x08\xd5\x75\x7d\xa5\x53\x06\x02\x22\x83\x56\x84\x34\x8c\x03\x1d\x00\x23\x3f\x58\xcf\x60\x2f\xa5\xda\x4c\x05\x9e\xd0\x3f\x8d\xbb\x05\x2f\xb5\xf4\xf2\x72\xf6\xeb\x8f\x3f\x7f\x7e\xf7\x71\xc6\xd8\x45\x71\xb3\x48\x50\x17\x9c\x15\x6b\xef\xdb\xdb\xe5\xb2\x41\x25\x9b\x35\x92\x3f\xf4\x8a\x1a\xb1\x6e\x20\xdc\x20\xdc\x42\xe6\x20\x4b\xa5\xa1\x7a\x99\x6b\xe8\x00\x3a\xf3\x37\x08\x85\x1a\x0e\x66\xdb\x36\x46\x99\x18\x26\xf6\xea\x60\xb4\x88\x87\xa0\xa9\x10\x0f\xa5\x74\xd1\x0f\x2c\x48\xca\xde\x48\x7c\xca\x14\x1e\x73\xf3\x44\x39\x35\x8e\x81\x0e\x15\x06\xe9\x6a\xb4\x27\x42\x85\x1b\x0f\xf3\x0d\xec\x69\x7e\xcb\x7e\xff\xe3\x31\x0b\x10\x48\x15\x44\x8b\x16\x32\x75\xe7\xcc\xf5\x61\x3c\xaf\x82\xc9\xd1\xea\xcd\xdb\x74\x78\xb3\x8a\x87\xb6\x2b\x1b\xa3\x06\x37\xba\x5d\x2e\x77\xbb\xdd\x6b\x74\xfb\xd7\xb4\x5e\xca\xd6\x64\x01\x2b\xb5\x48\xbd\x5b\x16\x9c\x79\xd7\xc1\x68\x8a\x34\xb8\x5e\x1e\x72\x71\xb5\xcc\x7c\xcb\x09\xdf\x87\x79\x85\x38\xbf\x9d\x97\xd2\xcd\x1f\x8b\xcb\x1f\x66\xf9\x52\x98\xbd\x4a\x5b\x01\x43\x5f\x56\x71\x3e\xc2\x40\x29\xe9\x03\x69\x7a\xf2\xf4\xcb\x62\xb4\x81\x4e\x33\x98\x88\x7f\x24\xd2\xab\xc0\xa3\x06\x6b\x63\x17\xbd\xe7\xc2\xe8\x82\xb3\xbb\x0f\xbf\x5d\x5c\x72\x56\xdc\x2c\xa8\x2b\xbf\x2d\x83\x7e\x2a\xd9\x85\x5a\xcb\xa6\x01\x5b\x03\x67\x7f\x81\x8b\x13\x7f\x5c\x0f\x21\xbb\x3e\x97\x7c\xaa\x1b\xce\x68\x63\xda\xa3\x0a\xb4\xe8\x57\x92\x22\x57\x4d\x15\x34\x5e\x0c\x12\x1a\xad\x44\xd8\x45\x70\xef\xe3\x7a\x32\x47\x44\xe2\x93\xf9\x6d\x31\x8c\xfd\x29\x18\xc7\xac\x8b\x58\xfe\x90\x79\x92\x46\x8a\x46\x60\x42\xfa\x49\x18\xa6\xbd\xe0\xac\x92\x0d\x41\xba\x11\x52\xef\x1d\xc9\x55\x23\xac\x03\xba\x0f\x8f\xc9\x3a\xd1\x80\xe2\x66\x21\x3b\xfd\x15\xe4\x55\xd8\x68\xd6\xff\x8f\x20\xaf\xd0\xa9\x10\xa1\xdf\xaf\xe3\xae\x9f\xea\x46\xd2\x64\x39\x4f\xb6\x87\x33\xa9\x5c\xfa\xc2\xc0\xbd\xff\xef\x9b\x95\x4a\x8c\x73\xf1\x4c\xf3\xce\x32\x0b\xbd\x4c\x07\xd5\x2f\xac\x97\x4f\xf8\x59\x97\xc5\x5a\x5a\xdd\x80\x3e\xe9\x76\xfc\xaa\x8f\xad\x73\xb0\x85\x6d\x19\x50\x1f\x4e\xa2\x42\xc7\x19\x38\x87\xee\xbc\x83\x43\x4b\xa4\x52\x40\x94\x56\xf9\xa8\x1d\x96\xfb\x14\x13\x76\x92\x44\x47\xe1\x0b\x35\xbc\xff\xd2\xb1\x1a\xd0\x4e\x0b\xef\xfb\xb7\x57\x57\x03\xc2\xa7\x70\xe7\xaa\xb1\x57\x5f\x9f\x8c\xe9\x9d\x34\x09\x5d\x36\x13\xcf\x82\x16\x59\x78\x8a\xdc\x73\x88\x3c\x33\x09\x2f\xa1\x72\xa2\xd7\x53\x78\x8a\xeb\x27\xcc\x1c\x71\x39\xa5\xe6\xb7\x70\x0c\xcb\xaa\xa3\xbe\x8c\x7f\xf9\xa0\x1c\x71\x7a\xba\x4f\x32\xf7\xd3\xa2\x8e\x43\x92\xcf\xe2\x78\x39\x26\x95\xff\xfd\xfd\x09\x77\x76\xf6\x4f\x00\x00\x00\xff\xff\x00\xfd\x04\xcb\x10\x0b\x00\x00")

func migrationsSqlTests8_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests8_testSql,
		"migrations/sql/tests/8_test.sql",
	)
}

func migrationsSqlTests8_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests8_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/8_test.sql", size: 2832, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests9_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x5f\x6f\x1b\x37\x0c\x7f\xae\x3f\x85\xe0\x97\x4b\x31\xb9\x4e\x32\xb4\x40\xb2\xa7\x01\xeb\x43\x81\x21\x05\xd6\x76\x7b\x18\x06\x41\x27\xf1\xce\x6a\xce\xe2\x4d\xd4\xcd\xf1\xe2\x7c\xf7\x41\xd2\xfd\xb5\x6f\x4e\xfa\xb4\xbd\x24\x14\x29\xf2\xc8\x1f\xc9\xdf\x9d\x57\x2b\xf6\xdd\xd6\x94\x4e\x7a\x60\x5f\xea\xc5\x87\xbb\x4f\xef\x7f\xf9\xcc\x3e\xdc\x7d\xfe\xc8\x36\x7b\xed\xa4\x50\x95\x01\xeb\xd9\x85\xd1\x9c\xc9\xaa\xc2\x1d\x68\xa1\xd0\x91\x40\x67\x4a\x63\x89\xb3\x74\x43\x58\xb9\x85\xfe\x40\xa0\x1c\x78\xce\x1c\x68\xe3\x40\x79\xd1\x38\x43\x9c\x95\x4e\x5a\x2f\xfc\xbe\x06\x0a\x36\xaa\xd1\x12\x74\x67\x52\x58\x03\x67\xb8\xb3\xe0\x38\xab\xb1\x32\x6a\x1f\xfc\x38\xf3\x48\x49\x68\xa3\x47\xb9\xc2\x12\x5b\x2d\x5a\x2f\x95\xa7\xa3\xa7\x0b\x78\xa8\x8d\x03\x12\xd2\x73\x46\xa0\x3c\x3a\x61\x34\x58\x6f\x0a\x03\x2e\xb9\x7e\xdd\xdd\x53\xfa\xdb\x3d\xe9\x1e\xac\x00\xab\x6b\x34\xd6\x0b\xd9\xf8\x8d\xd8\x82\xdf\xa0\x0e\xf9\xfe\xd9\x00\x75\xa5\x74\x27\xcc\xbf\x86\xfa\xc8\x94\xd6\xd8\x52\xc8\xaa\xe4\xac\x21\x70\xc6\x16\x18\xb5\xa0\x45\x5f\x69\xb4\x52\x93\x5c\x42\xd9\x9c\xc9\x46\x1b\xb0\x0a\x38\x2b\x1c\x5a\xaf\x36\xd2\x5a\xa8\x44\xa8\xae\x69\x2b\x9d\x33\x10\x10\x19\xb4\x22\xa4\x61\x1c\xe8\x00\x18\xf9\xce\x7a\x04\x7b\x2e\xd5\xfd\x5c\xe0\x19\xfd\x69\xdc\x2d\x78\xa9\xa5\x97\xaf\x17\xbf\xfe\xf8\xf3\x97\xf7\x9f\x16\x8c\x5d\x64\x37\xab\x04\x75\xc6\x59\xb6\xf1\xbe\xbe\x5d\xaf\x2b\x54\xb2\xda\x20\xf9\x43\xab\x28\x11\xcb\x0a\xc2\x0d\xc2\x2d\x8c\x1c\x64\xae\x34\x14\x2f\x73\x0d\x1d\x40\x67\xfe\x06\xa1\x50\xc3\xc1\x6c\xeb\xca\x28\x13\xc3\xc4\x5e\x1d\x8c\x16\x51\x08\x9a\x02\xf1\x90\x4b\x17\xfd\xc0\x82\xa4\xd1\x33\xd2\x3c\x8d\x14\x1e\xc7\xe6\x99\x72\x4a\x1c\x02\x1d\x0a\x0c\xa7\xcb\xc1\x9e\x06\x2a\xdc\x78\x5c\xde\xc3\x9e\x96\xb7\xec\xf7\x3f\x9e\x46\x01\xc2\x50\x85\xa3\x45\x0b\x23\x75\xe3\xcc\xd5\x61\x90\xaf\x83\xc9\xd1\xf5\xdb\x77\x49\x78\x7b\x1d\x85\xba\xc9\x2b\xa3\x3a\x37\xba\x5d\xaf\x77\xbb\xdd\x1b\x74\xfb\x37\xb4\x59\xcb\xda\x8c\x02\x16\x6a\x95\x7a\xb7\xce\x38\xf3\xae\x81\xc1\x14\xc7\xe0\x6a\x7d\x18\x1f\xaf\xd7\x23\xdf\x7c\xc6\xf7\x71\x59\x20\x2e\x6f\x97\xb9\x74\xcb\xa7\xec\xf5\x0f\x8b\x31\x29\x2c\x5e\x25\x56\xc0\xd0\x97\xeb\xb8\x1f\x61\xa1\x94\xf4\x61\x68\xda\xe1\x69\xc9\x62\xb0\x81\x4e\x3b\x98\x06\xbf\x1f\xa4\x57\x61\x8e\x2a\x2c\x8d\x5d\xb5\x9e\x2b\xa3\x33\xce\xee\x3e\xfe\x76\xf1\x9a\xb3\xec\x66\x45\x4d\xfe\x6d\x19\xb4\x5b\xc9\x2e\xd4\x46\x56\x15\xd8\x12\x38\xfb\x0b\x5c\xdc\xf8\x9e\x1e\x42\x76\x6d\x2e\xe3\xad\xae\x38\xa3\x7b\x53\xf7\x2a\xd0\xa2\xa5\x24\x45\xae\x98\x2b\x68\xb8\x18\x4e\x68\xb4\x12\x81\x8b\xe0\xc1\x47\x7a\x32\x3d\x22\xf1\x91\xe3\xdb\xa2\x5b\xfb\x29\x18\x7d\xd6\x59\x2c\xbf\xcb\x3c\x9d\x86\x11\x8d\xc0\x84\xf4\xd3\xa1\xdb\xf6\x8c\xb3\x42\x56\x04\xe9\x46\x48\xbd\x75\x24\x57\x0c\xb0\x76\xe8\x3e\x3e\x25\xeb\x4c\x03\xb2\x9b\x95\x6c\xf4\x33\xc8\xab\xc0\x68\xd6\xff\x8f\x20\x2f\xd0\xa9\x10\xa1\xe5\xd7\x81\xeb\xe7\xba\x91\x34\xa3\x9c\x67\xdb\xc3\x99\x54\x2e\xbd\x61\xe0\xc1\xff\xf7\xcd\x4a\x25\xc6\xbd\x38\xd3\xbc\xa3\xcc\x42\x2f\x93\xa0\x5a\xc2\x7a\xf9\x86\x1f\x75\x59\x6c\xa4\xd5\x15\xe8\x49\xb7\xe3\x5b\x7d\x68\x9d\x83\x2d\x6c\xf3\x80\x7a\x27\x89\x02\x1d\x67\xe0\x1c\xba\xe3\x0e\x76\x2d\x91\x4a\x01\x51\xa2\xf2\x41\xdb\x91\xfb\xdc\x24\xec\x24\x89\x86\xc2\x1b\xaa\x7b\xfe\x4b\xd7\xaa\x43\x3b\x11\xde\xf7\xef\x2e\x2f\x3b\x84\xa7\x70\x8f\x55\x43\xaf\x9e\xdf\x8c\x79\x4e\x9a\x85\x6e\xb4\x13\x67\x41\x8b\x53\x38\x45\xee\x1c\x22\x67\x36\xe1\x25\xa3\x9c\xc6\xeb\x14\x9e\xec\xea\x64\x32\x07\x5c\xa6\xa3\xf9\x2d\x33\x86\x79\xd1\x50\x5b\xc6\xbf\xbc\x50\x7a\x9c\x4e\xf9\x64\xe4\x3e\x2d\xaa\x5f\x92\xf1\x2e\x0e\x97\x9f\x49\xaa\xff\x92\x3a\xc7\x6e\x7d\x5a\x14\x12\x1a\xe5\x36\xa1\xb8\xb8\xf2\x49\x1c\x5a\x14\x06\xbe\xf6\x10\xef\x86\x18\x51\xaa\x85\xb1\xc6\x9b\xd3\x5a\xce\x72\xcd\x84\x5f\x4e\xb8\x60\xf2\x61\x43\xf1\x33\x20\xe6\xb6\x6a\x5c\xb5\x9e\xea\x13\x33\x05\xc3\xc0\x4e\x33\xff\x02\x70\xe3\xdf\x0d\x3f\xe1\xce\x2e\xfe\x09\x00\x00\xff\xff\x2a\x65\xfd\x7b\x49\x0c\x00\x00")

func migrationsSqlTests9_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests9_testSql,
		"migrations/sql/tests/9_test.sql",
	)
}

func migrationsSqlTests9_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests9_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/9_test.sql", size: 3145, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/cockroach/12.sql":  migrationsSqlCockroach12Sql,
	"migrations/sql/cockroach/13.sql":  migrationsSqlCockroach13Sql,
	"migrations/sql/mysql/.gitkeep":    migrationsSqlMysqlGitkeep,
	"migrations/sql/mysql/10.sql":      migrationsSqlMysql10Sql,
	"migrations/sql/mysql/12.sql":      migrationsSqlMysql12Sql,
	"migrations/sql/mysql/13.sql":      migrationsSqlMysql13Sql,
	"migrations/sql/mysql/4.sql":       migrationsSqlMysql4Sql,
	"migrations/sql/mysql/5.sql":       migrationsSqlMysql5Sql,
	"migrations/sql/mysql/6.sql":       migrationsSqlMysql6Sql,
	"migrations/sql/mysql/7.sql":       migrationsSqlMysql7Sql,
	"migrations/sql/mysql/8.sql":       migrationsSqlMysql8Sql,
	"migrations/sql/postgres/.gitkeep": migrationsSqlPostgresGitkeep,
	"migrations/sql/postgres/10.sql":   migrationsSqlPostgres10Sql,
	"migrations/sql/postgres/12.sql":   migrationsSqlPostgres12Sql,
	"migrations/sql/postgres/13.sql":   migrationsSqlPostgres13Sql,
	"migrations/sql/postgres/4.sql":    migrationsSqlPostgres4Sql,
	"migrations/sql/postgres/5.sql":    migrationsSqlPostgres5Sql,
	"migrations/sql/postgres/6.sql":    migrationsSqlPostgres6Sql,
	"migrations/sql/postgres/7.sql":    migrationsSqlPostgres7Sql,
	"migrations/sql/postgres/8.sql":    migrationsSqlPostgres8Sql,
	"migrations/sql/shared/.gitkeep":   migrationsSqlSharedGitkeep,
	"migrations/sql/shared/1.sql":      migrationsSqlShared1Sql,
	"migrations/sql/shared/11.sql":     migrationsSqlShared11Sql,
	"migrations/sql/shared/2.sql":      migrationsSqlShared2Sql,
	"migrations/sql/shared/3.sql":      migrationsSqlShared3Sql,
	"migrations/sql/shared/9.sql":      migrationsSqlShared9Sql,
	"migrations/sql/tests/.gitkeep":    migrationsSqlTestsGitkeep,
	"migrations/sql/tests/10_test.sql": migrationsSqlTests10_testSql,
	"migrations/sql/tests/11_test.sql": migrationsSqlTests11_testSql,
	"migrations/sql/tests/12_test.sql": migrationsSqlTests12_testSql,
	"migrations/sql/tests/13_test.sql": migrationsSqlTests13_testSql,
	"migrations/sql/tests/1_test.sql":  migrationsSqlTests1_testSql,
	"migrations/sql/tests/2_test.sql":  migrationsSqlTests2_testSql,
	"migrations/sql/tests/3_test.sql":  migrationsSqlTests3_testSql,
	"migrations/sql/tests/4_test.sql":  migrationsSqlTests4_testSql,
	"migrations/sql/tests/5_test.sql":  migrationsSqlTests5_testSql,
	"migrations/sql/tests/6_test.sql":  migrationsSqlTests6_testSql,
	"migrations/sql/tests/7_test.sql":  migrationsSqlTests7_testSql,
	"migrations/sql/tests/8_test.sql":  migrationsSqlTests8_testSql,
	"migrations/sql/tests/9_test.sql":  migrationsSqlTests9_testSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"sql": &bintree{nil, map[string]*bintree{
			"cockroach": &bintree{nil, map[string]*bintree{
				"12.sql": &bintree{migrationsSqlCockroach12Sql, map[string]*bintree{}},
				"13.sql": &bintree{migrationsSqlCockroach13Sql, map[string]*bintree{}},
			}},
			"mysql": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlMysqlGitkeep, map[string]*bintree{}},
				"10.sql":   &bintree{migrationsSqlMysql10Sql, map[string]*bintree{}},
				"12.sql":   &bintree{migrationsSqlMysql12Sql, map[string]*bintree{}},
				"13.sql":   &bintree{migrationsSqlMysql13Sql, map[string]*bintree{}},
				"4.sql":    &bintree{migrationsSqlMysql4Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlMysql5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlMysql6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlMysql7Sql, map[string]*bintree{}},
				"8.sql":    &bintree{migrationsSqlMysql8Sql, map[string]*bintree{}},
			}},
			"postgres": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlPostgresGitkeep, map[string]*bintree{}},
				"10.sql":   &bintree{migrationsSqlPostgres10Sql, map[string]*bintree{}},
				"12.sql":   &bintree{migrationsSqlPostgres12Sql, map[string]*bintree{}},
				"13.sql":   &bintree{migrationsSqlPostgres13Sql, map[string]*bintree{}},
				"4.sql":    &bintree{migrationsSqlPostgres4Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlPostgres5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlPostgres6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlPostgres7Sql, map[string]*bintree{}},
				"8.sql":    &bintree{migrationsSqlPostgres8Sql, map[string]*bintree{}},
			}},
			"shared": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlSharedGitkeep, map[string]*bintree{}},
				"1.sql":    &bintree{migrationsSqlShared1Sql, map[string]*bintree{}},
				"11.sql":   &bintree{migrationsSqlShared11Sql, map[string]*bintree{}},
				"2.sql":    &bintree{migrationsSqlShared2Sql, map[string]*bintree{}},
				"3.sql":    &bintree{migrationsSqlShared3Sql, map[string]*bintree{}},
				"9.sql":    &bintree{migrationsSqlShared9Sql, map[string]*bintree{}},
			}},
			"tests": &bintree{nil, map[string]*bintree{
				".gitkeep":    &bintree{migrationsSqlTestsGitkeep, map[string]*bintree{}},
				"10_test.sql": &bintree{migrationsSqlTests10_testSql, map[string]*bintree{}},
				"11_test.sql": &bintree{migrationsSqlTests11_testSql, map[string]*bintree{}},
				"12_test.sql": &bintree{migrationsSqlTests12_testSql, map[string]*bintree{}},
				"13_test.sql": &bintree{migrationsSqlTests13_testSql, map[string]*bintree{}},
				"1_test.sql":  &bintree{migrationsSqlTests1_testSql, map[string]*bintree{}},
				"2_test.sql":  &bintree{migrationsSqlTests2_testSql, map[string]*bintree{}},
				"3_test.sql":  &bintree{migrationsSqlTests3_testSql, map[string]*bintree{}},
				"4_test.sql":  &bintree{migrationsSqlTests4_testSql, map[string]*bintree{}},
				"5_test.sql":  &bintree{migrationsSqlTests5_testSql, map[string]*bintree{}},
				"6_test.sql":  &bintree{migrationsSqlTests6_testSql, map[string]*bintree{}},
				"7_test.sql":  &bintree{migrationsSqlTests7_testSql, map[string]*bintree{}},
				"8_test.sql":  &bintree{migrationsSqlTests8_testSql, map[string]*bintree{}},
				"9_test.sql":  &bintree{migrationsSqlTests9_testSql, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
