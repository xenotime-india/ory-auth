// Code generated for package oauth2 by go-bindata DO NOT EDIT. (@generated)
// sources:
// migrations/sql/cockroach/9.sql
// migrations/sql/mysql/.gitkeep
// migrations/sql/mysql/10.sql
// migrations/sql/mysql/5.sql
// migrations/sql/mysql/6.sql
// migrations/sql/mysql/7.sql
// migrations/sql/mysql/9.sql
// migrations/sql/postgres/.gitkeep
// migrations/sql/postgres/10.sql
// migrations/sql/postgres/5.sql
// migrations/sql/postgres/6.sql
// migrations/sql/postgres/7.sql
// migrations/sql/postgres/9.sql
// migrations/sql/shared/1.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/shared/4.sql
// migrations/sql/shared/8.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/10_test.sql
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
// migrations/sql/tests/8_test.sql
// migrations/sql/tests/9_test.sql
package oauth2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrationsSqlCockroach9Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x41\x6f\xda\x30\x14\xc7\xcf\xf8\x53\xbc\x5b\x41\xa3\xd2\x54\xad\x27\x4e\x19\x79\x4c\xd1\xb2\xd0\x05\x47\x6a\x4f\x91\xeb\x3c\x48\x56\x48\x58\x6c\xda\xed\xdb\x4f\xa6\x04\x82\x42\x28\x9b\x80\xa1\x2d\x57\xbf\x7f\xe2\x9f\xed\xdf\x33\x11\xd7\xd7\xf0\x6e\x96\x4c\x72\xa1\x09\x82\x39\xeb\xfb\x68\x71\x04\x6e\x7d\x74\x11\x9c\x01\x78\x43\x0e\x78\xef\x8c\xf8\x08\xe2\x9f\x51\x2e\xc2\x4c\x2c\x74\x7c\x13\x0a\x29\x49\x29\x68\xb3\x96\x4a\x26\xa9\xd0\x8b\x9c\xe0\x59\xe4\x32\x16\x79\xfb\xe6\xf6\xb6\xb3\x7c\xd0\x0b\x5c\x17\xee\x7c\xe7\x8b\xe5\x3f\xc0\x67\x7c\xe8\xb2\x56\x4e\xdf\x17\xa4\x74\x98\x44\xeb\xf8\x87\xf7\x9b\xf4\x26\x41\x51\x28\x34\xe8\x64\x46\x4a\x8b\xd9\x7c\xf3\x3e\x1b\x07\x56\xe0\x72\x48\xb3\x97\x76\xa7\xcb\x5a\x72\x9a\x50\xba\xf5\xc2\xad\xf9\xbb\xac\xa5\x64\x36\x27\xd0\xf4\x43\x97\x47\x27\xb9\x48\xcd\x2c\xbb\xab\xe3\x2c\x9f\x85\x91\xd0\xa2\x52\x51\xa4\x54\x92\xa5\x35\xc5\xc5\xe3\x37\x92\xba\x66\x2b\x0a\xf4\xab\xab\x2e\x6b\x09\xa9\x93\x67\x82\xc7\x2c\x9b\x56\x13\xdc\x0f\x70\x7b\x2f\x16\x51\x42\xa9\x2c\x40\x2b\x6f\x2b\x56\xf3\x56\x4e\xc6\x62\x3a\xa5\x74\x42\x95\x13\x78\x5d\x40\xe0\x39\x5f\x03\x84\xf6\xe6\x9c\xcc\x1e\x3b\x9e\x8d\xf7\xeb\xc1\xe5\xd1\x94\x86\xd7\x27\x50\x1e\x2b\xcd\xd3\x61\x9d\xde\xc1\x62\xe5\x34\xce\x49\xc5\x8d\x59\xff\x95\x59\x47\x55\x48\x66\x11\x35\xfe\xfc\x6b\xfe\x9c\xc2\x94\x2c\x89\x64\x63\x4a\x63\xca\xdb\xa6\xcc\x9f\x64\x73\xa7\xfc\x96\x29\x7f\xae\x07\xc7\xfb\x5d\xb2\x55\xf4\xa8\xc9\x1d\x53\x0f\x66\xb9\x1c\xfd\x95\x1e\xbb\x3e\x80\x2d\xdb\x86\xfe\xd0\x1b\x71\xdf\x72\x3c\xbe\x2b\x12\xae\x27\x0a\xc7\x4f\x30\x18\xfa\xe8\x7c\xf2\x8c\x1f\x65\x04\xf0\x71\x80\x3e\x7a\x7d\x2c\xbc\x7b\xad\xb5\x4d\x6d\xe8\x81\x8d\x2e\x72\x84\xbe\x35\xea\x5b\x36\xf6\xea\xb1\x8a\xcf\xa7\x7d\x5c\xab\xcc\x79\xc1\x96\x3f\xca\xfb\xa8\x4c\xe0\xbc\x48\xcb\xdb\x7f\x1f\x92\x09\x9c\x17\x69\x79\xcd\xec\x43\x32\x81\x93\x20\x1d\xc5\xf4\x52\xfb\x54\xd1\xca\xbd\x55\xa5\x5b\x5b\x90\x2a\xb3\x82\xe2\xe6\x8c\x45\x1a\x4d\x29\xda\x3c\x7d\xc2\x76\xb8\x38\xfa\x03\x7b\xe6\xe2\xb8\x0f\x6c\xac\x8b\xe3\x3e\xb0\xfb\xfe\x16\x37\x2b\xff\x57\x63\x67\x2f\x29\xb3\xfd\xe1\x5d\x7d\xcb\xf6\x6a\xeb\x2b\xe5\xeb\x03\x46\xac\xfa\xaa\x39\xbe\xfa\xaa\xd9\xa4\x1e\xfb\x15\x00\x00\xff\xff\x15\x33\x61\x06\x58\x12\x00\x00")

func migrationsSqlCockroach9SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlCockroach9Sql,
		"migrations/sql/cockroach/9.sql",
	)
}

func migrationsSqlCockroach9Sql() (*asset, error) {
	bytes, err := migrationsSqlCockroach9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/cockroach/9.sql", size: 4696, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysqlGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlMysqlGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysqlGitkeep,
		"migrations/sql/mysql/.gitkeep",
	)
}

func migrationsSqlMysqlGitkeep() (*asset, error) {
	bytes, err := migrationsSqlMysqlGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql10Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\x51\x6b\xb3\x30\x14\x86\xef\xfd\x15\xe7\xf2\x2b\x1f\xbd\xd9\xad\x57\x99\x39\x1d\x65\x45\x47\xea\x60\xbb\x0a\x21\x49\xab\xb4\xd3\x4e\x2d\xdb\xfe\xfd\x30\xac\xac\x9d\xe9\x51\x19\x0c\xef\x8f\x2f\x4f\x9e\x93\xbc\xce\xe7\xf0\xff\x25\xdf\x56\xaa\xb1\xf0\x78\x08\x22\x81\x2c\x45\x58\xc6\x1c\x9f\x20\xfb\x30\x95\x92\xa5\x3a\x36\xd9\x8d\x54\x5a\xdb\xba\x96\x3a\x53\xfb\xbd\x2d\xb6\x56\xe6\x46\xe6\xe6\x1d\x92\xd8\x37\x07\xff\xce\x07\x67\x21\x11\x5c\xd9\x4d\x65\xeb\xac\x3f\xf9\x6b\x70\x44\xb4\x2e\x8d\xed\xcf\x6d\xa7\x46\x84\x96\xb9\xd1\xfd\xa1\xed\xd4\x88\xd0\xc3\x4e\x0f\x20\x6d\xa7\x3a\xa1\xc1\xf9\x0a\x79\xf9\x56\x04\x6c\x95\xa2\x80\x94\xdd\xae\xd0\xbb\x1b\x2e\x92\x07\x58\x24\x02\x97\x77\x31\xdc\xe3\x73\xff\xa2\x37\xbb\x30\x70\x5f\xfd\xfa\x62\x84\xbd\x74\x8c\x73\x88\x92\x78\x9d\x0a\xb6\x8c\xd3\x21\x6c\x17\x67\xb9\xd4\x03\x02\x17\x28\x30\x8e\x70\xfd\x73\xe9\x45\x6d\x8b\x46\x56\xf6\xf5\x68\xeb\x46\x66\xaa\x30\x7b\x6b\xbe\xbf\x9e\xb5\x07\xe0\xb8\xc2\x14\x21\x62\xeb\x88\x71\x0c\x83\xeb\xf0\xa7\xcb\x49\xbb\xf5\xde\x75\x4a\xee\xd8\xc7\x41\xe8\x3d\x11\x52\x7e\xaf\xf0\x4d\x41\xb0\x7b\xa5\xb4\xdd\xee\x73\xa7\xd4\x0e\x2f\x07\x42\xaa\xa3\xa2\x8c\xfa\x98\xa6\xa0\xd3\xf5\x13\xad\xb3\x5b\x74\x94\xce\xe1\xb5\x48\xe8\x74\x54\x94\x4e\x1f\xd3\x14\x74\xba\x66\xa6\x75\x76\x2b\x9e\xd2\x39\xfc\x87\x40\xe8\x74\x54\x94\x4e\x1f\xd3\xdf\xe9\xfc\x0c\x00\x00\xff\xff\x55\x0a\xf5\xdf\x7c\x08\x00\x00")

func migrationsSqlMysql10SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql10Sql,
		"migrations/sql/mysql/10.sql",
	)
}

func migrationsSqlMysql10Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/10.sql", size: 2172, mode: os.FileMode(420), modTime: time.Unix(1575534526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\x08\xf5\xf3\x0c\x0c\x75\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x89\xcf\x4c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4a\x41\x03\xa1\x4c\xd3\x9a\xb0\xd9\x45\xa9\x69\x45\xa9\xc5\x19\x84\x0c\x87\x2a\x43\x33\x9d\x0b\xd9\x27\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x94\x7a\xc1\x1a\xa7\x29\xa4\x39\xd6\x9a\x0b\x10\x00\x00\xff\xff\x5b\x41\x11\xcf\x69\x01\x00\x00")

func migrationsSqlMysql5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql5Sql,
		"migrations/sql/mysql/5.sql",
	)
}

func migrationsSqlMysql5Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/5.sql", size: 361, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x49\x4d\x89\x4f\x2c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4e\x41\x03\x59\xa1\xa6\x35\x17\x17\xb2\x45\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x94\x5b\x64\xcd\x05\x08\x00\x00\xff\xff\xf1\x5f\x27\x42\xc2\x00\x00\x00")

func migrationsSqlMysql6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql6Sql,
		"migrations/sql/mysql/6.sql",
	)
}

func migrationsSqlMysql6Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/6.sql", size: 194, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x95\x4d\x6a\xc3\x30\x10\x85\xf7\x39\x85\x76\x59\x94\x6c\xba\x0d\x5d\xb8\x95\x0b\x05\x27\x0e\xa9\x0c\xed\xca\x08\x69\x1a\x9b\x52\x3b\x95\x6d\x4a\x6f\x1f\x18\xb0\x10\xfe\xc1\x99\xf1\x01\x9e\xde\xa7\x6f\x64\xcf\x6e\x27\x1e\x7e\xca\x8b\xd3\x2d\x88\xec\xba\x89\x12\x15\x9f\x85\x8a\x9e\x93\x58\x14\xff\xd6\xe9\xbc\xd6\x5d\x5b\x3c\xe6\xda\x18\x68\x1a\x11\x49\x29\x1c\xfc\x76\xd0\xb4\x60\x73\xdd\xd9\x12\x2a\x03\x42\xc5\x1f\x4a\x1c\xb3\x24\xd9\x6f\xb2\x93\x8c\xd4\x74\xf8\x3d\x56\x13\xe1\xa7\xed\x76\xbf\xd8\x7b\x48\xe5\xdb\xeb\xe7\x7c\x75\xda\xd7\xdf\x73\x81\x8b\xd3\x15\x13\x7f\x18\xa5\xc0\xcf\xd4\x7a\xf4\xf9\x73\x1c\x7c\x39\x68\x0a\xa6\xfd\x3e\xcd\xd1\xdf\x67\xd7\xfb\x0f\xef\x40\x1d\x40\x78\x03\xda\x04\x06\xfc\xfc\x11\x98\xda\x02\xd3\x3f\x46\x39\xf2\x31\xb8\xde\xbc\x47\xa7\x6a\xf7\xe0\x34\xe7\x21\x36\x5f\x78\x5d\x5a\xc3\x14\x8e\x51\x8e\x70\x0c\xae\x17\xee\xd1\xa9\xc2\x3d\x38\x4d\x78\x88\xcd\x17\x7e\xfd\x36\xdc\x17\x8e\x51\x8e\x70\x0c\xae\x17\xee\xd1\xa9\xc2\x3d\x38\x4d\x78\x88\xbd\x28\x3c\xdc\xb0\xb2\xfe\xab\x16\xd7\x85\x3c\xa7\x27\xf1\x92\x26\xd9\xe1\x38\x21\x65\x79\xdd\x84\xf9\x21\xdd\x3d\x5b\x86\xdd\x3f\x75\x00\x05\x00\x7f\x1c\xec\xf6\x51\x9a\x52\x8d\x9f\x10\xbb\x7a\x94\xa6\x54\xe3\x63\x62\x57\x8f\xd2\xe3\xea\x5b\x00\x00\x00\xff\xff\xd3\x68\x22\x03\xe3\x09\x00\x00")

func migrationsSqlMysql7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql7Sql,
		"migrations/sql/mysql/7.sql",
	)
}

func migrationsSqlMysql7Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/7.sql", size: 2531, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql9Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xd1\x72\xe2\x36\x14\x7d\xcf\x57\xdc\x37\xc2\xb4\xd0\xdd\x4c\xf2\xc4\xb4\x33\x14\x8b\x5d\xa6\xac\xe9\x80\x33\x9b\x7d\x62\x54\xfb\x82\x35\x31\x12\x95\x04\x24\xfd\xfa\x8e\x04\x04\x03\xc6\x96\xb1\x9b\xe6\x15\xeb\x1e\x1f\x7c\xce\x91\x74\x6f\xab\x05\x3f\x2d\xd8\x5c\x52\x8d\xf0\xb8\xbc\xb9\x69\xb5\xa0\xcf\xa4\xd2\xb0\x41\xe0\x88\x11\x68\x01\x11\x26\xa8\x11\x68\x92\x80\x14\x1b\x05\x3a\xa6\x1a\x96\x82\x71\x6d\x9e\x52\xe0\x82\xb7\xf0\x85\x29\xcd\xf8\x1c\x04\x5d\xe9\xf8\x0e\xc2\x84\x21\xd7\xed\x1b\x8f\x0c\x49\x40\xa0\x3f\x1e\x7d\x83\xf8\x35\x92\x74\xba\x5d\x30\xa5\x61\x88\x4a\xc1\xf7\xaf\x64\x4c\xc0\x1f\x05\x40\x9e\x06\x93\x60\x02\xb7\x13\x32\x24\xbd\x00\x3e\xa7\x6b\xb6\x68\xbb\xc5\x19\x30\xed\xed\x82\x29\x8b\xe0\xd7\xa3\x92\x36\x8b\x9a\x9d\xcb\x24\x24\xce\x24\xaa\xb8\x32\x8b\x1d\xce\xb5\x34\x42\x11\x61\x65\x0e\x06\xe4\x5a\x02\x82\x45\x61\x65\x02\x06\xe4\x5a\x02\xcb\xe7\xb0\xfa\x17\x30\x20\x05\x04\x8c\xbf\x25\xfe\xbd\x42\x65\x97\x30\x05\x14\xee\x3f\xc1\x9a\xca\x30\xa6\x12\x18\x07\x1d\x23\x48\x9c\xa1\x44\x1e\x1a\xfb\xd3\xbf\x12\x84\x4d\xcc\xc2\xd8\xac\xde\xc4\xaf\x26\x19\x54\x9a\x45\x8a\xfd\xc3\xf8\xdc\x40\x7e\x6e\xc3\x77\x84\xc5\x4a\x69\x90\xb8\x10\x6b\x4c\xbd\x44\x41\x22\xf8\x1c\xa5\x89\x0d\x37\x2f\x33\x6f\x52\x6d\x08\x62\xa6\x40\xc5\x62\x95\x44\xc0\x71\x8d\x12\x62\xba\x5c\x22\x07\xaa\x60\x83\x8d\x35\xee\x7e\x65\x4a\xad\x0c\x91\x18\x17\x47\x48\x3a\x66\xca\x31\x5e\x43\xe2\x7f\x09\xbe\xde\x1e\x38\x35\xe1\x37\xb8\xff\xe4\x1c\x8c\xf2\xf5\x29\x47\x97\x2f\x4e\xb9\xb1\x7c\x71\xca\x49\x17\x8b\x8d\x64\x77\x6d\xf0\xf1\xc5\xec\x73\x0d\x89\x40\x43\xbd\xa2\x49\xf2\x7a\x50\xb5\x3b\x0c\xc8\x18\x82\xee\xef\xc3\xcc\x1d\x07\xbe\x8d\xbc\x41\xff\x47\xda\x4c\x3b\x13\xdd\xde\x7f\x6a\x5a\x13\xfb\x8f\xc3\x21\x78\xa4\xdf\x7d\x1c\x06\xd0\x68\x74\x2e\x43\xee\xbf\x76\x9d\x98\x56\x81\x3a\x01\xad\x2a\x75\x02\x5a\xa5\xae\x00\x34\xea\x0d\x38\x2c\x25\x2e\xa9\xa4\x9a\x09\x0e\x33\x21\x21\x94\x48\xed\x09\x64\x12\x7c\xd8\x05\x18\x8f\xf0\x05\x28\x8f\xcc\x22\x64\x73\x0e\xcf\xf8\xfa\xb3\x09\xb1\x8d\xab\x42\x0d\xcc\x9e\x63\xfb\xf7\xde\x3d\x3c\x34\x0f\x81\xa7\x89\x12\xe6\x85\x06\x34\x41\x3e\xd7\x31\x88\xd9\xe9\xc6\x52\x2e\x86\x6f\xdc\x8c\x1d\xef\x1e\x1e\xca\xc6\xb0\x44\xfd\x79\x0c\x4b\x14\x9f\xc7\xb0\x44\xf1\x79\x0c\xcf\x8b\x1d\x23\x76\xd0\xf2\x48\xa2\x4a\x11\xab\x05\x33\x1d\xb1\x5a\x00\xd3\x11\xab\x05\x30\x1d\xb1\x32\x80\xc6\xf1\xbe\xd8\x00\xd3\x0d\x05\x9a\x2d\xd0\x04\xc4\x06\x0c\x6d\x12\xb6\xa1\xb2\xa9\xdb\xa3\xde\xf4\xc6\xa4\x1b\x10\x18\xf8\x1e\x79\xca\x92\x73\xfa\xb6\x74\xca\xa2\x17\x18\xf9\x99\x9a\xa7\x6c\xd2\xc9\x81\xdc\xc9\x59\x80\xb9\x17\xdd\x11\xd4\xe8\x59\x80\x68\x25\x77\x84\x33\x6a\x16\xc0\x59\xc1\x1d\xe1\x8c\x96\x05\x70\x56\xee\x23\x38\x7b\x9f\x3f\xec\x7b\x0a\x94\xa6\x52\x43\x8c\x12\xed\x33\x7b\x09\xd9\x0a\x6b\xae\x42\xa9\x2d\x72\x7b\xcb\x0f\xa9\x0a\x69\x84\xbb\x16\xa0\xa1\x80\xcd\x4e\xf7\x57\xb5\xbb\xf2\x44\xed\xc2\x40\x77\x3d\x0f\x7a\x23\x7f\x12\x8c\xbb\x03\x3f\x28\x30\xc9\xec\x19\xfa\xa3\x31\x19\x7c\xf1\xe1\x0f\xf2\x23\xfd\xb7\x60\x4c\xfa\x64\x4c\xfc\x1e\x99\x1c\xed\xc4\xb7\xe6\xd9\xc8\x87\xdd\xa6\xd4\xeb\x4e\x7a\x5d\x8f\x38\x6c\x0a\x79\xbc\xce\x9d\xf6\x0e\xc4\xac\xcd\xf2\x58\x9d\x58\xf5\x1d\x28\x59\xab\xe6\x51\x3a\xb1\xfb\x3b\x50\xb2\x76\xcf\xa3\x74\x12\x99\xfa\x28\x55\x8a\x8e\xe0\xca\x34\x30\x54\x29\x11\x32\xaa\x31\x82\x0d\xd3\xb1\xbd\xcf\xd7\x9e\xa6\x98\x26\xe6\xd6\x82\x99\x7f\x3f\xf5\x30\xe3\x0b\xbc\x39\xcd\xd2\x9d\xee\x6f\x68\x31\xe5\x51\x82\xd1\xa1\xfa\x3f\x8c\xdc\x87\x63\xef\x98\xcb\x0f\xc7\xdb\x31\xbc\x1f\x8e\xb7\x63\xc2\xff\x2f\xde\x37\xe9\xe9\x99\x27\x36\xdc\xfe\xe2\x49\xb1\x54\x27\xa7\x64\x6a\x77\x28\xcc\xb5\x37\x1e\xfd\x79\xf4\x1f\x8a\xce\x49\x87\xb8\xe5\x63\x66\x9d\x71\x45\x29\xc8\x47\x3c\x3b\x9f\x8a\xcc\x99\x0f\x77\x76\xb6\x14\x79\x26\x1f\xee\xec\x5c\xe8\x9c\x0a\xb7\x97\xfd\x97\x54\x63\x5a\xbf\x86\xc7\xbe\xad\x4f\x46\x67\x5c\x67\x25\x9d\x11\x9d\xc5\x74\x46\x74\xd6\xf3\x14\xf1\x58\xd2\xac\x96\xc5\xa2\x56\x6b\x58\x3a\x17\x41\x4a\xb5\x28\x97\x61\x1c\x9b\x92\xcb\x00\x8e\x6d\xc8\x65\x00\xc7\xc6\xe3\x6c\xb8\xba\xa1\xca\x8e\x57\x52\xb3\x15\x3b\xd3\x31\xcd\xe6\xad\xb9\xf2\x88\x95\x86\x08\x67\x74\x95\xe8\x26\xb4\x20\x41\xd3\x6d\x4a\x5c\xa3\xd4\xf6\x0a\x55\x61\x06\x57\x7d\x42\x50\x0f\x68\xc1\x14\xae\xe2\x8c\xa0\x1e\xc4\x82\x39\x5c\xce\x94\xa0\xf4\x00\x27\x20\x4f\xc1\x1b\xd6\x35\xd3\x1a\x57\x80\xec\xd1\x8c\x6b\x75\xf6\x1c\xc6\xb5\x3a\x7b\xe8\x72\x5c\xfd\x6f\x00\x00\x00\xff\xff\xf1\x23\xf1\xe9\x77\x1b\x00\x00")

func migrationsSqlMysql9SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql9Sql,
		"migrations/sql/mysql/9.sql",
	)
}

func migrationsSqlMysql9Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/9.sql", size: 7031, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgresGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlPostgresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgresGitkeep,
		"migrations/sql/postgres/.gitkeep",
	)
}

func migrationsSqlPostgresGitkeep() (*asset, error) {
	bytes, err := migrationsSqlPostgresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres10Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x31\xeb\xc2\x30\x10\x47\xf7\x7c\x8a\x1b\xff\x7f\xa4\x8b\x6b\x27\xb1\x1d\x5c\x5a\x29\x0a\x6e\x21\x5c\xce\x26\x58\x9b\x92\x54\xd4\x6f\x2f\x01\x87\x82\x89\x31\xfb\xbb\xc7\xf1\x7b\x45\x01\xab\xab\xee\xad\x98\x09\x8e\x13\xdb\x76\xf5\xe6\x50\xc3\xae\xa9\xea\x13\xa8\xa7\xb4\x82\x1b\x71\x9b\xd5\x9a\x0b\x44\x72\x8e\xa3\x12\xc3\x40\x63\x4f\x5c\x4b\xae\xe5\x03\xda\x26\xc4\xc1\xdf\x12\xfc\x2f\xbf\x88\x2d\x9d\x2d\x39\x95\x36\xbf\xc1\x0c\x35\x1a\x49\x69\xaf\xa7\x32\xa4\x46\x4b\x4c\x4b\x3d\x95\x21\x9d\x2e\xf8\xc3\xa7\x9e\xfa\x90\xb2\x65\xc2\xca\xdc\x47\x56\x75\xed\x3e\x23\x61\x19\x3d\x88\xa5\x89\x5f\x04\x17\x8f\xe3\xc1\x2d\xe3\x78\x70\xa5\x92\xbd\x02\x00\x00\xff\xff\x67\xae\xd3\x28\xc4\x02\x00\x00")

func migrationsSqlPostgres10SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres10Sql,
		"migrations/sql/postgres/10.sql",
	)
}

func migrationsSqlPostgres10Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/10.sql", size: 708, mode: os.FileMode(420), modTime: time.Unix(1575534526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\x08\xf5\xf3\x0c\x0c\x75\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x89\xcf\x4c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4a\x41\x03\xa1\x4c\xd3\x9a\xb0\xd9\x45\xa9\x69\x45\xa9\xc5\x19\x84\x0c\x87\x2a\x43\x33\x9d\x0b\xd9\x27\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x44\x7b\xc1\x1a\xa7\x72\xec\xae\xb2\xe6\x02\x04\x00\x00\xff\xff\x35\xd0\xf0\x59\x3a\x01\x00\x00")

func migrationsSqlPostgres5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres5Sql,
		"migrations/sql/postgres/5.sql",
	)
}

func migrationsSqlPostgres5Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/5.sql", size: 314, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x49\x4d\x89\x4f\x2c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4e\x41\x03\x59\xa1\xa6\x35\x17\x17\xb2\x45\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x24\x58\x64\xcd\x05\x08\x00\x00\xff\xff\xd2\x18\x3e\xa9\xab\x00\x00\x00")

func migrationsSqlPostgres6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres6Sql,
		"migrations/sql/postgres/6.sql",
	)
}

func migrationsSqlPostgres6Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/6.sql", size: 171, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xb1\x4e\x85\x30\x14\x86\x77\x9f\xe2\x6c\x77\x30\x77\x71\x75\xaa\xb6\x4e\x15\x0c\x69\x13\x37\xd2\xb4\x47\x20\x46\x8a\x2d\xc4\xf8\xf6\x26\x0c\x84\x58\x6e\x28\xa5\x0f\x70\xbe\xef\x4b\xf3\xf7\x7a\x85\xfb\xaf\xae\x71\x6a\x44\x90\xc3\x1d\xe1\x82\x55\x20\xc8\x13\x67\xd0\xfe\x1a\xa7\x6a\xab\xa6\xb1\x7d\xa8\x95\xd6\xe8\x3d\x10\x4a\xc1\xe1\xf7\x84\x7e\x44\x53\xab\xc9\x74\xd8\x6b\x04\xc1\xde\x05\x14\x92\x73\xa0\xec\x85\x48\x2e\xe0\x72\x79\x8c\x82\x35\x4e\xf5\x11\xa8\xdb\x2c\x87\x1f\x0e\x7d\x9b\xa9\x6c\x4d\x3b\x9d\xa6\xad\xc1\x4c\x5d\x0b\xea\x74\x94\xed\x8c\xce\x14\xb5\xa0\x4e\x47\x0d\x9f\x3a\xd7\x4b\x2d\xa8\xd8\xa8\xf5\x0f\xa0\xf6\xa7\xdf\x9d\x2d\xad\xca\x37\x78\x2e\xb9\x7c\x2d\x36\x7a\xf7\x67\xbf\xbe\xff\x1f\x19\xb3\xf4\x64\xff\x16\xe0\x48\xc0\x3c\xc2\x64\x7b\x70\x7d\x44\x3d\x4f\x2d\x59\x1d\x5c\x1f\x51\xcf\x83\x4a\x56\x07\xd7\xa1\xfa\x2f\x00\x00\xff\xff\xfa\x0a\xa4\x20\x83\x05\x00\x00")

func migrationsSqlPostgres7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres7Sql,
		"migrations/sql/postgres/7.sql",
	)
}

func migrationsSqlPostgres7Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/7.sql", size: 1411, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres9Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x51\x73\xe2\x36\x10\x7e\xcf\xaf\xd8\x99\x3e\x24\x4c\x0f\x9a\xcb\x24\x0f\x2d\x73\x9d\xa1\xa0\xdc\x31\xe5\xcc\x0d\x38\x73\xb9\x27\x46\xb5\x17\xac\x89\x91\xa8\x24\x20\xe9\xaf\xef\x48\x86\x60\xb0\xb1\x65\x43\xd3\xbc\xe2\xdd\xcf\x1f\xfe\xf6\x5b\xad\xb6\xd9\x84\x9f\xe7\x6c\x26\xa9\x46\x78\x58\x5c\x5c\x34\x9b\x70\xcf\xa4\xd2\xb0\x46\xe0\x88\x21\x68\x01\x21\xc6\xa8\x11\x68\x1c\x83\x14\x6b\x05\x3a\xa2\x1a\x16\x82\x71\x6d\x9e\x52\xe0\x82\x37\xf1\x99\x29\xcd\xf8\x0c\x04\x5d\xea\xe8\x06\x82\x98\x21\xd7\xad\x8b\x1e\x19\x10\x9f\xc0\xfd\x68\xf8\x15\xa2\x97\x50\xd2\x49\x12\x30\xa1\x41\x80\x4a\xc1\xf7\x2f\x64\x44\xc0\x1b\xfa\x40\x1e\xfb\x63\x7f\x0c\x57\x63\x32\x20\x5d\x1f\x3e\xa6\x73\x12\xb4\x4d\x70\x0e\x4c\x2b\x09\x98\xb0\x10\x3e\xed\xa5\xb4\x58\xd8\x68\x1f\x27\x21\x71\x2a\x51\x45\x27\xb3\xd8\xe0\xd4\xa5\x11\x88\x10\x4f\xe6\x60\x40\xea\x12\x10\x2c\x0c\x4e\x26\x60\x40\xea\x12\x58\x3c\x05\xa7\x7f\x01\x03\x52\x42\xc0\xd4\xb7\xc4\xbf\x97\xa8\x6c\x08\x53\x40\xe1\xf6\x1a\x56\x54\x06\x11\x95\xc0\x38\xe8\x08\x41\xe2\x14\x25\xf2\xc0\x94\x3f\xfd\x2b\x46\x58\x47\x2c\x88\x4c\xf4\x3a\x7a\x31\xce\xa0\xd2\x04\x29\xf6\x0f\xe3\x33\x03\xf9\xb1\x05\xdf\x11\xe6\x4b\xa5\x41\xe2\x5c\xac\x30\xf5\x12\x05\xb1\xe0\x33\x94\xc6\x36\xdc\xbc\xcc\xbc\x49\xb5\xc0\x8f\x98\x02\x15\x89\x65\x1c\x02\xc7\x15\x4a\x88\xe8\x62\x81\x1c\xa8\x82\x35\x5e\xae\x70\xf3\x2b\x53\x6a\x69\x88\x44\x38\xdf\x43\xd2\x11\x53\x8e\xf6\x1a\x10\xef\xb3\xff\xe5\x6a\xc7\xa9\x01\xbf\xc3\xed\xb5\xb3\x31\xaa\xe7\xa7\x2a\xba\x7a\x72\xaa\x1a\xab\x27\xa7\x2a\xe9\x68\xb2\x91\xec\xa6\x05\x1e\x3e\x9b\x3e\x77\x29\x11\x68\xa0\x97\x34\x8e\x5f\x76\xaa\x76\x06\x3e\x19\x81\xdf\xf9\x63\x90\xdb\x71\x20\x79\xde\x1d\x0e\x1e\xbe\x7a\xe9\x92\xf2\x7f\x7c\x23\xdb\x7a\xba\xba\xbd\x6e\xb4\x8f\x23\x6d\x3f\xf2\x19\xa0\xec\xf7\x3e\x03\x8e\xfd\xf4\x67\xc0\xb1\x2a\xb8\xe3\x18\x41\xfa\x1c\x16\x12\x17\x54\x52\xcd\x04\x87\xa9\x90\x10\x48\xa4\xf6\x50\x31\xa6\xdc\x19\x9b\xf1\x10\x9f\x81\xf2\xd0\x04\x21\x9b\x71\x78\xc2\x97\x0f\xc6\x97\xd6\x81\x0a\x35\x30\x7b\x34\x6d\xdf\x71\x73\x77\xd7\xd8\x79\x98\xc6\x4a\x98\x17\x1a\xd0\x18\xf9\x4c\x47\x20\xa6\x87\xbd\xa2\x9a\xb3\x5e\xb9\x99\x0a\xbb\xb9\xbb\xab\xea\xac\x0a\xf9\x59\x67\x55\x48\xce\x3a\xab\x42\x72\xd6\x59\xd9\xe4\x4a\xae\xd9\x29\xba\x57\x11\x46\xad\xaa\xae\xa9\x07\x95\x75\x4d\x3d\x9c\xac\x6b\xea\xe1\x64\x5d\x53\x88\x63\x8a\xd8\x13\x6b\x60\xfa\x52\x81\x66\x73\x34\x35\x6f\x3d\x83\xb6\xb8\x13\x9f\x58\x23\x6d\x61\x2e\xba\x23\xd2\xf1\x09\xf4\xbd\x1e\x79\xcc\x53\x68\xf2\x1a\x3a\x61\xe1\x33\x0c\xbd\x5c\x19\x53\xca\xb7\x0b\x20\x37\x52\x95\x60\x6e\x05\x75\x04\x35\xa2\x95\x20\x5a\x5d\x1d\xe1\x8c\x76\x25\x70\x56\x5e\x47\x38\x23\x61\x09\x9c\x55\x79\x0f\xce\x4e\xdd\xbb\x56\xa6\x40\x69\x2a\x35\x44\x28\xd1\x3e\xb3\xa3\x42\x40\x97\x0a\x43\xf8\xe9\xe3\xcd\xf5\xaf\xbf\x99\x5f\xc7\xc4\x07\x85\x4a\x31\xc1\x27\x12\x17\x31\x0b\x6c\xe7\x9c\x48\x11\x23\x7c\x82\xcd\x4f\xed\x14\x82\x2d\x0d\x33\xf2\xa4\xfa\x66\x32\xcd\x07\x54\x05\x34\xc4\xcd\xa8\x7f\xa9\x80\x4d\x0f\x9b\xae\xda\x8c\x36\x61\xab\xdc\xe5\xbd\x1e\x74\x87\xde\xd8\x1f\x75\xfa\x9e\x5f\x52\x66\xd3\x27\xb8\x1f\x8e\x48\xff\xb3\x07\x7f\x92\x1f\xe9\x0f\x03\x23\x72\x4f\x46\xc4\xeb\x92\xf1\x5e\x7b\xbe\x32\xcf\x86\x1e\x6c\x3a\x55\xb7\x33\xee\x76\x7a\xc4\xa5\x65\x14\xf0\xca\xd6\xea\x1b\x10\x4b\x1a\x50\x01\xab\x83\x62\x7f\x03\x4a\x49\x2f\x2b\xa0\x74\x60\x98\x37\xa0\x94\xb4\xc5\x02\x4a\x07\xa6\x3b\x1f\xa5\x93\xac\x23\xb8\x32\x17\x15\xaa\x94\x08\x18\xd5\x18\xc2\x9a\xe9\xc8\xce\xed\x67\x77\x53\x44\x63\x33\xca\x60\xee\xdf\x4f\x3d\xcc\xf9\x02\xaf\x95\x66\xe9\x4e\xb6\x73\x5a\x44\x79\x18\x63\xb8\xcb\xfe\x0f\x2d\xf7\xee\xd8\x3b\xfa\xf2\xdd\xf1\x76\x34\xef\xbb\xe3\xed\xe8\xf0\xff\x8b\x77\xed\x33\xb8\x47\xee\x3b\x0f\x03\x3f\x41\x78\xdd\xb3\xf5\xc4\x9a\xdb\x5f\x7a\x52\x2c\xd4\xc1\x39\x9b\xea\x2f\xa5\x9d\xa1\x37\x1a\x7e\xab\x72\xd0\x3a\xf8\xb5\x10\x32\xef\x8c\x2c\x73\x51\x21\x60\xe6\x78\x2b\xab\xed\x42\xb4\xcc\xc9\x54\x56\x71\x85\x68\x99\x43\xa5\x7d\xa8\xd9\xb6\x66\x7e\x49\xdd\x6d\xcf\x2e\xdf\x7e\xcd\x9f\x4d\x41\x67\x58\x57\x11\x9d\x01\x5d\x75\x74\x06\x74\x95\xf2\x10\x70\x5f\xcd\xbc\xcb\x92\x05\x75\xbc\x2a\xb5\x8f\x46\xe7\xde\x82\x8e\x87\x67\xef\x37\xc7\x63\xb3\x97\x97\xe3\xb1\xd9\x9b\x49\x66\x1d\xba\xa6\xca\x6e\x4f\x52\xab\x93\xdb\xeb\x06\x78\x0f\x83\x01\x5c\x99\xe1\x45\x2c\x35\x84\x38\xa5\xcb\x58\x37\xa0\x09\x31\x9a\x9b\xa7\xc4\x15\x4a\x6d\x87\xa1\xf3\x6c\xcd\xea\x2c\x00\x6a\x62\xb9\xef\xcd\x2a\xaf\x00\x6a\x02\xb9\x6f\xce\x76\x4b\x80\xdd\xe9\x91\xa3\xa0\x09\xfb\x90\x95\xca\x61\xee\x2c\x58\x44\xf8\xe4\xd1\x3f\x71\x47\x53\x02\x51\xba\x9b\x29\xc9\x2f\xdd\xc9\x94\xe4\x97\xee\x62\x92\xfc\x7f\x03\x00\x00\xff\xff\x31\x85\x44\xc6\x40\x1b\x00\x00")

func migrationsSqlPostgres9SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres9Sql,
		"migrations/sql/postgres/9.sql",
	)
}

func migrationsSqlPostgres9Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/9.sql", size: 6976, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared1Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x31\x6f\xf2\x30\x10\x86\x67\xfb\x57\xdc\x08\xfa\x60\x41\x62\x62\xca\x57\x8c\x84\x9a\x02\x0a\x41\x2a\x53\x74\xb2\x8f\xc4\x52\x63\xa7\xb6\x53\xda\x7f\x5f\x85\xa6\x82\x22\x22\xb5\x03\x5b\xb2\x3e\xef\xbd\xb1\x1e\x5b\x37\x1e\xc3\xbf\x52\xe7\x0e\x03\xc1\xae\xe2\x0f\x89\x88\x52\x01\x69\xf4\x3f\x16\xb0\x5c\xc0\x6a\x9d\x82\x78\x5e\x6e\xd3\x2d\x14\x1f\xca\x61\x66\xb1\x0e\xc5\x24\x43\x29\xc9\x7b\x18\x70\xe6\x75\x6e\x30\xd4\x8e\xe0\xf4\xb1\x37\x74\xb2\x40\x37\x98\x4c\xa7\xc3\xd3\xf8\x6a\x17\xc7\xb0\x49\x96\x4f\x51\xb2\x87\x47\xb1\x1f\x71\xe6\xe8\xb5\x26\x1f\x32\xad\x00\x18\xc0\xcd\x91\x73\x8c\x54\x86\x01\x80\x05\x5d\x92\x0f\x58\x56\xe7\xda\xb9\x58\x44\xbb\x38\x05\x63\x8f\x83\xe1\x88\x33\xf9\xa2\xc9\xb4\xbd\x0c\x20\xd0\x7b\xb8\x2c\xf4\xd2\x56\xd4\x20\xd6\x1c\xf5\x9a\xe6\x0e\x4d\xf3\xb3\xaf\x14\xbb\xc6\x07\xeb\xca\x4c\x61\xc0\x8e\x6e\xf2\x5e\x5b\xf3\x9d\xf8\x81\xf9\x70\xc6\x7f\xad\xd6\xd1\xc1\x91\x2f\x7a\xb7\x77\x70\x2b\xad\xa2\x5e\xec\x1d\xc4\x5a\xad\x64\x2f\xf6\x0f\x62\x2f\xf7\xee\xdc\x1e\x0d\x9f\x27\xeb\x4d\xeb\xf9\xc6\xa6\x9d\x75\xf2\x76\x5d\x74\x07\x9a\x37\xdf\x4d\x9b\x8b\x9b\xf1\xcf\x00\x00\x00\xff\xff\x94\xd2\x19\xdf\x06\x06\x00\x00")

func migrationsSqlShared1SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared1Sql,
		"migrations/sql/shared/1.sql",
	)
}

func migrationsSqlShared1Sql() (*asset, error) {
	bytes, err := migrationsSqlShared1SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/1.sql", size: 1542, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xb1\x0a\xc2\x30\x14\x45\xf7\x7e\xc5\xdd\xaa\x48\x97\x42\x27\xa7\x68\xea\x14\x5b\x29\xc9\x5c\x62\x1a\x4d\x05\x8d\xbc\xb4\x8a\x7f\x2f\x14\x04\x07\x45\x0b\xfd\x80\x73\x2e\xf7\x24\x09\x16\xe7\xf6\x48\xba\xb3\x50\xd7\x88\x09\x99\x57\x90\x6c\x25\x72\xb8\x47\x43\xba\xf6\xba\xef\x5c\x5a\x6b\x63\x6c\x08\x60\x9c\x23\xf4\xfb\x93\x35\x1d\x6e\x9a\x8c\xd3\x34\x4b\xb3\x6c\x8e\xa2\x94\x28\x94\x10\xe0\xf9\x86\x29\x21\x11\xc7\xcb\xef\x36\xb2\x07\xb2\xc1\x4d\xa5\x33\xbe\xb1\x53\xb9\x7c\xdb\x98\x91\xae\xe8\x3d\x22\xf7\xf7\xcb\xcf\x8c\xe0\x55\xb9\xc3\xba\x14\x6a\x5b\xbc\x86\xfe\xc8\x35\x8e\x1a\xaa\x8c\x43\x86\xf3\x1f\x91\x67\x00\x00\x00\xff\xff\xa3\x05\x9b\x27\x28\x02\x00\x00")

func migrationsSqlShared2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared2Sql,
		"migrations/sql/shared/2.sql",
	)
}

func migrationsSqlShared2Sql() (*asset, error) {
	bytes, err := migrationsSqlShared2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/2.sql", size: 552, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared3Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x6e\xc2\x30\x10\x86\x67\xfb\x29\x6e\x24\x2a\x2c\x48\x4c\x4c\x69\x63\xa4\xa8\x29\xa0\x90\x48\x65\x8a\xae\xc9\x35\x71\xdb\xd8\xa9\x7d\x29\xed\xdb\x57\x01\x2a\x10\x50\xaf\xdf\x7f\xdf\xd9\xfe\x27\x13\xb8\x6b\x75\xed\x90\x09\xf2\x4e\x3e\xa4\x2a\xcc\x14\x64\xe1\x7d\xa2\x20\x5e\xc0\x72\x95\x81\x7a\x8e\x37\xd9\x06\x9a\x9f\xca\x61\x61\xb1\xe7\x66\x5a\x74\xef\x25\xc1\x48\x0a\xaf\x6b\x83\xdc\x3b\x82\xfd\x11\x5f\xe8\xca\x06\xdd\x68\x3a\x9b\x05\xfb\xe1\x65\x9e\x24\xb0\x4e\xe3\xa7\x30\xdd\xc2\xa3\xda\x8e\xa5\x70\xf4\xd9\x93\xe7\x42\x57\x00\x02\xe0\xe6\xc8\x29\x46\x55\x81\x0c\x20\x58\xb7\xe4\x19\xdb\xee\xa4\x8d\xd4\x22\xcc\x93\x0c\x8c\xdd\x8d\x82\xb1\x14\xe5\x87\x26\x73\xf4\x0a\x00\xa6\x6f\x3e\x17\xfa\xd2\x76\x34\x20\x31\x5c\xf5\x92\xd6\x0e\xcd\xb0\xec\x90\x12\x97\xf8\xd5\xba\xb6\xa8\x90\xf1\x1f\x37\x79\xaf\xad\xf9\x4b\x5c\xe1\xfe\xe5\x8d\x4a\x86\xc3\xea\x9b\x2f\x96\xc1\x5c\xca\xf3\x36\x22\xbb\x33\x32\x4a\x57\xeb\x63\x1b\x57\xff\x3f\x97\xbf\x01\x00\x00\xff\xff\x58\x5f\xd7\xfa\xbd\x01\x00\x00")

func migrationsSqlShared3SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared3Sql,
		"migrations/sql/shared/3.sql",
	)
}

func migrationsSqlShared3Sql() (*asset, error) {
	bytes, err := migrationsSqlShared3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/3.sql", size: 445, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\xb1\x0e\x82\x30\x10\xc6\xf1\x9d\xa7\xf8\x76\xc3\xe2\xea\x54\x6c\x9d\x4e\x6a\x48\x3b\x93\xa6\x9c\x42\x8c\x96\x14\xd4\xf8\xf6\x26\xc4\xc1\x41\x23\xa4\x0f\xf0\xfd\xef\xf2\xcb\x73\xac\x2e\xdd\x29\xba\x91\x61\xfb\x4c\x90\x51\x15\x8c\x28\x48\xa1\x7d\x36\xd1\xd5\xc1\xdd\xc6\x76\x5d\x3b\xef\x79\x18\x20\xa4\x84\xf3\x63\x77\x67\x14\x5a\x13\x4a\x6d\x50\x5a\x22\x48\xb5\x13\x96\x0c\x4c\x65\xd5\xe6\x77\x26\xf2\x31\xf2\xd0\x26\x77\x7c\x68\x38\x39\x12\xba\xc6\x27\x47\xfa\xb3\x9f\xfd\x49\xf6\xa9\x2d\xc3\xe3\xfa\xd7\x5b\x56\xfa\x80\xad\x26\xbb\x2f\xdf\x07\x66\xe0\x2e\x1a\x4d\x92\x8b\x16\x13\xdb\xa2\xc5\x64\xf4\x6d\xf1\x0a\x00\x00\xff\xff\xcb\x7a\x0d\xdc\x7e\x02\x00\x00")

func migrationsSqlShared4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared4Sql,
		"migrations/sql/shared/4.sql",
	)
}

func migrationsSqlShared4Sql() (*asset, error) {
	bytes, err := migrationsSqlShared4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/4.sql", size: 638, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\xc1\x0a\x82\x40\x10\xc6\xf1\xbb\x4f\x31\xc7\x22\x84\x88\x6e\x9d\xac\xf5\xb6\x69\x88\x9e\x65\x98\x9d\x5c\xc9\x5c\x19\xad\xe8\xed\x03\x4f\x75\x90\xc4\x7d\x80\xef\xcf\xc7\x2f\x0c\x61\x73\xaf\x2b\xc1\x81\xa1\xe8\x82\x48\xe7\x71\x06\x79\x74\xd4\x31\xd8\xb7\x11\x2c\x1d\x3e\x06\xbb\x2b\x91\x88\xfb\x1e\x22\xa5\x80\x2c\x36\x0d\xb7\x15\x97\xb5\x81\x27\x0a\x59\x94\xd5\x7e\xbb\x86\xa4\xd0\xfa\x30\x9d\x10\xbe\x0a\xf7\xd6\xab\x41\xce\xb0\x57\xc0\xd5\x86\xbc\x02\xdd\x8d\x66\x3d\x08\xbe\x65\x95\x7b\xb5\x7f\x6d\x41\x65\xe9\x05\x4e\xa9\x2e\xce\xc9\x4f\x7d\x86\xe9\x82\xe9\x48\xb9\x60\x37\x0a\x2e\xd8\x8d\x70\xd3\xbb\x4f\x00\x00\x00\xff\xff\x36\xe3\x63\x3b\x89\x02\x00\x00")

func migrationsSqlShared8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared8Sql,
		"migrations/sql/shared/8.sql",
	)
}

func migrationsSqlShared8Sql() (*asset, error) {
	bytes, err := migrationsSqlShared8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/8.sql", size: 649, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTestsGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func migrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := migrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests10_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xc1\x6e\x1b\x37\x10\x3d\x47\x5f\x41\xe8\x22\x07\xa5\x22\xdb\x45\x72\x70\x4f\x05\x9a\x43\x80\xc2\x01\x1a\xa7\x3d\x14\x05\x41\x91\xb3\xbb\xb4\x56\x9c\x2d\x87\x6b\x59\xb5\xfc\xef\x05\x97\xcb\x5d\x4a\x59\x38\x29\x50\xb8\x3d\xf8\x62\x90\x33\x3b\x43\xce\x7b\x6f\x86\x82\x97\x4b\xf6\xdd\xd6\x94\x4e\x7a\x60\x9f\x9b\xd9\x87\xeb\x4f\xef\x7f\xb9\x61\x1f\xae\x6f\x3e\xb2\x6a\xaf\x9d\x14\xaa\x36\x60\x3d\x3b\x33\x9a\x33\x59\xd7\xb8\x03\x2d\x14\x3a\x12\xe8\x4c\x69\x2c\x71\x16\xbf\x10\x56\x6e\x61\xd8\x10\x28\x07\x9e\x33\x07\xda\x38\x50\x5e\xb4\xce\x10\x67\xa5\x93\xd6\x0b\xbf\x6f\x80\x82\x8f\x1a\xb4\x04\x69\x4f\x0a\x1b\xe0\x0c\x77\x16\x1c\x67\x0d\xd6\x46\xed\x43\x1c\x67\x1e\x29\x2e\xfa\xec\xdd\xba\xc6\x12\x7b\x2b\x5a\x2f\x95\xa7\x93\xd3\x05\xdc\x37\xc6\x01\x09\xe9\x39\x23\x50\x1e\x9d\x30\x1a\xac\x37\x85\x01\x17\x43\x6f\x77\x1b\x8a\x7f\xd3\x49\x1b\xb0\x02\xac\x6e\xd0\x58\x2f\x64\xeb\x2b\xb1\x05\x5f\xa1\x0e\xf7\xfd\xb3\x05\x4a\xa5\xa4\x1d\xae\x6f\x43\x7d\x64\x4a\x6b\x6c\x29\x64\x5d\x72\xd6\x12\x38\x63\x0b\xec\xac\xa0\xc5\x50\x69\xe7\xa5\x36\x86\x84\xb2\x39\x93\xad\x36\x60\x15\x70\x56\x38\xb4\x5e\x55\xd2\x5a\xa8\x45\xa8\xae\xed\x2b\x9d\x72\x10\x10\x19\xb4\x22\x5c\xc3\x38\xd0\x01\x30\xf2\xc9\x7b\x02\xfb\x5a\xaa\xcd\x54\xe2\x09\xfb\x97\x79\xb7\xe0\xa5\x96\x5e\xbe\x9e\xfd\xfa\xe3\xcf\x9f\xdf\x7f\x9a\x31\x76\xb6\xb8\x38\x5f\x46\xac\x17\x9c\x2d\x2a\xef\x9b\xab\xd5\xaa\x46\x25\xeb\x0a\xc9\x1f\x7a\x43\x89\x58\xd6\x10\xbe\x20\xdc\x42\x16\x20\xd7\x4a\x43\xf1\x6d\xa1\x81\x02\x74\xe6\x2f\x10\x0a\x35\x1c\xcc\xb6\xa9\x8d\x32\x5d\x9a\x8e\xac\x83\xd1\xa2\x5b\x04\x4b\x81\x78\x58\x4b\xd7\xc5\x81\x05\x49\xd9\x19\x51\x50\x99\xc1\x63\xee\x9e\x28\xa7\xc4\x31\xd1\xa1\xc0\xb0\x3b\x1f\xfd\x51\x51\xe1\x8b\x87\xf9\x06\xf6\x34\xbf\x62\xbf\xff\xf1\x98\x25\x08\xaa\x0a\x5b\x8b\x16\x32\x73\xeb\xcc\xc5\x61\x5c\x5f\x06\x97\xa3\xcb\xb7\xef\xe2\xe2\xed\x65\xb7\x68\xda\x75\x6d\x54\x0a\xa3\xab\xd5\x6a\xb7\xdb\xbd\x41\xb7\x7f\x43\xd5\x4a\x36\x26\x4b\x58\xa8\x65\x24\x6f\xb5\xe0\xcc\xbb\x16\x46\x57\xa7\x83\x8b\xd5\x21\xdf\x5e\xae\xb2\xd8\xf5\x44\xec\xc3\xbc\x40\x9c\x5f\xcd\xd7\xd2\xcd\x1f\x17\xaf\x7f\x98\xe5\x53\x61\xf6\x2a\x8e\x05\x0c\xbc\x5c\x76\x0d\x12\x3a\x4a\x49\x1f\x54\xd3\xab\xa7\x9f\x16\xa3\x0f\x74\x6c\xc2\xa8\xfc\x41\x49\xaf\x3a\x21\xd5\x58\x1a\xbb\xec\x43\x97\x46\x2f\x38\xbb\xfe\xf8\xdb\xd9\x6b\xce\x82\x97\xda\xf5\x3f\xbb\x43\xdf\x98\xec\x4c\x55\xb2\xae\xc1\x96\xc0\xd9\x1d\xb8\xae\xe9\x87\x09\x11\xee\xd7\xdf\x26\x6f\xec\x9a\x33\xda\x98\x66\x30\x81\x16\xfd\x54\x52\xe4\x8a\xa9\x92\xc6\x0f\xc3\x0e\x8d\x56\x22\x8c\x23\xb8\xf7\xdd\x84\x32\x03\x26\xdd\x91\xf9\xd7\x22\x75\xfe\x09\x1c\xc3\xb5\x17\x11\x80\x74\xf7\x7e\x3b\xea\x34\x82\x13\x4a\xe8\x77\xa9\xeb\x17\x9c\x15\xb2\x26\xe8\xbf\x09\x05\xa4\x60\x72\xc5\x08\x6f\x42\xf9\xe1\xb1\x77\x4f\x30\x11\xcc\xb2\xd5\x5f\xa1\x40\x85\xe9\x66\xfd\xff\x08\xfb\x02\x9d\x0a\x19\xfa\x59\x3b\xce\xfd\x29\x5a\xa2\x25\xbb\xf3\x24\x4f\x9c\x49\xe5\xe2\x6b\x03\xf7\xa7\x22\xfe\x0f\x59\x8b\xa5\x76\x8d\xf2\x24\x8d\xa7\x57\x0c\xb4\xf6\x2b\x15\xe7\xd8\xd7\xba\xfd\x84\x66\x51\x49\xab\x6b\xd0\x47\x74\x77\x4f\xfc\xc8\x9d\x83\x2d\x6c\xd7\x01\xf6\xb4\x12\x05\x3a\xce\xc0\x39\x74\xa7\x14\x26\x4e\xa4\x52\x40\x14\xc7\xfa\x68\x4d\x83\x7e\x4a\x0a\x3b\x49\xa2\xa5\xf0\x5c\xa5\xf3\xbf\xbd\xc1\x12\xd4\x71\xfc\x7d\xff\xee\xfc\x3c\xa1\x7b\x0c\x75\x6e\xca\x98\x4a\xdd\xb1\x5c\xb2\x9b\x0a\x58\xe3\xe0\xce\x60\x4b\x6c\x5d\xa3\xda\x30\x43\xec\xb6\x25\xcf\x3c\xb2\x12\x7c\x90\x25\x98\xd2\xb2\xf0\x60\xb0\x1d\xba\x8d\xb1\xe5\x93\xb3\xad\x43\x82\x9d\x85\x1f\x12\xd2\xb7\x6e\xd4\xe6\x17\xf3\xe4\xb8\xbf\x22\xfa\x27\x64\x14\xe8\xb6\x22\xbc\xe5\x23\xa8\xfd\x2e\xb5\xa3\x54\xde\xdc\x1d\x37\xc0\xa0\xfe\x01\xd9\xc1\x32\x20\x29\x8c\x3e\x01\x99\x4c\x39\xe8\xbb\x4b\x75\x3c\xd5\x8f\xfb\x21\xd3\x7a\x7f\xc8\x68\x5b\xe4\x52\x1f\x3b\xa7\x7f\xab\x72\x3a\x41\x67\x92\x4e\x79\x46\xcb\x48\xfb\xd3\x22\x77\x50\x38\xa0\xea\x05\xf3\x67\xc4\x3c\xfc\xb4\x7b\x01\xfc\x19\x01\x0f\x8f\xe5\x0b\xe0\xcf\x08\x78\xb3\x51\x2f\x0a\xff\xf7\x01\xcf\xff\x7d\xf1\x13\xee\xec\xec\xef\x00\x00\x00\xff\xff\x13\x41\x66\xd6\xd0\x10\x00\x00")

func migrationsSqlTests10_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests10_testSql,
		"migrations/sql/tests/10_test.sql",
	)
}

func migrationsSqlTests10_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests10_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/10_test.sql", size: 4304, mode: os.FileMode(420), modTime: time.Unix(1575534526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests1_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\x41\x4b\x03\x31\x10\x85\xcf\xcd\xaf\x98\x5b\x76\x31\x7b\xa8\x57\x4f\x82\x3d\x14\x64\x0b\xb6\xd5\x63\x18\x92\x69\x36\x60\x93\x3a\x93\x45\x44\xfc\xef\xd2\xcd\xa2\x9e\xbc\xb7\x87\xc0\xbc\xf7\xe0\x3d\xbe\x43\xba\x0e\x6e\x8e\x31\x30\x16\x82\xfd\x49\xad\xfb\xed\xea\x69\x07\xeb\x7e\xb7\x51\x8b\xe1\xc3\x33\xda\x8c\x63\x19\x6e\x2d\x3a\x47\x22\xd0\x48\x0c\x09\xcb\xc8\x64\x80\xe9\x6d\x24\x29\x36\xfa\x9f\x9b\xbc\xc5\x62\xc0\xbd\x46\x4a\x35\x10\x97\x4f\x64\x20\x30\xa6\x73\x3a\xcb\x43\xe6\xa3\xf5\x58\xd0\x80\x90\x48\xcc\x69\x52\xad\x7a\xbe\x7f\xdc\xaf\xb6\x6a\xd1\xe8\x65\x27\x31\x68\x03\x7a\xd9\xcd\xe5\xda\x40\xbf\x79\x69\xda\xc9\xab\x13\x35\x9f\x4a\xeb\x39\xef\xfc\x5a\xe7\xf7\xf9\xa5\xdb\x3b\xf5\x0f\x1c\xd3\x81\x49\x86\x2b\xa5\x73\xd9\xd3\x95\xa2\xe5\xe8\xdd\x45\xa3\xfd\xfd\x7f\x0f\xf9\x3d\xa9\xef\x00\x00\x00\xff\xff\x72\x0a\x2b\x58\x91\x03\x00\x00")

func migrationsSqlTests1_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests1_testSql,
		"migrations/sql/tests/1_test.sql",
	)
}

func migrationsSqlTests1_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests1_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/1_test.sql", size: 913, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests2_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x93\xbf\x4e\xc3\x30\x10\xc6\xe7\xfa\x29\x6e\x73\x22\x9c\x25\x2b\x13\x12\x1d\x2a\xa1\x54\xa2\x2d\x8c\xd6\x61\x5f\x13\x23\x6a\x97\x3b\x47\x08\x21\xde\x1d\xb5\x0e\x7f\x26\x1e\xa0\x19\x2c\xdd\x7d\x9f\xe5\x9f\x7e\x83\x9b\x06\xae\x0e\xa1\x67\xcc\x04\xbb\xa3\x5a\x75\x9b\xe5\xfd\x16\x56\xdd\x76\xad\x16\xc3\xbb\x67\xb4\x09\xc7\x3c\xb4\x16\x9d\x23\x11\xa8\x24\xf4\x11\xf3\xc8\x64\x80\xe9\x75\x24\xc9\x36\xf8\x9f\x99\xbc\xc5\x6c\xc0\xbd\x04\x8a\xa5\x10\x97\x8e\x64\xa0\x67\x8c\xa7\x76\x5a\xf7\x89\x0f\xd6\x63\x46\x03\x42\x22\x21\xc5\xef\x6d\x7c\x7a\x26\x97\x6b\xf5\x70\x73\xb7\x5b\x6e\xd4\xa2\xd2\x6d\x23\xa1\xd7\x06\x74\xdb\x4c\x14\x6d\xa0\x5b\x3f\x56\xf5\x39\x2b\xac\xd2\x9f\x5f\x2f\xe3\x04\xfc\x8d\x4e\xe7\xe3\x73\xba\x57\x28\xba\xbe\x56\xff\x28\x33\xed\x99\x64\x98\x95\xb3\x4b\x9e\x66\x25\x9c\x82\x77\x17\x28\xfc\xf7\x5f\xdf\xa6\xb7\xa8\xbe\x02\x00\x00\xff\xff\x68\x3d\x71\xc0\xe9\x03\x00\x00")

func migrationsSqlTests2_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests2_testSql,
		"migrations/sql/tests/2_test.sql",
	)
}

func migrationsSqlTests2_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests2_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/2_test.sql", size: 1001, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests3_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x94\xcf\x4a\x03\x31\x10\x87\xcf\xcd\x53\xcc\x2d\xbb\x98\xbd\xd8\xa3\x27\xc1\x1e\x0a\xb2\x05\xdb\xea\x31\x8c\xc9\x74\x37\x6a\x93\x35\x93\x45\x44\x7c\x77\xe9\x26\xfe\x39\xf9\x00\xdd\x43\x60\x66\x7e\x21\x1f\x1f\x81\x69\x1a\xb8\x38\xba\x2e\x62\x22\xd8\x0f\x42\xac\xdb\xed\xea\x6e\x07\xeb\x76\xb7\x11\x8b\xfe\xdd\x46\xd4\x01\xc7\xd4\x5f\x6a\x34\x86\x98\xa1\x62\xd7\x79\x4c\x63\x24\x05\x91\x5e\x47\xe2\xa4\x9d\xfd\xa9\xc9\x6a\x4c\x0a\xcc\x8b\x23\x9f\x03\x36\x61\x20\x05\x5d\x44\x7f\x4a\x4b\x7b\x08\xf1\xa8\x2d\x26\x54\xc0\xc4\xec\x82\xff\xee\xc6\xc7\x27\x32\xa9\x16\xf7\xd7\xb7\xfb\xd5\x56\x2c\x2a\xb9\x6c\xd8\x75\x52\x81\x5c\x36\x85\x22\x15\xb4\x9b\x87\xaa\x9e\x66\x99\x95\xf3\xe9\xf5\x5c\x16\xe0\xef\xe8\x74\x3e\x3e\xcb\xbd\x4c\x91\xf5\xd5\x7f\xca\x91\x0e\x91\xb8\x9f\x95\xb3\x09\x96\x66\x25\x1c\x9c\x35\xb3\x12\x1e\x9e\xcd\x39\xfe\xf0\xdf\x4d\x76\x13\xde\xbc\xf8\x0a\x00\x00\xff\xff\xf0\x6b\xe4\x10\xdb\x04\x00\x00")

func migrationsSqlTests3_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests3_testSql,
		"migrations/sql/tests/3_test.sql",
	)
}

func migrationsSqlTests3_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests3_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/3_test.sql", size: 1243, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests4_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x94\x4f\x4b\x03\x31\x10\xc5\xcf\xcd\xa7\x98\x5b\x76\x31\x7b\x91\xde\x3c\x09\xf6\x50\x90\x2d\xd8\x56\x8f\x61\x4c\xa6\xbb\x51\x9b\xac\x99\x44\x11\xf1\xbb\x4b\x37\xeb\x9f\x93\x1f\xc0\x3d\x04\x66\xde\x0b\xfc\x78\x2f\x90\xa6\x81\xb3\xa3\xeb\x22\x26\x82\xfd\x20\xc4\xba\xdd\xae\x6e\x76\xb0\x6e\x77\x1b\xb1\xe8\xdf\x6c\x44\x1d\x30\xa7\xfe\x5c\xa3\x31\xc4\x0c\x15\xbb\xce\x63\xca\x91\x14\x44\x7a\xce\xc4\x49\x3b\xfb\x3d\x93\xd5\x98\x14\x98\x27\x47\xbe\x18\x6c\xc2\x40\x0a\xba\x88\xfe\xe4\x4e\xeb\x21\xc4\xa3\xb6\x98\x50\x01\x13\xb3\x0b\xfe\x6b\xcb\xf7\x0f\x64\x92\x02\x34\xc9\xbd\x50\x2d\x6e\x2f\xaf\xf7\xab\xad\x58\x54\x72\xd9\xb0\xeb\xa4\x02\xb9\x6c\x26\x9a\x54\xd0\x6e\xee\xaa\x7a\xd4\x0a\xb3\xf8\x23\xa5\x8c\x13\xf8\x47\x3a\x9d\xf7\x8f\xe9\x5e\xa1\x49\x05\x29\x66\xaa\x2f\xfe\x2a\x20\xd2\x21\x12\xf7\x33\x6e\xc0\x04\x4b\x33\x8e\x1f\x9c\x35\x33\x8e\x3f\x3c\x9a\xff\xff\xfa\xbf\xff\xc3\xab\xf0\xea\xc5\x67\x00\x00\x00\xff\xff\x9c\xc9\xf4\x9c\x21\x05\x00\x00")

func migrationsSqlTests4_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests4_testSql,
		"migrations/sql/tests/4_test.sql",
	)
}

func migrationsSqlTests4_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests4_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/4_test.sql", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests5_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x94\x4f\x4b\x03\x31\x10\xc5\xcf\xcd\xa7\x98\x5b\x76\x31\x7b\x11\x7a\xf2\x24\xd8\x43\x41\xb6\x60\x5b\x3d\x86\x31\x99\xee\x46\x6d\xb2\x66\x12\x45\xc4\xef\x2e\xdd\xac\x7f\x4e\x7e\x00\xf7\x10\x98\x79\x2f\xf0\xe3\xbd\x40\x9a\x06\xce\x8e\xae\x8b\x98\x08\xf6\x83\x10\xeb\x76\xbb\xba\xd9\xc1\xba\xdd\x6d\xc4\xa2\x7f\xb3\x11\x75\xc0\x9c\xfa\x73\x8d\xc6\x10\x33\x54\xec\x3a\x8f\x29\x47\x52\x10\xe9\x39\x13\x27\xed\xec\xf7\x4c\x56\x63\x52\x60\x9e\x1c\xf9\x62\xb0\x09\x03\x29\xe8\x22\xfa\x93\x3b\xad\x87\x10\x8f\xda\x62\x42\x05\x4c\xcc\x2e\xf8\xaf\x2d\xdf\x3f\x90\x49\x0a\xd0\x24\xf7\x42\xb5\xb8\xbd\xbc\xde\xaf\xb6\x62\x51\xc9\x65\xc3\xae\x93\x0a\xe4\xb2\x99\x68\x52\x41\xbb\xb9\xab\xea\x51\x2b\xcc\xe2\x8f\x94\x32\x4e\xe0\x1f\xe9\x74\xde\x3f\xa6\x7b\x85\x26\x15\xa4\x98\xa9\xbe\xf8\xab\x80\x48\x87\x48\xdc\xcf\xb8\x01\x13\x2c\xcd\x38\x7e\x70\xd6\xcc\x38\xfe\xf0\x68\xfe\xff\xeb\xff\xfe\x0f\xaf\xc2\xab\x17\x9f\x01\x00\x00\xff\xff\x97\x6c\xcb\x19\x21\x05\x00\x00")

func migrationsSqlTests5_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests5_testSql,
		"migrations/sql/tests/5_test.sql",
	)
}

func migrationsSqlTests5_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests5_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/5_test.sql", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests6_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x94\x4f\x4b\x03\x31\x10\xc5\xcf\xcd\xa7\x98\x5b\x76\x31\x7b\xf1\xd0\x8b\x27\xc1\x1e\x0a\xb2\x05\xdb\xea\x31\x8c\xc9\x74\x37\x6a\x93\x35\x93\x28\x22\x7e\x77\xe9\x66\xfd\x73\xf2\x03\xb8\x87\xc0\xcc\x7b\x81\x1f\xef\x05\xd2\x34\x70\x76\x74\x5d\xc4\x44\xb0\x1f\x84\x58\xb7\xdb\xd5\xcd\x0e\xd6\xed\x6e\x23\x16\xfd\x9b\x8d\xa8\x03\xe6\xd4\x9f\x6b\x34\x86\x98\xa1\x62\xd7\x79\x4c\x39\x92\x82\x48\xcf\x99\x38\x69\x67\xbf\x67\xb2\x1a\x93\x02\xf3\xe4\xc8\x17\x83\x4d\x18\x48\x41\x17\xd1\x9f\xdc\x69\x3d\x84\x78\xd4\x16\x13\x2a\x60\x62\x76\xc1\x7f\x6d\xf9\xfe\x81\x4c\x52\x80\x26\xb9\x17\xaa\xc5\xed\xe5\xf5\x7e\xb5\x15\x8b\x4a\x2e\x1b\x76\x9d\x54\x20\x97\xcd\x44\x93\x0a\xda\xcd\x5d\x55\x8f\x5a\x61\x16\x7f\xa4\x94\x71\x02\xff\x48\xa7\xf3\xfe\x31\xdd\x2b\x34\xa9\x20\xc5\x4c\xf5\xc5\x5f\x05\x44\x3a\x44\xe2\x7e\xc6\x0d\x98\x60\x69\xc6\xf1\x83\xb3\x66\xc6\xf1\x87\x47\xf3\xff\x5f\xff\xf7\x7f\x78\x15\x5e\xbd\xf8\x0c\x00\x00\xff\xff\xcb\x85\xfa\x4d\x21\x05\x00\x00")

func migrationsSqlTests6_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests6_testSql,
		"migrations/sql/tests/6_test.sql",
	)
}

func migrationsSqlTests6_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests6_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/6_test.sql", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests7_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\x31\x4f\xc3\x30\x10\x85\xe7\xfa\x57\xdc\x96\x46\x38\x0b\x4b\x07\x26\x24\x3a\x54\x42\xa9\x44\x5b\x18\xa3\xc3\xbe\x26\x06\x6a\x07\x9f\x0d\x42\x88\xff\x8e\x52\xa7\x90\x2e\x88\x21\x63\x86\x48\x77\xef\xc5\x4f\x4f\x9f\x2c\xb9\x28\xe0\xe2\x60\x6a\x8f\x81\x60\xd7\x0a\xb1\x2a\x37\xcb\xbb\x2d\xac\xca\xed\x5a\xcc\x9a\x0f\xed\xb1\x72\x18\x43\x73\x59\xa1\x52\xc4\x0c\x73\x36\xb5\xc5\x10\x3d\x49\xf0\xf4\x1a\x89\x43\x65\xf4\xcf\x4c\xba\xc2\x20\x41\xbd\x18\xb2\xc9\x60\xe5\x5a\x92\x50\x7b\xb4\x9d\xdb\xaf\x7b\xe7\x0f\x95\xc6\x80\x12\x98\x98\x8d\xb3\xa7\x2d\x3e\x3e\x91\x0a\x12\x50\x05\xf3\x46\x67\xc1\x51\x1b\xb2\x6a\x10\x76\x52\x72\x71\x7f\x7d\xbb\x5b\x6e\xc4\x6c\x9e\x2d\x0a\x36\x75\x26\x21\x5b\x14\xfd\xd1\x4c\x42\xb9\x7e\x98\xe7\x47\x2d\x35\x4b\xfe\xb1\x4b\x1a\xfb\xc4\x5f\xa9\xfb\x3e\xbf\xfa\xff\x52\xa7\x4c\x42\xf0\x91\x86\xd1\xa4\x0b\x8c\xfa\x3c\xa2\x13\xf2\xab\xbf\x50\x7a\xda\x7b\xe2\x66\x62\x39\x02\x4b\xe5\x34\x4d\x20\x47\x00\xe9\x8c\x56\x13\xc8\x11\x40\xb6\xcf\x6a\xba\x91\xff\x07\x39\x7c\x81\x6e\xdc\xbb\x15\xdf\x01\x00\x00\xff\xff\x49\xf5\x0d\xb6\x93\x06\x00\x00")

func migrationsSqlTests7_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests7_testSql,
		"migrations/sql/tests/7_test.sql",
	)
}

func migrationsSqlTests7_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests7_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/7_test.sql", size: 1683, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests8_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\xbf\x6a\xc3\x30\x10\x87\xe7\xe8\x29\x6e\x73\x42\xe5\xa5\x53\xa0\x53\xa1\x19\x02\xc6\x81\x26\x6e\x47\x71\x95\x2e\xb6\x5a\x47\x72\xf5\xa7\xa5\x94\xbe\x7b\x49\xe4\x36\xce\xd2\xa5\x78\xf3\x20\xb8\xfb\x9d\xf8\x38\x3e\x04\xca\x73\xb8\x3a\xe8\xda\x61\x20\xa8\x3a\xc6\xd6\xe5\x76\x75\xbf\x83\x75\xb9\xdb\xb0\x59\xf3\xa1\x1c\x0a\x8b\x31\x34\xd7\x02\xa5\x24\xef\x61\xee\x75\x6d\x30\x44\x47\x1c\x1c\xbd\x46\xf2\x41\x68\xf5\x5b\x93\x12\x18\x38\xc8\x56\x93\x49\x03\x2f\x6d\x47\x1c\x6a\x87\xe6\x38\xed\xdb\xbd\x75\x07\xa1\x30\x20\x07\x4f\xde\x6b\x6b\x7e\xba\xf8\xf4\x4c\x32\x70\x40\x19\xf4\x1b\x5d\x80\xa3\xd2\x64\xe4\x00\x76\x4e\x64\x83\x6d\x4b\xa6\x26\xa1\xd5\x82\x3d\xdc\x16\xd5\x6a\xcb\x66\xf3\x6c\x99\x7b\x5d\x67\x1c\xb2\x65\xde\x83\x32\x0e\xe5\xe6\x71\xbe\x38\x65\x69\xcf\x34\x3f\x6d\x96\xca\x9e\x7f\x8e\x8e\xe7\xf3\xab\xbf\x97\x36\xcc\x38\x04\x17\x69\x88\x26\x95\x63\x54\x97\x88\x14\x94\x55\x51\x2c\x6e\xfe\xd2\xeb\x68\xef\xc8\x37\x93\xdf\x91\xfc\x4a\xab\x68\x92\x3b\x92\x5c\xab\x95\x9c\xe4\x8e\x24\xb7\x7b\x91\xd3\xcb\xfd\x9f\xdc\xe1\x2f\x77\x67\xdf\x0d\xfb\x0e\x00\x00\xff\xff\xc1\xaa\xd6\x5b\xf7\x06\x00\x00")

func migrationsSqlTests8_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests8_testSql,
		"migrations/sql/tests/8_test.sql",
	)
}

func migrationsSqlTests8_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests8_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/8_test.sql", size: 1783, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests9_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xc1\x6e\xdc\x36\x10\x3d\x67\xbf\x82\xd8\x8b\x6c\x94\x9b\x75\x5c\x24\x80\xdd\x53\x81\xe6\x10\xa0\x70\x80\xc6\x69\x0f\x45\x41\x50\xe4\x48\xa2\x57\xcb\x51\x39\x94\xd7\xae\xd7\xff\x5e\x50\x14\x25\xed\x46\x70\x52\xa0\x46\x7b\xf0\xc5\x20\x87\x9c\xd1\xcc\x7b\x6f\x86\x0b\xaf\x56\xec\xbb\xad\x29\x9d\xf4\xc0\x3e\x37\x8b\x0f\x57\x9f\xde\xff\x72\xcd\x3e\x5c\x5d\x7f\x64\xd5\xbd\x76\x52\xa8\xda\x80\xf5\xec\xc4\x68\xce\x64\x5d\xe3\x0e\xb4\x50\xe8\x48\xa0\x33\xa5\xb1\xc4\x59\xbc\x21\xac\xdc\xc2\xb0\x21\x50\x0e\x3c\x67\x0e\xb4\x71\xa0\xbc\x68\x9d\x21\xce\x4a\x27\xad\x17\xfe\xbe\x01\x0a\x67\xd4\xa0\x25\x48\x7b\x52\xd8\x00\x67\xb8\xb3\xe0\x38\x6b\xb0\x36\xea\x3e\xf8\x71\xe6\x91\xe2\xa2\x8f\xde\xad\x6b\x2c\xb1\xb7\xa2\xf5\x52\x79\x3a\xfa\xba\x80\xbb\xc6\x38\x20\x21\x3d\x67\x04\xca\xa3\x13\x46\x83\xf5\xa6\x30\xe0\xa2\xeb\xcd\x6e\x43\xf1\x6f\xfa\xd2\x06\xac\x00\xab\x1b\x34\xd6\x0b\xd9\xfa\x4a\x6c\xc1\x57\xa8\x43\xbe\x7f\xb6\x40\xa9\x94\xb4\xc3\xfc\x26\xd4\x47\xa6\xb4\xc6\x96\x42\xd6\x25\x67\x2d\x81\x33\xb6\xc0\xce\x0a\x5a\x0c\x95\x76\xa7\xd4\x46\x97\x50\x36\x67\xb2\xd5\x06\xac\x02\xce\x0a\x87\xd6\xab\x4a\x5a\x0b\xb5\x08\xd5\xb5\x7d\xa5\x73\x07\x04\x44\x06\xad\x08\x69\x18\x07\x3a\x00\x46\x3e\x9d\x1e\xc1\x9e\x4b\xb5\x99\x0b\x3c\x63\xff\x32\xee\x16\xbc\xd4\xd2\xcb\xd3\xc5\xaf\x3f\xfe\xfc\xf9\xfd\xa7\x05\x63\x27\xd9\xc5\x2a\x42\x9d\x71\x96\x55\xde\x37\x97\xeb\x75\x8d\x4a\xd6\x15\x92\xdf\xf7\x86\x12\xb1\xac\x21\xdc\x20\xdc\xc2\xc4\x41\xe6\x4a\x43\xf1\x6d\xae\x81\x01\x74\xe6\x2f\x10\x0a\x35\xec\xcd\xb6\xa9\x8d\x32\x5d\x98\x8e\xab\xbd\xd1\xa2\x5b\x04\x4b\x81\xb8\xcf\xa5\xeb\xfc\xc0\x82\xa4\xc9\x37\xa2\x9e\x26\x06\x8f\xd3\xe3\x99\x72\x4a\x1c\x03\xed\x0b\x0c\xbb\xb3\xf1\x3c\x0a\x2a\xdc\x78\x58\x6e\xe0\x9e\x96\x97\xec\xf7\x3f\x1e\x27\x01\x82\xa8\xc2\xd6\xa2\x85\x89\xb9\x75\xe6\xcd\x7e\x5c\x9f\x87\x23\x47\xe7\x6f\xdf\xc5\xc5\xdb\xf3\x6e\xd1\xb4\x79\x6d\x54\x72\xa3\xcb\xf5\x7a\xb7\xdb\xbd\x46\x77\xff\x9a\xaa\xb5\x6c\xcc\x24\x60\xa1\x56\x91\xbb\x75\xc6\x99\x77\x2d\x8c\x47\x9d\x0c\xde\xac\xf7\xd3\xed\xf9\x7a\xe2\x9b\xcf\xf8\x3e\x2c\x0b\xc4\xe5\xe5\x32\x97\x6e\xf9\x98\x9d\xfe\xb0\x98\x0e\x85\xc5\xab\x38\x15\x30\xf0\x72\xde\xf5\x47\x68\x28\x25\x7d\x10\x4d\x2f\x9e\x7e\x58\x8c\x67\xa0\x63\x0f\x46\xe1\x0f\x42\x7a\x15\x74\x54\x63\x69\xec\xaa\xf7\x5c\x19\x9d\x71\x76\xf5\xf1\xb7\x93\x53\xce\xb2\x8b\x15\xb5\xf9\x3f\xcb\xa0\xef\x4a\x76\xa2\x2a\x59\xd7\x60\x4b\xe0\xec\x16\x5c\xd7\xf1\xc3\x78\x08\xd9\xf5\xb9\x4c\xbb\xba\xe6\x8c\x36\xa6\x19\x4c\xa0\x45\x3f\x92\x14\xb9\x62\xae\xa0\xf1\x62\xd8\xa1\xd1\x4a\x84\x59\x04\x77\xbe\x1b\x4f\x66\x40\xa4\xfb\xe4\xf4\xb6\x48\x6d\x7f\x08\xc6\x90\x75\xd6\x95\x9f\x32\x8f\xbb\x51\xa2\x1d\x30\x21\xfd\xb8\x49\xdd\x9e\x71\x56\xc8\x9a\x20\xde\x08\xa9\xf7\x8e\xe4\x8a\x11\xd6\x84\xee\xc3\x63\x3c\x9d\x21\x20\xbb\x58\xc9\x56\x7f\x05\x79\x15\x26\x9a\xf5\xff\x23\xc8\x0b\x74\x2a\x44\xe8\xe7\xeb\x38\xeb\xe7\xd8\x88\x96\x49\xce\xb3\xf4\x70\x26\x95\x8b\x2f\x0c\xdc\xf9\xff\x9e\xac\x58\x62\xd7\x17\x4f\x90\x77\x94\x59\xe0\x32\x2e\x54\x1c\x58\x5f\x6b\xeb\x23\x6a\x45\x25\xad\xae\x41\x1f\x50\xdc\x3d\xe5\x23\x5f\x0e\xb6\xb0\xcd\x03\xd4\x69\x25\x0a\x74\x9c\x81\x73\xe8\x8e\x69\x4b\x3c\x48\xa5\x80\x28\xce\xef\xd1\x9a\x26\xfa\x1c\xfd\x3b\x49\xa2\xa5\xf0\x2c\xa5\xef\x7f\x6b\x2f\x25\x88\xe3\x94\xfb\xfe\xdd\xd9\x59\x82\xf5\x10\xe3\xa9\x69\x24\x28\xb5\xc3\x6a\xc5\xae\x2b\x60\x8d\x83\x5b\x83\x2d\xb1\xbc\x46\xb5\x61\x86\xd8\x4d\x4b\x9e\x79\x64\x25\xf8\xa0\x43\x30\xa5\x65\xe1\x59\x60\x3b\x74\x1b\x63\xcb\x27\x67\x58\x07\x03\x3b\x09\xbf\x16\xa4\x6f\xdd\x28\xc6\x2f\xe6\xc6\x61\x43\x45\xe8\x8f\x98\x28\xd0\x6d\x45\x78\xb0\x47\x44\xfb\x5d\xea\x3f\xa9\xbc\xb9\x3d\x54\xfc\x20\xf7\x01\xd6\xc1\x32\xe0\x28\x8c\x3e\x44\x98\x4c\x99\x34\xdd\x05\x3a\x18\xdd\x07\x0d\x30\xca\xbb\x8f\x3f\x9a\xb2\x89\xba\xc7\x46\xe9\xdf\xa2\x09\x8b\xa0\x47\x1d\xa7\x20\x83\x61\xe4\xfa\x69\x61\x3b\x28\x1c\x50\xf5\x02\xf5\xf3\x43\x1d\x7e\xae\xbd\xe0\xfc\xfc\x38\x87\x27\xf0\x05\xe7\xe7\xc7\xb9\xd9\xa8\x17\x3d\xff\x6b\x38\x4f\xff\xed\xf0\x13\xee\xec\xe2\xef\x00\x00\x00\xff\xff\xeb\x46\xd4\x8f\x88\x10\x00\x00")

func migrationsSqlTests9_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests9_testSql,
		"migrations/sql/tests/9_test.sql",
	)
}

func migrationsSqlTests9_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests9_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/9_test.sql", size: 4232, mode: os.FileMode(420), modTime: time.Unix(1575291413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/cockroach/9.sql":   migrationsSqlCockroach9Sql,
	"migrations/sql/mysql/.gitkeep":    migrationsSqlMysqlGitkeep,
	"migrations/sql/mysql/10.sql":      migrationsSqlMysql10Sql,
	"migrations/sql/mysql/5.sql":       migrationsSqlMysql5Sql,
	"migrations/sql/mysql/6.sql":       migrationsSqlMysql6Sql,
	"migrations/sql/mysql/7.sql":       migrationsSqlMysql7Sql,
	"migrations/sql/mysql/9.sql":       migrationsSqlMysql9Sql,
	"migrations/sql/postgres/.gitkeep": migrationsSqlPostgresGitkeep,
	"migrations/sql/postgres/10.sql":   migrationsSqlPostgres10Sql,
	"migrations/sql/postgres/5.sql":    migrationsSqlPostgres5Sql,
	"migrations/sql/postgres/6.sql":    migrationsSqlPostgres6Sql,
	"migrations/sql/postgres/7.sql":    migrationsSqlPostgres7Sql,
	"migrations/sql/postgres/9.sql":    migrationsSqlPostgres9Sql,
	"migrations/sql/shared/1.sql":      migrationsSqlShared1Sql,
	"migrations/sql/shared/2.sql":      migrationsSqlShared2Sql,
	"migrations/sql/shared/3.sql":      migrationsSqlShared3Sql,
	"migrations/sql/shared/4.sql":      migrationsSqlShared4Sql,
	"migrations/sql/shared/8.sql":      migrationsSqlShared8Sql,
	"migrations/sql/tests/.gitkeep":    migrationsSqlTestsGitkeep,
	"migrations/sql/tests/10_test.sql": migrationsSqlTests10_testSql,
	"migrations/sql/tests/1_test.sql":  migrationsSqlTests1_testSql,
	"migrations/sql/tests/2_test.sql":  migrationsSqlTests2_testSql,
	"migrations/sql/tests/3_test.sql":  migrationsSqlTests3_testSql,
	"migrations/sql/tests/4_test.sql":  migrationsSqlTests4_testSql,
	"migrations/sql/tests/5_test.sql":  migrationsSqlTests5_testSql,
	"migrations/sql/tests/6_test.sql":  migrationsSqlTests6_testSql,
	"migrations/sql/tests/7_test.sql":  migrationsSqlTests7_testSql,
	"migrations/sql/tests/8_test.sql":  migrationsSqlTests8_testSql,
	"migrations/sql/tests/9_test.sql":  migrationsSqlTests9_testSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"sql": &bintree{nil, map[string]*bintree{
			"cockroach": &bintree{nil, map[string]*bintree{
				"9.sql": &bintree{migrationsSqlCockroach9Sql, map[string]*bintree{}},
			}},
			"mysql": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlMysqlGitkeep, map[string]*bintree{}},
				"10.sql":   &bintree{migrationsSqlMysql10Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlMysql5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlMysql6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlMysql7Sql, map[string]*bintree{}},
				"9.sql":    &bintree{migrationsSqlMysql9Sql, map[string]*bintree{}},
			}},
			"postgres": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlPostgresGitkeep, map[string]*bintree{}},
				"10.sql":   &bintree{migrationsSqlPostgres10Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlPostgres5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlPostgres6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlPostgres7Sql, map[string]*bintree{}},
				"9.sql":    &bintree{migrationsSqlPostgres9Sql, map[string]*bintree{}},
			}},
			"shared": &bintree{nil, map[string]*bintree{
				"1.sql": &bintree{migrationsSqlShared1Sql, map[string]*bintree{}},
				"2.sql": &bintree{migrationsSqlShared2Sql, map[string]*bintree{}},
				"3.sql": &bintree{migrationsSqlShared3Sql, map[string]*bintree{}},
				"4.sql": &bintree{migrationsSqlShared4Sql, map[string]*bintree{}},
				"8.sql": &bintree{migrationsSqlShared8Sql, map[string]*bintree{}},
			}},
			"tests": &bintree{nil, map[string]*bintree{
				".gitkeep":    &bintree{migrationsSqlTestsGitkeep, map[string]*bintree{}},
				"10_test.sql": &bintree{migrationsSqlTests10_testSql, map[string]*bintree{}},
				"1_test.sql":  &bintree{migrationsSqlTests1_testSql, map[string]*bintree{}},
				"2_test.sql":  &bintree{migrationsSqlTests2_testSql, map[string]*bintree{}},
				"3_test.sql":  &bintree{migrationsSqlTests3_testSql, map[string]*bintree{}},
				"4_test.sql":  &bintree{migrationsSqlTests4_testSql, map[string]*bintree{}},
				"5_test.sql":  &bintree{migrationsSqlTests5_testSql, map[string]*bintree{}},
				"6_test.sql":  &bintree{migrationsSqlTests6_testSql, map[string]*bintree{}},
				"7_test.sql":  &bintree{migrationsSqlTests7_testSql, map[string]*bintree{}},
				"8_test.sql":  &bintree{migrationsSqlTests8_testSql, map[string]*bintree{}},
				"9_test.sql":  &bintree{migrationsSqlTests9_testSql, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
